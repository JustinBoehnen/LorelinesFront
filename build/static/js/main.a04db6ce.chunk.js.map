{"version":3,"sources":["images/logo.svg","images/UserTutorials.pdf","actions/index.js","components/LoginForm.js","components/Topbar.js","components/Sidebar.js","components/Timeline.js","components/Account.js","components/directory_interaction/DirectoryList.js","components/instance_fields/InstanceDivider.js","components/instance_fields/InstanceHeader.js","components/directory_interaction/InstanceViewer.js","components/custom_entity_fields/EntityField.js","components/custom_entity_fields/SectionDivider.js","components/custom_entity_fields/RadioListEntityField.js","components/directory_interaction/CustomEntityCreator.js","components/instance_fields/InstanceTextField.js","components/instance_fields/InstanceCheckBoxField.js","components/instance_fields/InstanceNumberField.js","components/instance_fields/InstanceRadioListField.js","components/instance_fields/InstanceImageField.js","components/directory_interaction/EntityInstanceCreator.js","components/Directory.js","components/About.js","components/loreline_interaction/NewLorelineDialog.js","components/loreline_interaction/DeleteLorelineDialog.js","components/Lorelines.js","components/Help.js","components/Home.js","components/RegisterForm.js","components/RegisterConfirmation.js","components/PasswordRecovery/ForgotPassword.js","components/PasswordRecovery/ChangePassword.js","components/PasswordRecovery/SecurityQ.js","components/PasswordRecovery/PasswordConfirmation.js","App.js","serviceWorker.js","reducers/index.js","reducers/UserReducer.js","reducers/DirectoryReducer.js","reducers/WindowReducer.js","reducers/LoadingReducer.js","reducers/ThemeReducer.js","reducers/CurrentLorelineReducer.js","reducers/LorelineArrayReducer.js","reducers/CurrentEntityReducer.js","reducers/CurrentInstanceReducer.js","reducers/AxiosInstanceReducer.js","index.js"],"names":["module","exports","setUser","user","type","payload","setLoreline","lorelineId","setLorelineArray","lorelineArray","setLoading","isLoading","setTheme","theme","setWindowWidth","width","setWindowHeight","height","setInstanceId","instanceId","console","log","setInstance","entityId","dispatch","axios","get","then","response","setInstanceSuccess","data","catch","error","instance","setEntityId","setDirectory","directory","useStyles","makeStyles","content","flexGrow","link","color","palette","secondary","main","textDecoration","field","minWidth","LoginForm","props","useState","email","setEmail","password","setPassword","submitAttempted","setSubmitAttempted","loginFailed","setLoginFailed","showPassword","setShowPassword","classes","onSubmit","e","a","preventDefault","Validator","validate","tryLogin","accept","className","Grid","style","minHeight","textAlign","container","direction","justify","alignItems","alt","src","Logo","item","Typography","padding","fontWeight","fontSize","TextField","helperText","name","label","variant","margin","autoComplete","InputProps","startAdornment","InputAdornment","position","Mail","inputProps","dataTestId","value","onChange","target","Lock","endAdornment","IconButton","aria-label","onClick","onMouseDown","event","Visibility","VisibilityOff","Button","marginTop","borderRadius","to","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","toolbar","justifyContent","mixins","logo","fill","breakpoints","up","orange","primary","logoutButton","backgroundColor","logoutIcon","Topbar","useTheme","widthAboveMd","useMediaQuery","LogoutButton","logout","ExitToApp","AppBar","clsx","drawerOpen","Toolbar","setDrawerOpen","edge","Menu","xmlns","viewBox","id","data-name","cx","cy","r","d","flexShrink","whiteSpace","overflowX","drawerClose","spacing","connect","state","loreline","Drawer","paper","open","Close","Divider","List","ListItem","button","key","ListItemIcon","AccountCircle","ListItemText","Apps","Timeline","disabled","Info","drawerPaper","anchor","window","bindActionCreators","timestamp","toString","substring","date","Date","parseInt","gutterBottom","length","DirectoryList","handleInstanceSelect","setMode","modes","INSTANCE_VIEWER","handleEntityDropdown","setState","handleEntityDelete","anchorEl","currentTarget","deleteEntityId","deleteEntityName","handleEntityDeleteCancel","deleteEntityFromDB","delete","updateList","handleEntityInstantiation","INSTANCE_CREATION","this","updateDirectoryList","marginBottom","Array","from","map","entity","_id","borderStyle","borderWidth","borderColor","ButtonGroup","fullWidth","AddCircle","overflow","textOverflow","textTransform","ExpandLess","ExpandMore","Delete","Collapse","in","timeout","unmountOnExit","component","disablePadding","instances","i","Popover","Boolean","undefined","onClose","anchorOrigin","vertical","horizontal","transformOrigin","align","Component","flex","InstanceDivider","InstanceHeader","InstanceViewer","Card","CardContent","RadioGroup","option","FormControlLabel","control","Radio","labelPlacement","index","Checkbox","checked","card","input","EntityField","validationFailed","errorStyle","border","xs","InputBase","placeholder","changeLabel","typeName","Tooltip","title","remove","SectionDivider","options","setOptions","updateOptions","op","handleRemoveOption","array","splice","handleOptionLabelChange","optionsNeedLabels","Option","removeOption","startIcon","Add","newBoxes","concat","placement","size","CustomEntityCreator","handleFeedbackClose","reason","creationFeedbackOpen","addEntityToDB","post","handleAddItem","commonName","actualName","fields","handleMenuClose","handleRemoveItem","handleMenuClick","handleFieldLabelChange","handleNameChange","handleColorChange","hex","handleSetRadioOptions","handleCreateEntity","forEach","errorMessage","onChangeComplete","keepMounted","MenuItem","Save","Snackbar","autoHideDuration","message","action","Fragment","InstanceTextField","multiline","rowsMax","setContent","InstanceCheckBoxField","InstanceNumberField","InstanceRadioListField","CardHeader","subheader","setValue","image","noImage","getImageURL","file","FormData","append","headers","_boundary","res","CardMedia","imageURL","files","failed","alert","toFixed","url","handleFileChange","addInstanceToDB","retreiveEntityFromDB","entityName","handleInstanceNameChange","instanceName","handleContentChange","handleRadioChange","handleCreateInstance","React","mode","IDLE","ENTITY_CREATION","ModeComponent","EntityInstanceCreator","Fab","bottom","right","NewLorelineDialog","Dialog","isOpen","handleNewDialogClose","DialogTitle","DialogContent","lorelineName","autoFocus","onLorelineNameChange","FormGroup","setNewLorelineImage","newLorelineImage","arrow","usingStaticEnities","toggleUsingStaticEntities","DialogActions","onNewLorelineSubmit","deletebutton","DeleteLorelineDialog","deleteDialogOpen","handleDeleteDialogClose","deleteLorelineName","DialogContentText","deleteLorelineFromDB","deleteLorelineId","selectedCard","boxShadow","cardimage","cardheader","setDeleteDialogOpen","setUsingStaticEntities","newDialogOpen","setNewDialogOpen","setDeleteLorelineId","setDeleteLorelineName","setCreationFeedbackOpen","setLorelineName","useEffect","GetLorelines","createNewLoreline","imagePath","indexOf","CardActionArea","modified","toLocaleDateString","toLocaleTimeString","CardActions","FileCopy","href","PDF","download","styleClasses","box","openWidth","closedWidth","topBar","Home","toggleDrawer","updateWindowDimensions","bind","addEventListener","removeEventListener","innerWidth","innerHeight","auth","path","formControl","RegisterForm","verified","setVerified","securityOpen","setSecurityOpen","setAccountCreated","confirmEmail","confirmPassword","securityQ","securityAnswer","showConfirmPassword","showSecurityAnswer","emailExists","values","setValues","handleChange","prop","handleMouseDownPassword","confirmpassword","FormControl","InputLabel","Select","labelId","onOpen","Item","sitekey","render","verifyCallback","onloadCallback","exists","createUser","setSubmitAttempt","setID","idObj","setIdObj","notFound","setNotFound","disableBut","setDisabled","GetUserId","SetPropId","resid","setNewPassword","setConfirmPassword","setShowConfirmPassword","ChangePassword","question","setQuestion","securityPassword","setSecurityPassword","setDisable","wrongAnswer","setWrongAnswer","GetSeqQuestion","CheckQuestion","jwtDecode","require","light","createMuiTheme","contrastText","text","icons","themes","dark","center","flexDirection","App","loading","localStorage","setItem","securityQuestion","removeItem","userData","token","getItem","put","temp","colorTheme","Backdrop","CircularProgress","CssBaseline","exact","ForgotPassword","SecurityQ","PasswordConfirmation","location","hostname","match","allReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a04db6ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e2142875.svg\";","module.exports = __webpack_public_path__ + \"static/media/UserTutorials.d44d2e9e.pdf\";","/** @format */\r\n//******************************************************************************\r\n// src/actions/index.js\r\n// Holds all the Redux functions that are used to set global Redux variables\r\n//\r\n//\r\nimport axios from 'axios'\r\n\r\nconst apiUrl = 'https://lorelines-expressapi.herokuapp.com/api/lorelines';\r\n\r\n//******************************************************************************\r\n// Set User Redux Function\r\n// File(s) Used: App.js\r\nexport const setUser = user => {\r\n  return {\r\n    type: 'USER_SET',\r\n    payload: user\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Loreline Redux Function\r\n// File(s) Used: App.js, Lorelines.js\r\nexport const setLoreline = lorelineId => {\r\n  return {\r\n    type: 'LORELINE_CHANGED',\r\n    payload: lorelineId\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Loreline Array Redux Function\r\n// File(s) Used: Lorelines.js\r\nexport const setLorelineArray = lorelineArray => {\r\n  return {\r\n    type: 'SET_LORELINE_ARRAY',\r\n    payload: lorelineArray\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Loading Redux Function\r\n// File(s) Used: App.js, Lorelines.js, Home.js, Directory.js\r\nexport const setLoading = isLoading => {\r\n  return {\r\n    type: 'SET_LOADING',\r\n    payload: isLoading\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Theme Redux Function\r\n// File(s) Used: Account.js\r\nexport const setTheme = theme => {\r\n  return {\r\n    type: 'SET_THEME',\r\n    payload: theme\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Window Width Redux Function\r\n// File(s) Used: Home.js\r\nexport const setWindowWidth = width => {\r\n  return {\r\n    type: 'SET_WINDOW_WIDTH',\r\n    payload: width\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Window Height Redux Function\r\n// File(s) Used: Home.js\r\nexport const setWindowHeight = height => {\r\n  return {\r\n    type: 'SET_WINDOW_HEIGHT',\r\n    payload: height\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Instance Id Redux Function\r\n// Set's instance id global variable to current Id\r\n// File(s) Used: DirectoryList.js\r\nexport const setInstanceId = instanceId => {\r\n  console.log('set instance to: ', instanceId)\r\n  return {\r\n    type: 'INSTANCEID_CHANGED',\r\n    payload: instanceId\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Instance Redux Function\r\n// Set's instance object global variable to current instance\r\n// File(s) Used: DirectoryList.js\r\nexport const setInstance = ( lorelineId, entityId, instanceId ) => {\r\n  console.log('Passed in values are: ', (lorelineId, entityId, instanceId))\r\n  return (dispatch) => {\r\n    return axios.get(`${apiUrl}/${lorelineId}/entities/${entityId}/instances/${instanceId}`)\r\n      .then(response => {\r\n        dispatch(setInstanceSuccess(response.data))\r\n      })\r\n      .catch(error => {\r\n        throw(error);\r\n      });\r\n  };\r\n};\r\n\r\n//******************************************************************************\r\n// Set Instance Success Redux Function\r\n// A function only called in dispatch to avoid sync problems\r\n// Catches the instance from the setInstance function\r\n// File(s) Used: N/A\r\nexport const setInstanceSuccess = (instance) => {\r\n  console.log('Should be instance object: ', instance)\r\n  return {\r\n    type: 'INSTANCE_CHANGED',\r\n    payload: instance\r\n  }\r\n};\r\n\r\n//******************************************************************************\r\n// Set Entity Id Redux Function\r\n// File(s) Used: DirectoryList.js\r\nexport const setEntityId = entityId => {\r\n  console.log('set entity to: ', entityId)\r\n  return {\r\n    type: 'ENTITY_CHANGED',\r\n    payload: entityId\r\n  }\r\n}\r\n\r\n//******************************************************************************\r\n// Set Directory Redux Function\r\n// File(s) Used: ???\r\nexport const setDirectory = directory => {\r\n  console.log ('set directory to: ', directory)\r\n  return {\r\n    type: 'DIRECTORY_CHANGED',\r\n    payload: directory\r\n  }\r\n}","/** @format */\r\n//******************************************************************************\r\n// LoginForm.js\r\n// Login Form function that appears to users who have not logged in to\r\n// Lorelines.com\r\n//\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"../images/logo.svg\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Mail, Lock, Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Validator from \"email-validator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n  field: {\r\n    width: \"20vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport default function LoginForm(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [submitAttempted, setSubmitAttempted] = useState(false);\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  //const onSubmit = (e) => {\r\n  //    e.preventDefault();\r\n  //}\r\n\r\n  const onEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  const onPasswordChange = (e) => setPassword(e.target.value);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitAttempted(true);\r\n\r\n    if (Validator.validate(email) && password !== \"\") {\r\n      let accept = await props.tryLogin(email, password);\r\n      if (!accept) setLoginFailed(true);\r\n      return accept;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const handleMouseDownPassword = (event) => event.preventDefault();\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: \"100vh\", textAlign: \"center\" }}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <img alt=\"logo\" src={Logo} width={160} />\r\n          <br />\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 900,\r\n                fontSize: 50,\r\n              }}\r\n            >\r\n              Log in to Lorelines\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={\r\n                (submitAttempted && email === \"\") ||\r\n                (submitAttempted && !Validator.validate(email))\r\n              }\r\n              helperText={\r\n                submitAttempted && email === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\" || (submitAttempted && !Validator.validate(email))\r\n                  ? \"invalid email address\"\r\n                  : \"\"\r\n              }\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              autoComplete=\"off\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Mail color=\"secondary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              inputProps={{\r\n                dataTestId: \"loginEmail\",\r\n              }}\r\n              value={email}\r\n              onChange={onEmailChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={submitAttempted && password === \"\"}\r\n              helperText={\r\n                submitAttempted && password === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\"\r\n              }\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              autoComplete=\"off\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Lock color=\"secondary\" />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              inputProps={{\r\n                dataTestId: \"loginPassword\",\r\n              }}\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n          </Grid>\r\n          {loginFailed && (\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.error}\r\n                style={{ padding: 5, fontSize: 16 }}\r\n              >\r\n                an incorrect email or password was provided\r\n                <br />\r\n                please try again\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <Button\r\n              dataTestId=\"loginSubmit\"\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: \"50px\",\r\n                width: \"260px\",\r\n              }}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={async (e) => await onSubmit(e)}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              I forgot{\" \"}\r\n              <Link className={classes.link} to=\"/forgot\">\r\n                my password\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 30, fontSize: 20 }}>\r\n              Don't have a Lorelines account?{\" \"}\r\n              <Link className={classes.link} to=\"/register\">\r\n                Click here\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Topbar.js\r\n// Holds the Topbar function that displays the bar at the top of the website\r\n// Contains the logout button\r\n//\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  IconButton,\r\n  Button,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { Menu, ExitToApp } from \"@material-ui/icons\";\r\n\r\nconst drawerWidthExpanded = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidthExpanded,\r\n    width: `calc(100% - ${drawerWidthExpanded}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  logo: {\r\n    fill: \"#fff\",\r\n    height: 35,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: 50,\r\n    },\r\n  },\r\n  orange: {\r\n    fill: theme.palette.primary.main,\r\n  },\r\n  logoutButton: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: \"white\",\r\n    fontSize: 14,\r\n    fontWeight: \"bolder\",\r\n    marginLeft: \"auto\",\r\n    marginRight: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#303030\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  logoutIcon: {\r\n    marginLeft: \"auto\",\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function Topbar(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const widthAboveMd = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  function LogoutButton() {\r\n    if (widthAboveMd)\r\n      return (\r\n        <Button\r\n          dataTestId=\"logout\"\r\n          className={classes.logoutButton}\r\n          onClick={props.logout}\r\n        >\r\n          Log Out\r\n        </Button>\r\n      );\r\n\r\n    return (\r\n      <IconButton className={classes.logoutIcon} onClick={props.logout}>\r\n        <ExitToApp />\r\n      </IconButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.drawerOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => props.setDrawerOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(\r\n              classes.menuButton,\r\n              props.drawerOpen && classes.hide\r\n            )}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 41.17 41.17\"\r\n          >\r\n            <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n              <g id=\"Layer_1-2\" data-name=\"Layer 1\">\r\n                <circle className=\"cls-1\" cx=\"20.58\" cy=\"20.58\" r=\"20.58\" />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M16.76,13.22a.46.46,0,0,0,.74-.12l1.21-2.4a1.51,1.51,0,0,0-.91-2.11A1.55,1.55,0,0,0,16,9.43l-.86,1.71a.46.46,0,0,0,.09.54Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M13.08,16.61a.47.47,0,0,0-.75.13L5.46,30.47a1.51,1.51,0,0,0,1.15,2.16,1.54,1.54,0,0,0,1.57-.87l6.53-13.07a.47.47,0,0,0-.09-.54Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M34.56,8.53A1.55,1.55,0,0,0,33,9.41L26.46,22.48a.46.46,0,0,0,.09.53l1.54,1.54a.46.46,0,0,0,.75-.12L35.71,10.7A1.51,1.51,0,0,0,34.56,8.53Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M24.41,28a.46.46,0,0,0-.75.12l-1.2,2.4a1.51,1.51,0,0,0,.91,2.11,1.55,1.55,0,0,0,1.81-.84L26,30a.46.46,0,0,0-.09-.54Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M10.81,8.68a1.51,1.51,0,0,0-2.13,2.13L30.36,32.48a1.5,1.5,0,0,0,2.12-2.12Z\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 168.56 43.24\"\r\n          >\r\n            <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n              <g id=\"Layer_1-2\" data-name=\"Layer 1\">\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M21.74,35.33c-6.19,0-11.95,4-15.55,4-.72,0-.92-.48-.92-1C5.27,27.81,21.54,4.2,31.73,4.2c1.28,0,1.8.52,1.8,1.35,0,3.28-8.11,11.31-13.31,11.31-.76,0-.92-.68-1.28-.68s-.36.84-.36,1.08c0,2.56,1.92,3.12,3.88,3.12,6.27,0,15.78-10.19,15.78-16.14C38.24,1.76,36.61,0,32.37,0,15.71,0,0,29.41,0,39c0,2.64,2.76,4.2,5.63,4.2,6.44,0,11.11-3,16.59-3a1.94,1.94,0,0,0,2-2A2.57,2.57,0,0,0,21.74,35.33Z\"\r\n                />\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M88.64,36.53c-1.12,0-1.6.52-2.6.52-1.68,0-2.32-1.6-2.32-4a25.51,25.51,0,0,1,.64-5.12C93.15,25.42,99,18.1,99,13.19c0-2.72-1.76-4.68-5.84-4.68-5.83,0-11.86,9.23-14.14,17.87l-1.68.24a.77.77,0,0,0-.38.1c-.62-.9-2.08-1.5-4.66-1.5a13.2,13.2,0,0,0-7.6,2.42,5.59,5.59,0,0,1-2.31.81c-2.83,0-.72-2.51-4.15-2.51s-7.48,5.11-8,5.11h0c-.08,0-.12-.08-.12-.2a12.1,12.1,0,0,0,.88-3.92c0-.91-.28-1.63-1.12-1.63C48,25.3,44,29.41,39.36,29.41h0a8.15,8.15,0,0,1-8,7.16c-1.36,0-1.76-.76-1.76-1.6,0-3.76,5.92-6,10.91-6.4.64-.2,1.32-1.75,1.32-2.87,0-.64-.2-1.12-.76-1.16s-.88,0-1.32,0c-8.35,0-15,6.87-15,11.63,0,2.55,1.92,4.47,6.43,4.47,5.44,0,11.19-3.39,11.51-7.59A5.54,5.54,0,0,0,46,30.53a1.21,1.21,0,0,1,.36,1c0,1.76-1.8,6.51-1.8,7.27,0,1,1.6,1.36,3.24,1.36,1.87,0,2-1.16,2.83-2.2,1-1.63,4.2-6.39,6-6.39.8,0,1.24.84,2.32.84a6.74,6.74,0,0,0,1.74-.26,7.57,7.57,0,0,0-.86,3.34c0,2.87,2.19,5.27,7.43,5.27,4.39,0,9.11-2,9.11-4.71,0-.6-.44-1-1.24-1-1.48,0-2.4,1.72-5.31,1.72-3.48,0-3.48-1-3.48-1,5.33-.66,10.1-4.33,10.84-7.15a2,2,0,0,0,.91.19h.32a21.72,21.72,0,0,0-.4,4.12c0,4.56,1.76,7.91,6.11,7.91,2.28,0,5.36-1.44,5.36-3.31C89.48,36.81,89.32,36.53,88.64,36.53ZM91.2,12.27c1,0,1.59,1,1.59,2.44,0,2.63-2,6.91-7.51,9.63C87.08,18.26,89.92,12.27,91.2,12.27ZM66,32.69c-.32,0-.4-.16-.4-.4,0-1.88,3.24-4,4.88-4,.56,0,1.11.12,1.11.6C71.61,30.33,68,32.69,66,32.69Z\"\r\n                />\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M101.23,35.05c-1.16,0-.92.84-2.48.84s-2.32-1.32-2.32-2.8c0-1.64,1.68-5.24,1.68-5.88a.75.75,0,0,0-.84-.71,13.7,13.7,0,0,0-4.12,1.11c-1.15,1.76-1.91,6.44-1.91,8.56,0,3.11,2.23,4.31,4.59,4.31,3.12,0,6.72-2.08,6.72-4.51A1.22,1.22,0,0,0,101.23,35.05Z\"\r\n                />\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M162.61,28.89a27.75,27.75,0,0,0-4,.32,5.25,5.25,0,0,0-5-3.95c-5.48,0-14.79,11.71-20.38,11.71-1.44,0-1.64-.64-1.64-1a.49.49,0,0,1,0-.2c5.79-.72,11-5,11-7.88,0-1.51-1.44-2.67-5-2.67-6.41,0-11.31,4.63-12.25,8.81-1,.29-3.2,1.58-4.69,1.58-1,0-1-.84-1-1.28,0-1.32.72-2.12.72-3.6s-1.36-1.92-2.76-1.92c-3,0-7.55,3.68-8.19,3.68a.33.33,0,0,1-.32-.36c0-.6.84-2.12.84-3.44,0-1.16-.68-2.15-3.16-2.15C101,26.54,101,30,101,30c0,.72.36,1.48,1.08,1.48s1.55-.64,2.47-.64a1.44,1.44,0,0,1,1.64,1.52c0,1.76-1.8,5-1.8,6.23,0,1,1.08,1.36,1.88,1.36a2.5,2.5,0,0,0,1.56-.56c.56-.48,5.4-5,6.24-5s.83.4.83,1c0,3,.12,4.47,2.6,4.47a13.56,13.56,0,0,0,7.86-3.05c.61,2.24,2.86,3.93,7.25,3.93,8.51,0,16.5-10.95,19.06-10.95a3.34,3.34,0,0,1,2,.56c-4.84,1.52-9,4-9,7.2,0,1.55,1.44,2.71,4.63,2.71,6.88,0,9.79-4.51,9.79-8.59v0c2.68.24,5.44,1.2,5.44,3.32,0,.4-.08.72-.08,1s.2.4.48.4c1.12,0,3.71-1.68,3.71-3.6S166.61,28.89,162.61,28.89Zm-31.69,3.4c0-1.88,3.24-4,4.87-4,.56,0,1.12.12,1.12.6,0,1.44-3.63,3.8-5.59,3.8C131,32.69,130.92,32.53,130.92,32.29Zm20.34,3.48c-.68,0-1-.36-1-.8,0-1.48,2-2.6,4.36-3.12a3.33,3.33,0,0,1,.12.88C154.78,34.25,153.66,35.77,151.26,35.77Z\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <LogoutButton />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbar} />\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Sidebar.js\r\n// Holds the Sidebar function that controls the pullout sidebar on the left\r\n// side of the screen\r\n//\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AccountCircle,\r\n  Apps,\r\n  Timeline,\r\n  List as ListIcon,\r\n  Info,\r\n  Close,\r\n  Help,\r\n} from \"@material-ui/icons\";\r\n\r\nconst drawerWidthExpanded = 240;\r\nconst drawerWidthCondensed = 58;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidthExpanded,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    overflowX: \"hidden\",\r\n    width: drawerWidthExpanded,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: drawerWidthCondensed, //theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthCondensed, //theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n}));\r\n\r\nexport default connect(mapStateToProps)(function Sidebar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: props.drawerOpen,\r\n          [classes.drawerClose]: !props.drawerOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: props.drawerOpen,\r\n            [classes.drawerClose]: !props.drawerOpen,\r\n          }),\r\n        }}\r\n        open={props.drawerOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={() => props.setDrawerOpen(false)}>\r\n            <Close color=\"secondary\" />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to=\"/app/account\">\r\n            <ListItem button key=\"Account\" dataTestId=\"accountLink\">\r\n              <ListItemIcon>\r\n                <AccountCircle color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Account\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            className={classes.link}\r\n            to=\"/app/lorelines\"\r\n            dataTestId=\"lorelinesLink\"\r\n          >\r\n            <ListItem button key=\"Lorelines\">\r\n              <ListItemIcon>\r\n                <Apps color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Lorelines\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {props.loreline != null ? (\r\n            <Link className={classes.link} to=\"/app/timeline\">\r\n              <ListItem button key=\"Timeline\">\r\n                <ListItemIcon>\r\n                  <Timeline color=\"secondary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Timeline\" />\r\n              </ListItem>\r\n            </Link>\r\n          ) : (\r\n            <ListItem button key=\"Timeline\" disabled>\r\n              <ListItemIcon>\r\n                <Timeline color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Timeline\" />\r\n            </ListItem>\r\n          )}\r\n          {props.loreline != null ? (\r\n            <Link\r\n              dataTestId=\"directoryLink\"\r\n              className={classes.link}\r\n              to=\"/app/directory\"\r\n            >\r\n              <ListItem button key=\"Directory\">\r\n                <ListItemIcon>\r\n                  <ListIcon color=\"secondary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Directory\" />\r\n              </ListItem>\r\n            </Link>\r\n          ) : (\r\n            <ListItem button key=\"Directory\" disabled>\r\n              <ListItemIcon>\r\n                <ListIcon color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Directory\" />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to=\"/app/about\">\r\n            <ListItem button key=\"About Lorelines\">\r\n              <ListItemIcon>\r\n                <Info color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"About Lorelines\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to=\"/app/help\">\r\n            <ListItem button key=\"Help\" dataTestId=\"helpLink\">\r\n              <ListItemIcon>\r\n                <Help color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Help\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n});\r\n//******************************************************************************\r\n// Redux Incoming Variables Function\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loreline: state.lorelineId,\r\n  };\r\n}\r\n","//******************************************************************************\r\n// Timeline.js\r\n// Timeline page function that will contain the timeline tool\r\n// \r\n//\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\n\r\nimport FontDownloadIcon from \"@material-ui/icons/FontDownloadOutlined\";\r\nimport FormatListNumbered from \"@material-ui/icons/FormatListNumberedOutlined\";\r\nimport FlightTakeoffOutlined from \"@material-ui/icons/FlightTakeoffOutlined\";\r\nimport CallMade from \"@material-ui/icons/CallMadeOutlined\";\r\n\r\nconst drawerWidth = 120;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n\r\nexport default function Timeline() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: \"70vh\", width: \"70vw\", textAlign: \"center\" }}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Canvas and Drag/Drop Components in progress</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <div>\r\n        <Drawer className={classes.drawer} variant=\"permanent\" anchor=\"right\">\r\n          <div className={classes.toolbar}></div>\r\n          <List>\r\n            <ListItem button key=\"Event Node\">\r\n              <ListItemIcon>\r\n                <FontDownloadIcon color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Event Node\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Branching Event Node\">\r\n              <ListItemIcon>\r\n                <FormatListNumbered color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Branching Node\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Tether\">\r\n              <ListItemIcon>\r\n                <CallMade color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Tether\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button key=\"Warp Node\">\r\n              <ListItemIcon>\r\n                <FlightTakeoffOutlined color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Warp Node\" />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Account.js\r\n// Account page function that shows user info and theme toggling\r\n//\r\n//\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setTheme } from \"../actions/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n}));\r\n\r\n//******************************************************************************\r\n// Account Function\r\n// File(s) Used: Home.js\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function Account(props) {\r\n  function handleDark(e) {\r\n    props.setTheme(\"dark\");\r\n    console.log(\"DARK THEME  0_0\");\r\n  }\r\n\r\n  function handleLight(e) {\r\n    props.setTheme(\"light\");\r\n    console.log(\"LIGHT THEME >.<\");\r\n  }\r\n\r\n  const classes = useStyles();\r\n  if (!props.user.id) {\r\n    return <p></p>;\r\n  }\r\n\r\n  var timestamp = props.user.id.toString().substring(0, 8);\r\n  var date = new Date(parseInt(timestamp, 16) * 1000);\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{\r\n          height: props.window.height,\r\n          textAlign: \"center\",\r\n        }}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\" gutterBottom>\r\n            Hello {props.user.name || \"null\"}, this is your account view\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Member Since: {date.toString() || \"null\"}\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Email: {props.user.email || \"null\"}\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Lorelines: {props.lorelineArray.length || \"null\"}\r\n            <b>/50</b>\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Entities: {props.directory.length || \"null\"}\r\n            <b>/500</b>\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Instances: {props.directory.length || \"null\"}\r\n            <b>/1000</b>\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Website Theme\r\n          </Typography>\r\n          <Button\r\n            onClick={handleDark}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            dataTestId=\"darkModeButton\"\r\n          >\r\n            Dark\r\n          </Button>\r\n          <Button\r\n            onClick={handleLight}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            dataTestId=\"lightModeButton\"\r\n          >\r\n            Light\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  );\r\n});\r\n\r\n//******************************************************************************\r\n// Redux Incoming Variables Function\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    window: state.window,\r\n    lorelineArray: state.lorelineArray,\r\n    theme: state.theme,\r\n    directory: state.directory,\r\n  };\r\n}\r\n\r\n//******************************************************************************\r\n// Redux Outgoing Variables Function\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setTheme: setTheme,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// src/directory_interaction/DirectoryList.js\r\n// Contains the class component to show the directory list\r\n//\r\n//\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Collapse,\r\n  Typography,\r\n  ButtonGroup,\r\n  Divider,\r\n  Popover,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore, AddCircle, Delete } from \"@material-ui/icons\";\r\nimport {\r\n  setInstanceId,\r\n  setEntityId,\r\n  setInstance,\r\n  setLoading,\r\n} from \"../../actions/index\";\r\nimport { equal } from \"assert\";\r\n\r\nclass DirectoryList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: {},\r\n      anchorEl: null,\r\n      deleteEntityId: null,\r\n      deleteEntityName: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.updateDirectoryList();\r\n  }\r\n\r\n  handleInstanceSelect = (instanceId, entityId) => {\r\n    this.props.setInstanceId(instanceId);\r\n    this.props.setInstance(this.props.lorelineId, entityId, instanceId);\r\n    this.props.setMode(this.props.modes.INSTANCE_VIEWER);\r\n  };\r\n\r\n  handleEntityDropdown = (key) => {\r\n    this.setState({ [key]: !this.state[key] });\r\n  };\r\n\r\n  handleEntityDelete = (event, id, name) => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      deleteEntityId: id,\r\n      deleteEntityName: name,\r\n    });\r\n  };\r\n\r\n  handleEntityDeleteCancel = () => {\r\n    this.setState({\r\n      anchorEl: null,\r\n      deleteEntityId: null,\r\n      deleteEntityName: null,\r\n    });\r\n  };\r\n\r\n  deleteEntityFromDB = async (e) => {\r\n    e.preventDefault();\r\n    this.props.setLoading(true);\r\n    try {\r\n      await axios\r\n        .delete(\r\n          `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities/${this.state.deleteEntityId}`\r\n        )\r\n        .then(() => {\r\n          console.log(this.state.deleteEntityId + \" deleted!\");\r\n          this.handleEntityDeleteCancel();\r\n          this.props.setLoading(false);\r\n          this.props.updateList();\r\n        });\r\n    } catch (err) {}\r\n  };\r\n\r\n  handleEntityInstantiation = (id) => {\r\n    this.props.setEntityId(id);\r\n    this.props.setMode(this.props.modes.INSTANCE_CREATION);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <List style={{ width: 300, marginBottom: 76 }}>\r\n          {Array.from(this.props.directory).map((entity) => {\r\n            const open = this.state[entity._id] || false;\r\n            return (\r\n              <div\r\n                style={{\r\n                  borderStyle: \"solid\",\r\n                  borderWidth: \"1px 1px 1px 3px\", //t r b l\r\n                  borderColor: entity.color,\r\n                  marginBottom: 5,\r\n                  borderRadius: 5,\r\n                }}\r\n                key={entity._id}\r\n              >\r\n                <ListItem style={{ width: \"100%\", padding: 0 }}>\r\n                  <ButtonGroup\r\n                    fullWidth\r\n                    variant=\"text\"\r\n                    aria-label=\"text primary button group\"\r\n                  >\r\n                    <Button\r\n                      style={{ width: 44, borderRadius: 0, color: \"#777\" }}\r\n                      onClick={() => this.handleEntityInstantiation(entity._id)}\r\n                    >\r\n                      <AddCircle />\r\n                    </Button>\r\n                    <Button\r\n                      style={{ borderRadius: 0 }}\r\n                      onClick={() => this.handleEntityDropdown(entity._id)}\r\n                    >\r\n                      <Typography\r\n                        style={{\r\n                          textAlign: \"left\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"clip\",\r\n                          width: 272,\r\n                          textTransform: \"none\",\r\n                          color: entity.color,\r\n                        }}\r\n                        variant=\"h6\"\r\n                      >\r\n                        {entity.name}\r\n                      </Typography>\r\n                      {open ? <ExpandLess /> : <ExpandMore />}\r\n                    </Button>\r\n                    <Button\r\n                      style={{\r\n                        width: 44,\r\n                        borderRadius: 0,\r\n                        color: \"#777\",\r\n                      }}\r\n                      onClick={(event) =>\r\n                        this.handleEntityDelete(event, entity._id, entity.name)\r\n                      }\r\n                    >\r\n                      <Delete />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    {entity.instances.map((instance, i) => {\r\n                      return (\r\n                        <div key={instance._id + i}>\r\n                          <Divider />\r\n                          <ListItem\r\n                            button\r\n                            onClick={() => {\r\n                              this.handleInstanceSelect(\r\n                                instance._id,\r\n                                entity._id\r\n                              );\r\n                            }}\r\n                          >\r\n                            <Typography>{instance.name}</Typography>\r\n                          </ListItem>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </Collapse>\r\n              </div>\r\n            );\r\n          })}\r\n        </List>\r\n        <Popover\r\n          anchorEl={this.state.anchorEl}\r\n          open={Boolean(this.state.anchorEl)}\r\n          id={Boolean(this.state.anchorEl) ? \"simple-popover\" : undefined}\r\n          onClose={this.handleEntityDeleteCancel}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            align=\"center\"\r\n            justify=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h6\">\r\n                Are you sure you want to delete {this.state.deleteEntityName}?\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <ButtonGroup>\r\n                <Button color=\"inherit\" onClick={this.deleteEntityFromDB}>\r\n                  Delete\r\n                </Button>\r\n                <Button color=\"primary\" onClick={this.handleEntityDeleteCancel}>\r\n                  Cancel\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Popover>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n  return {\r\n    lorelineId: state.lorelineId,\r\n    directory: state.directory,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setInstanceId: setInstanceId,\r\n      setEntityId: setEntityId,\r\n      setInstance: setInstance,\r\n      setLoading: setLoading,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStatetoProps, matchDispatchToProps)(DirectoryList);\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { makeStyles, Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function InstanceDivider(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Divider />\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function InstanceHeader(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Typography variant=\"h5\">{props.label}</Typography>\r\n    </main>\r\n  );\r\n}\r\n","/**@format */\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tList,\r\n\tListItem,\r\n\tTypography,\r\n\tCard,\r\n\tCardContent,\r\n\tCheckbox,\r\n\tRadioGroup,\r\n\tGrid,\r\n\tRadio,\r\n\tFormControlLabel,\r\n} from '@material-ui/core'\r\nimport InstanceDivider from '../instance_fields/InstanceDivider'\r\nimport InstanceHeader from '../instance_fields/InstanceHeader'\r\n\r\nconst classes = {\r\n\troot: {\r\n\t\tflex: 1,\r\n\t},\r\n\tcard: {\r\n\t\twidth: 600,\r\n\t\tpadding: 10,\r\n\t},\r\n\tinput: {\r\n\t\tflex: 1,\r\n\t},\r\n\tdelete: {\r\n\t\tmarginLeft: 'auto',\r\n\t},\r\n\tcontent: {\r\n\t\tflex: 1,\r\n\t},\r\n}\r\n\r\nclass InstanceViewer extends Component {\r\n\tstate = { open: {}, instance: [] }\r\n\r\n\tcomponentDidMount() {}\r\n\r\n\trender() {\r\n\t\tif (!this.props.instance) {\r\n\t\t\treturn <p></p>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<List>\r\n\t\t\t\t<Typography variant=\"h5\">{this.props.instance.name}</Typography>\r\n\t\t\t\t{this.props.instance.content.map((field, i) => {\r\n\t\t\t\t\tif (field.type === 'IMAGE_FIELD') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ListItem key={field + i} width={600}>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{field.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={field.content} width={550} />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (field.type === 'RADIOLIST_FIELD') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{field.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t<RadioGroup value={field.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{field.content.map((option, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option + i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option + i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={option.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (field.type === 'SECTION_DIVIDER') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ListItem key={field + i}>\r\n\t\t\t\t\t\t\t\t<InstanceDivider />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (field.type === 'SECTION_HEADER') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ListItem key={field + i}>\r\n\t\t\t\t\t\t\t\t<InstanceHeader index={i} label={field.name} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (field.type === 'CHECKBOX_FIELD') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ListItem key={field + i}>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{field.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox disabled checked={field.content[0]} />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ListItem key={field + i}>\r\n\t\t\t\t\t\t\t\t<Card width={classes.card.width}>\r\n\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t{field.name}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>{field.content}</Typography>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</List>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n\treturn {\r\n\t\tinstance: state.instance,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStatetoProps)(InstanceViewer)\r\n","/** @format */\r\n//******************************************************************************\r\n// src/custom_entity_fields/EntityField.js\r\n// Contains Entity Field function, for use w/ the directory\r\n//\r\n//\r\nimport React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  InputBase,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n  },\r\n  delete: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default function EntityField(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleLabelChange = (e) => {\r\n    props.changeLabel(props.index, e.target.value);\r\n  };\r\n\r\n  if (props.validationFailed && props.label === \"\")\r\n    var errorStyle = {\r\n      style: { border: \"2px solid red\" },\r\n    };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card} {...errorStyle}>\r\n        <Grid container direction=\"column\">\r\n          <Grid xs item container direction=\"row\">\r\n            <Grid xs item>\r\n              <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Label\"\r\n                onChange={handleLabelChange}\r\n                value={props.label}\r\n                inputProps={{\r\n                  dataTestId: \"fieldName\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"overline\">{props.typeName}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title={`Delete ${props.typeName}`}>\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                className={classes.delete}\r\n                onClick={() => props.remove(props.index)}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// src/custom_entity_fields/SectionDivider.js\r\n// Contains Section Divider function, for use w/ the directory\r\n//\r\n//\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  IconButton,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  delete: {\r\n    marginLeft: 'auto'\r\n  },\r\n  content: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function SectionDivider(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <Grid container direction=\"column\">\r\n          <Grid xs item container direction=\"row\">\r\n            <Grid xs item>\r\n              <Tooltip title=\"Delete divider\">\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  className={classes.delete}\r\n                  onClick={() => props.remove(props.index)}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"overline\">DIVIDER</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// src/custom_entity_fields/RadioListEntityField.js\r\n// Contains Radio List Entity Field function, for use w/ the directory\r\n//\r\n//\r\nimport React, { useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  InputBase,\r\n  IconButton,\r\n  Tooltip,\r\n  List,\r\n  ListItem,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { Delete, Add } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  delete: {\r\n    marginLeft: 'auto'\r\n  },\r\n  content: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function EntityField(props) {\r\n  const [options, setOptions] = useState(props.options);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLabelChange = e => {\r\n    props.changeLabel(props.index, e.target.value);\r\n  };\r\n\r\n  const updateOptions = op => {\r\n    setOptions(op);\r\n    props.setOptions(props.index, options);\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    const newBoxes = options.concat({ label: '' });\r\n    updateOptions(newBoxes);\r\n  };\r\n\r\n  const handleRemoveOption = index => {\r\n    const array = [...options];\r\n\r\n    if (array.length > 1) {\r\n      array.splice(index, 1);\r\n\r\n      updateOptions(array);\r\n    }\r\n  };\r\n\r\n  const handleOptionLabelChange = (index, label) => {\r\n    const data = [...options];\r\n    data[index].label = label;\r\n\r\n    updateOptions(data);\r\n  };\r\n\r\n  const optionsNeedLabels = () => {\r\n    for (const option of options) {\r\n      if (option.label === '') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (props.validationFailed && (props.label === '' || optionsNeedLabels()))\r\n    var errorStyle = {\r\n      style: { border: '2px solid red' }\r\n    };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Tooltip title=\"The first option will be the default\">\r\n        <Card className={classes.card} {...errorStyle}>\r\n          <Grid container direction=\"column\">\r\n            <Grid xs item container direction=\"row\">\r\n              <Grid xs item>\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Label\"\r\n                  onChange={handleLabelChange}\r\n                  value={props.label}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"overline\">radio list</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <List>\r\n                {options.map((option, i) => {\r\n                  return (\r\n                    <ListItem key={option + i}>\r\n                      <Option\r\n                        index={i}\r\n                        removeOption={handleRemoveOption}\r\n                        changeLabel={handleOptionLabelChange}\r\n                        label={option.label}\r\n                      />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n                <Button\r\n                  startIcon={<Add />}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleAddOption}\r\n                >\r\n                  Add Option\r\n                </Button>\r\n              </List>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Delete radio list\">\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  className={classes.delete}\r\n                  onClick={() => props.remove(props.index)}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </Tooltip>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction Option(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleLabelChange = e => {\r\n    props.changeLabel(props.index, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"row\">\r\n      <Grid xs item>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Option Name\"\r\n          onChange={handleLabelChange}\r\n          value={props.label}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Tooltip title=\"Delete option\" placement=\"right\">\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => props.removeOption(props.index)}\r\n          >\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setLoading } from \"../../actions/index\";\r\nimport axios from \"axios\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Typography,\r\n  Snackbar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Add, Save, Close } from \"@material-ui/icons\";\r\nimport EntityField from \"../custom_entity_fields/EntityField\";\r\nimport SectionDivider from \"../custom_entity_fields/SectionDivider.js\";\r\nimport RadioListEntityField from \"../custom_entity_fields/RadioListEntityField\";\r\nimport { BlockPicker } from \"react-color\";\r\n\r\nclass CustomEntityCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      color: \"#f78d1e\",\r\n      fields: [],\r\n      anchorEl: null,\r\n      validationFailed: false,\r\n      creationFeedbackOpen: false,\r\n    };\r\n  }\r\n\r\n  handleFeedbackClose = (event, reason) => {\r\n    if (reason !== \"clickaway\") {\r\n      this.setState({ creationFeedbackOpen: false });\r\n    }\r\n  };\r\n\r\n  addEntityToDB = async (entity) => {\r\n    console.log(entity);\r\n    this.props.setLoading(true);\r\n    try {\r\n      await axios\r\n        .post(\r\n          `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities`,\r\n          {\r\n            name: entity.name,\r\n            color: entity.color,\r\n            content: entity.content,\r\n          }\r\n        )\r\n        .then(() => {\r\n          this.props.updateDirectoryList().then(() => {\r\n            this.props.setLoading(false);\r\n            this.setState({ creationFeedbackOpen: true });\r\n          });\r\n        });\r\n    } catch (err) {\r\n      this.props.setLoading(false);\r\n    }\r\n  };\r\n\r\n  handleAddItem = (commonName, actualName) => {\r\n    this.setState({\r\n      fields: [\r\n        ...this.state.fields,\r\n        { commonName: commonName, actualName: actualName, label: \"\" },\r\n      ],\r\n    });\r\n    this.handleMenuClose();\r\n  };\r\n\r\n  handleRemoveItem = (index) => {\r\n    const array = [...this.state.fields];\r\n    array.splice(index, 1);\r\n    this.setState({ fields: array });\r\n  };\r\n\r\n  handleMenuClick = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleFieldLabelChange = (index, label) => {\r\n    const data = this.state.fields;\r\n    data[index].label = label;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleNameChange = (e) => this.setState({ name: e.target.value });\r\n\r\n  handleColorChange = (color) => this.setState({ color: color.hex });\r\n\r\n  handleSetRadioOptions = (index, options) => {\r\n    const data = this.state.fields;\r\n    data[index].options = options;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  handleCreateEntity = () => {\r\n    var error = false;\r\n\r\n    if (this.state.name === \"\" || this.state.fields.length === 0) error = true;\r\n    else {\r\n      var content = [];\r\n\r\n      this.state.fields.forEach((field, i) => {\r\n        if (field.actualName === \"SECTION_DIVIDER\") field.label = \"divider\";\r\n        if (field.label === \"\") error = true;\r\n\r\n        content = content.concat({ type: field.actualName, name: field.label });\r\n\r\n        if (field.actualName === \"RADIOLIST_FIELD\") {\r\n          content[i].content = [];\r\n\r\n          for (const option of field.options) {\r\n            if (option.label === \"\") error = true;\r\n\r\n            content[i].content = content[i].content.concat({\r\n              name: option.label,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ validationFailed: error });\r\n\r\n    const entity = {\r\n      name: this.state.name,\r\n      color: this.state.color,\r\n      content: content,\r\n    };\r\n\r\n    if (!error) this.addEntityToDB(entity);\r\n  };\r\n\r\n  errorMessage = () => {\r\n    return (\r\n      <div>\r\n        <Typography>all fields must have a label</Typography>\r\n        {this.state.name === \"\" && (\r\n          <Typography>custom entity must be named</Typography>\r\n        )}\r\n        {this.state.fields.length === 0 && (\r\n          <Typography>custom entity must have at least one field</Typography>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        style={{ textAlign: \"center\", marginTop: 20 }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <TextField\r\n            error={this.state.validationFailed && this.state.name === \"\"}\r\n            helperText={\r\n              this.state.validationFailed && this.state.name === \"\"\r\n                ? \"this field cannot be empty\"\r\n                : \"\"\r\n            }\r\n            label=\"Custom Entity Name\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            inputProps={{ style: { color: this.state.color } }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Tooltip title=\"Select a color for your custom entity\">\r\n            <BlockPicker\r\n              color={this.state.color}\r\n              onChangeComplete={this.handleColorChange}\r\n              width=\"300\"\r\n            />\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <List>\r\n            {this.state.fields.map((field, i) => {\r\n              if (field.actualName === \"SECTION_DIVIDER\")\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <SectionDivider\r\n                      index={i}\r\n                      remove={this.handleRemoveItem}\r\n                      label={field.label}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else if (field.actualName === \"RADIOLIST_FIELD\")\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <RadioListEntityField\r\n                      index={i}\r\n                      options={field.options ?? [{ label: \"\" }]}\r\n                      remove={this.handleRemoveItem}\r\n                      changeLabel={this.handleFieldLabelChange}\r\n                      label={field.label}\r\n                      setOptions={this.handleSetRadioOptions}\r\n                      validationFailed={this.state.validationFailed}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <EntityField\r\n                      index={i}\r\n                      typeName={field.commonName}\r\n                      remove={this.handleRemoveItem}\r\n                      changeLabel={this.handleFieldLabelChange}\r\n                      label={field.label}\r\n                      validationFailed={this.state.validationFailed}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n            })}\r\n          </List>\r\n        </Grid>\r\n        {this.state.validationFailed && (\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 5,\r\n                fontSize: 16,\r\n              }}\r\n              color=\"error\"\r\n            >\r\n              {this.errorMessage()}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item>\r\n          <Button\r\n            startIcon={<Add />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: 150 }}\r\n            onClick={this.handleMenuClick}\r\n          >\r\n            Add Field\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={this.state.anchorEl}\r\n            keepMounted\r\n            open={Boolean(this.state.anchorEl)}\r\n            onClose={this.handleMenuClose}\r\n          >\r\n            <MenuItem onClick={() => this.handleAddItem(\"text\", \"TEXT_FIELD\")}>\r\n              Text\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => this.handleAddItem(\"number\", \"NUMBER_FIELD\")}\r\n            >\r\n              Number\r\n            </MenuItem>\r\n            {/*<Tooltip title=\"A list of references to other instances\" placement=\"right\">\r\n\t\t\t\t\t\t\t<MenuItem onClick={() => this.handleAddItem('list', 'LIST_FIELD')}>List</MenuItem>\r\n\t\t\t\t\t\t</Tooltip>*/}\r\n            {/*<Tooltip title=\"A single reference to another instance\" placement=\"right\">\r\n\t\t\t\t\t\t\t<MenuItem onClick={() => this.handleAddItem('reference', 'REFERENCE_FIELD')}>\r\n\t\t\t\t\t\t\t\tReference\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t</Tooltip>*/}\r\n            <MenuItem\r\n              onClick={() => this.handleAddItem(\"checkbox\", \"CHECKBOX_FIELD\")}\r\n            >\r\n              Checkbox\r\n            </MenuItem>\r\n            <Tooltip\r\n              title=\"A list of options in which only one can be true\"\r\n              placement=\"right\"\r\n            >\r\n              <MenuItem\r\n                onClick={() =>\r\n                  this.handleAddItem(\"radiolist\", \"RADIOLIST_FIELD\")\r\n                }\r\n              >\r\n                Radio List\r\n              </MenuItem>\r\n            </Tooltip>\r\n            <MenuItem\r\n              onClick={() => this.handleAddItem(\"image\", \"IMAGE_FIELD\")}\r\n            >\r\n              Image\r\n            </MenuItem>\r\n            <Tooltip title=\"A bold header for organization\" placement=\"right\">\r\n              <MenuItem\r\n                onClick={() => this.handleAddItem(\"header\", \"SECTION_HEADER\")}\r\n              >\r\n                Header\r\n              </MenuItem>\r\n            </Tooltip>\r\n            <Tooltip\r\n              title=\"A vertical line to break up your sections\"\r\n              placement=\"right\"\r\n            >\r\n              <MenuItem\r\n                onClick={() => this.handleAddItem(\"divider\", \"SECTION_DIVIDER\")}\r\n              >\r\n                Divider\r\n              </MenuItem>\r\n            </Tooltip>\r\n          </Menu>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            startIcon={<Save />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: 150 }}\r\n            onClick={this.handleCreateEntity}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.creationFeedbackOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleFeedbackClose}\r\n          message=\"Custom Entity Added\"\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleFeedbackClose}\r\n              >\r\n                <Close fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n  return {\r\n    lorelineId: state.lorelineId,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoading: setLoading,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  matchDispatchToProps\r\n)(CustomEntityCreator);\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport { makeStyles, CardContent, Typography, Card, InputBase } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t},\r\n\tcard: {\r\n\t\tminWidth: 300,\r\n\t},\r\n\tinput: {\r\n\t\tflex: 1,\r\n\t},\r\n}))\r\n\r\nexport default function InstanceTextField(props) {\r\n\tconst classes = useStyles()\r\n\r\n\tconst handleChange = e => {\r\n\t\tprops.setContent(props.index, e.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className={classes.root}>\r\n\t\t\t<Card className={classes.card}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t{props.label}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\trowsMax=\"4\"\r\n\t\t\t\t\t\tvalue={props.content}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tplaceholder=\"Content\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</main>\r\n\t)\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport { makeStyles, Card, Checkbox, FormControlLabel, CardContent } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t},\r\n\tcard: {\r\n\t\twidth: 300,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n}))\r\n\r\nexport default function InstanceCheckBoxField(props) {\r\n\tconst classes = useStyles()\r\n\r\n\tconst handleChange = e => {\r\n\t\tprops.setContent(props.index, !props.content)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className={classes.root}>\r\n\t\t\t<Card className={classes.card}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tcontrol={<Checkbox color=\"primary\" />}\r\n\t\t\t\t\t\tchecked={props.content}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tlabel={props.label}\r\n\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</main>\r\n\t)\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport { makeStyles, CardContent, Typography, Card, InputBase, Tooltip } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t},\r\n\tcard: {\r\n\t\tminWidth: 300,\r\n\t},\r\n\tinput: {\r\n\t\tflex: 1,\r\n\t},\r\n}))\r\n\r\nexport default function InstanceNumberField(props) {\r\n\tconst classes = useStyles()\r\n\r\n\tconst handleChange = e => {\r\n\t\tprops.setContent(props.index, e.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className={classes.root}>\r\n\t\t\t<Tooltip title=\"This is a number field\">\r\n\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t{props.label}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvalue={props.content}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\t\tplaceholder=\"Content\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</Tooltip>\r\n\t\t</main>\r\n\t)\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport {\r\n\tmakeStyles,\r\n\tGrid,\r\n\tCard,\r\n\tInputBase,\r\n\tRadioGroup,\r\n\tFormControlLabel,\r\n\tRadio,\r\n\tCardContent,\r\n\tCardHeader,\r\n\tTypography,\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t},\r\n\tcard: {\r\n\t\tminWidth: 300,\r\n\t},\r\n}))\r\n\r\nexport default function InstanceRadioListField(props) {\r\n\tconst handleChange = event => {\r\n\t\tprops.setValue(props.index, event.target.value)\r\n\t}\r\n\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<main className={classes.root}>\r\n\t\t\t<Card className={classes.card}>\r\n\t\t\t\t<CardHeader subheader={props.label} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<RadioGroup value={props.content} onChange={handleChange}>\r\n\t\t\t\t\t\t{props.options.map((option, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tkey={option + i}\r\n\t\t\t\t\t\t\t\t\tvalue={option + i}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={option.name}\r\n\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</main>\r\n\t)\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { makeStyles, Typography, Card, Button, CardMedia, CardContent } from '@material-ui/core'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t},\r\n\tcard: {\r\n\t\tminWidth: 300,\r\n\t},\r\n\tinput: {\r\n\t\tflex: 1,\r\n\t},\r\n\timage: {\r\n\t\theight: 50,\r\n\t\t'&:hover': {\r\n\t\t\theight: 140,\r\n\t\t},\r\n\t},\r\n\tnoImage: {\r\n\t\theight: 0,\r\n\t},\r\n}))\r\n\r\nexport default connect(mapStateToProps)(function InstanceImageField(props) {\r\n\tconst classes = useStyles()\r\n\r\n\tconst handleFileChange = files => {\r\n\t\tconst sizeInMB = 2\r\n\t\tvar failed = false\r\n\r\n\t\tif (files[0].type !== 'image/png' && files[0].type !== 'image/jpg' && files[0].type !== 'image/jpeg') {\r\n\t\t\talert(files[0].name + ' is not an accepted image format! Accepted formats are:\\n.png .jpg .jpeg')\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tif (files[0].size > 1048576 * sizeInMB) {\r\n\t\t\talert(\r\n\t\t\t\t'File size exceeds ' +\r\n\t\t\t\t\tsizeInMB +\r\n\t\t\t\t\t'MB limit! File uploaded was: ' +\r\n\t\t\t\t\t(files[0].size / 1048576).toFixed(2) +\r\n\t\t\t\t\t'MB'\r\n\t\t\t)\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tif (!failed)\r\n\t\t\tgetImageURL(files[0]).then(url => {\r\n\t\t\t\tconsole.log(url)\r\n\t\t\t\tprops.setContent(props.index, url)\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst getImageURL = file => {\r\n\t\tif (file !== null) {\r\n\t\t\tconst data = new FormData()\r\n\t\t\tdata.append('image', file, file.name)\r\n\r\n\t\t\treturn axios\r\n\t\t\t\t.post(`https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/images`, data, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\taccept: 'application/json',\r\n\t\t\t\t\t\t'Accept-Language': 'en-US,en;q=0.8',\r\n\t\t\t\t\t\t'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\treturn res.data\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className={classes.root}>\r\n\t\t\t<Card className={classes.card}>\r\n\t\t\t\t<CardMedia className={props.imageURL != '' ? classes.image : classes.noImage} image={props.imageURL} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t{props.label}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tstartIcon={<CloudUploadIcon />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpload Image\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\taccept=\".jpg, .jpeg, .png\"\r\n\t\t\t\t\t\t\tonChange={e => handleFileChange(e.target.files)}\r\n\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</main>\r\n\t)\r\n})\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tuser: state.user,\r\n\t}\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setLoading } from \"../../actions/index\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Save } from \"@material-ui/icons\";\r\nimport InstanceTextField from \"../instance_fields/InstanceTextField\";\r\nimport InstanceCheckBoxField from \"../instance_fields/InstanceCheckBoxField\";\r\nimport InstanceNumberField from \"../instance_fields/InstanceNumberField\";\r\nimport InstanceHeader from \"../instance_fields/InstanceHeader\";\r\nimport InstanceRadioListField from \"../instance_fields/InstanceRadioListField\";\r\nimport InstanceDivider from \"../instance_fields/InstanceDivider\";\r\nimport InstanceImageField from \"../instance_fields/InstanceImageField\";\r\n\r\nclass CustomEntityCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      entityName: \"\",\r\n      instanceName: \"\",\r\n      color: \"\",\r\n      fields: [],\r\n      anchorEl: null,\r\n      validationFailed: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retreiveEntityFromDB();\r\n  }\r\n\r\n  addInstanceToDB = async (instance) => {\r\n    this.props.setLoading(true);\r\n    try {\r\n      await axios\r\n        .post(\r\n          `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities/${this.props.entityId}/instances`,\r\n          {\r\n            name: instance.name,\r\n            content: instance.content,\r\n          }\r\n        )\r\n        .then(() => {\r\n          this.props.updateDirectoryList().then(() => {\r\n            this.props.setLoading(false);\r\n          });\r\n        });\r\n    } catch (err) {\r\n      this.props.setLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  handleSetRadioOptions = (index, options) => {\r\n    const data = this.state.fields;\r\n    data[index].options = options;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  retreiveEntityFromDB = async () => {\r\n    this.props.setLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities/${this.props.entityId}`,\r\n        {}\r\n      );\r\n      this.setState({\r\n        entityName: data.name,\r\n        color: data.color,\r\n        fields: data.content,\r\n      });\r\n      this.props.setLoading(false);\r\n    } catch (err) {\r\n      this.props.setLoading(false);\r\n    }\r\n  };\r\n\r\n  handleInstanceNameChange = (e) => {\r\n    this.setState({ instanceName: e.target.value });\r\n  };\r\n\r\n  handleContentChange = (index, content) => {\r\n    const data = this.state.fields;\r\n    data[index].content = content;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  handleRadioChange = (index, value) => {\r\n    const data = this.state.fields;\r\n    data[index].value = value;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  handleCreateInstance = () => {\r\n    console.log(\"in create instance\");\r\n    var error = false;\r\n\r\n    if (this.state.instanceName === \"\") {\r\n      error = true;\r\n    } else {\r\n      var content = [];\r\n\r\n      this.state.fields.forEach((field, i) => {\r\n        if (field.type === \"RADIOLIST_FIELD\") {\r\n          console.log(\"VALUE:\" + field.value);\r\n          content = content.concat({\r\n            name: field.name,\r\n            type: field.type,\r\n            content: field.content,\r\n            value: field.value,\r\n          });\r\n        } else {\r\n          content = content.concat({\r\n            name: field.name,\r\n            type: field.type,\r\n            content: field.content,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ validationFailed: error });\r\n\r\n    const instance = {\r\n      name: this.state.instanceName,\r\n      content: content,\r\n    };\r\n\r\n    if (error) console.log(\"Encountered an error\");\r\n    console.log(\"instance: \", instance);\r\n\r\n    if (!error) this.addInstanceToDB(instance);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        style={{ textAlign: \"center\", marginTop: 20 }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"overline\">new instance of:</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"h4\"\r\n            style={{\r\n              color: this.state.color ?? \"#ea4b35\",\r\n            }}\r\n          >\r\n            {this.state.entityName ?? \"undefined\"}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            error={this.state.validationFailed && this.state.entityName === \"\"}\r\n            helperText={\r\n              this.state.validationFailed && this.state.entityName === \"\"\r\n                ? \"this field cannot be empty\"\r\n                : \"\"\r\n            }\r\n            label=\"Instance Name\"\r\n            value={this.state.instanceName}\r\n            onChange={this.handleInstanceNameChange}\r\n            inputProps={{ style: { color: this.state.color } }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <List>\r\n            {this.state.fields.map((field, i) => {\r\n              if (field.type === \"TEXT_FIELD\")\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceTextField\r\n                      index={i}\r\n                      label={field.name}\r\n                      content={field.content}\r\n                      setContent={this.handleContentChange}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === \"NUMBER_FIELD\")\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceNumberField\r\n                      index={i}\r\n                      label={field.name}\r\n                      content={field.content}\r\n                      setContent={this.handleContentChange}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === \"CHECKBOX_FIELD\") {\r\n                if (field.content.length == 0) field.content = false;\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceCheckBoxField\r\n                      index={i}\r\n                      label={field.name}\r\n                      content={field.content}\r\n                      setContent={this.handleContentChange}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              } else if (field.type === \"RADIOLIST_FIELD\") {\r\n                if (field.value === undefined) field.value = \"[object Object]0\";\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceRadioListField\r\n                      index={i}\r\n                      label={field.name}\r\n                      options={field.content}\r\n                      content={field.value}\r\n                      setValue={this.handleRadioChange}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              } else if (field.type === \"IMAGE_FIELD\") {\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceImageField\r\n                      index={i}\r\n                      label={field.name}\r\n                      imageURL={field.content}\r\n                      setContent={this.handleContentChange}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              } else if (field.type === \"SECTION_DIVIDER\")\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceDivider />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === \"SECTION_HEADER\")\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceHeader index={i} label={field.name} />\r\n                  </ListItem>\r\n                );\r\n              return;\r\n            })}\r\n          </List>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            startIcon={<Save />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: 150 }}\r\n            onClick={this.handleCreateInstance}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n  return {\r\n    lorelineId: state.lorelineId,\r\n    entityId: state.entityId,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoading: setLoading,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  matchDispatchToProps\r\n)(CustomEntityCreator);\r\n","/** @format */\r\n//******************************************************************************\r\n// Directory.js\r\n// Directory page function that combines different directory components\r\n//\r\n//\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setLoading, setDirectory } from \"../actions/index\";\r\nimport { Grid, Fab, makeStyles, Drawer, Typography } from \"@material-ui/core\";\r\nimport DirectoryList from \"./directory_interaction/DirectoryList\";\r\nimport InstanceViewer from \"./directory_interaction/InstanceViewer\";\r\nimport CustomEntityCreator from \"./directory_interaction/CustomEntityCreator\";\r\nimport EntityInstanceCreator from \"./directory_interaction/EntityInstanceCreator\";\r\nimport { connect } from \"react-redux\";\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function Directory(props) {\r\n  const [mode, setMode] = React.useState(0);\r\n  //const [entities, setEntites] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n  const modes = {\r\n    IDLE: 0,\r\n    ENTITY_CREATION: 1,\r\n    INSTANCE_CREATION: 2,\r\n    INSTANCE_VIEWER: 3,\r\n  };\r\n\r\n  const updateDirectoryList = async () => {\r\n    if (props.lorelineId !== null) {\r\n      props.setLoading(true);\r\n      try {\r\n        await axios\r\n          .get(\r\n            `https://lorelines-expressapi.herokuapp.com/api/lorelines/${props.lorelineId}/directory/`\r\n          )\r\n          .then((res) => {\r\n            console.log(\"NEW DATA: \", res.data);\r\n            props.setDirectory(res.data);\r\n            props.setLoading(false);\r\n          });\r\n      } catch (err) {\r\n        props.setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNewEntityClicked = () => {\r\n    setMode(modes.ENTITY_CREATION);\r\n  };\r\n\r\n  const ModeComponent = () => {\r\n    switch (mode) {\r\n      case modes.ENTITY_CREATION:\r\n        return (\r\n          <CustomEntityCreator updateDirectoryList={updateDirectoryList} />\r\n        );\r\n      case modes.INSTANCE_CREATION:\r\n        return (\r\n          <EntityInstanceCreator updateDirectoryList={updateDirectoryList} />\r\n        );\r\n      case modes.INSTANCE_VIEWER:\r\n        return <InstanceViewer />;\r\n      default:\r\n        return <Typography>Select an entity or instance</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginTop: 20,\r\n        }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <ModeComponent />\r\n        </Grid>\r\n      </Grid>\r\n      <Drawer className={classes.drawer} variant=\"permanent\" anchor=\"right\">\r\n        <div className={classes.toolbar}></div>\r\n        <DirectoryList\r\n          modes={modes}\r\n          setMode={setMode}\r\n          updateDirectoryList={updateDirectoryList}\r\n        />\r\n      </Drawer>\r\n      <Fab\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: 20,\r\n          right: 20,\r\n          zIndex: 1900,\r\n        }}\r\n        variant=\"extended\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className={classes.margin}\r\n        onClick={handleNewEntityClicked}\r\n      >\r\n        <Add />\r\n        New Custom Entity\r\n      </Fab>\r\n    </main>\r\n  );\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    window: state.window,\r\n    instanceId: state.instanceId,\r\n    entityId: state.entityId,\r\n    lorelineId: state.lorelineId,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoading: setLoading,\r\n      setDirectory: setDirectory,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles, Grid, Typography, Card, CardContent } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tlink: {\r\n\t\tcolor: theme.palette.secondary.main,\r\n\t\ttextDecoration: 'underline',\r\n\t},\r\n}))\r\n\r\nexport default connect(mapStateToProps)(function About(props) {\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<Grid\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\theight: props.window.height,\r\n\t\t\t\t}}\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection=\"column\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Card width=\"500\">\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLorelines.com is the junior project of the Oregon Institute of Technology students:\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\t\t\t\t\tcolor: '#f78d1e',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJustin Boehnen, Evan Clark, Seth Ray, and Isaac Medlin\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLorelines v0.7 ALPHA\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t© 2020 All rights reserved\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</main>\r\n\t)\r\n})\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\twindow: state.window,\r\n\t}\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// src/loreline_interaction/NewLorelineDialog.js\r\n// Contains the function that creats a popup when a user attempts\r\n// to create a new loreline\r\n//\r\nimport React from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function NewLorelineDialog(props) {\r\n  const handleFileChange = (files) => {\r\n    const sizeInMB = 2;\r\n    var failed = false;\r\n\r\n    if (\r\n      files[0].type !== \"image/png\" &&\r\n      files[0].type !== \"image/jpg\" &&\r\n      files[0].type !== \"image/jpeg\"\r\n    ) {\r\n      alert(\r\n        files[0].name +\r\n          \" is not an accepted image format! Accepted formats are:\\n.png .jpg .jpeg\"\r\n      );\r\n      failed = true;\r\n    }\r\n\r\n    if (files[0].size > 1048576 * sizeInMB) {\r\n      alert(\r\n        \"File size exceeds \" +\r\n          sizeInMB +\r\n          \"MB limit! File uploaded was: \" +\r\n          (files[0].size / 1048576).toFixed(2) +\r\n          \"MB\"\r\n      );\r\n      failed = true;\r\n    }\r\n\r\n    if (!failed) props.setNewLorelineImage(files[0]);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={props.isOpen} onClose={props.handleNewDialogClose} fullWidth>\r\n      <DialogTitle>Create a new loreline:</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          error={props.submitAttempted && props.lorelineName === \"\"}\r\n          helperText={\r\n            props.submitAttempted && props.lorelineName === \"\"\r\n              ? \"This field cannot be empty!\"\r\n              : \"\"\r\n          }\r\n          autoFocus\r\n          name=\"LorelineName\"\r\n          label=\"Loreline Name\"\r\n          margin=\"dense\"\r\n          autoComplete=\"off\"\r\n          value={props.lorelineName}\r\n          onChange={props.onLorelineNameChange}\r\n          fullWidth\r\n          inputProps={{\r\n            dataTestId: \"lorelineName\",\r\n          }}\r\n        />\r\n        <FormGroup>\r\n          <Button component=\"label\">\r\n            Upload Image\r\n            <input\r\n              type=\"file\"\r\n              accept=\".jpg, .jpeg, .png\"\r\n              onChange={(e) => handleFileChange(e.target.files)}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </Button>\r\n          <Typography align=\"center\">\r\n            {props.newLorelineImage !== null ? props.newLorelineImage.name : \"\"}\r\n          </Typography>\r\n          <Tooltip\r\n            arrow\r\n            placement=\"left\"\r\n            title=\"Toggles whether you would like pre-defined entites in your loreline (recommended for beginners)\"\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={props.usingStaticEnities}\r\n                  onChange={props.toggleUsingStaticEntities}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Import standard assets\"\r\n            />\r\n          </Tooltip>\r\n        </FormGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={async (e) => await props.onNewLorelineSubmit(e)}\r\n          style={{ color: \"#1ece6c\" }}\r\n          autoFocus\r\n          dataTestId=\"createButton\"\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button onClick={props.handleNewDialogClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// src/loreline_interaction/DeleteLorelineDialog.js\r\n// Contains the function that creats a popup when a user attempts\r\n// to delete a loreline\r\n//\r\nimport React from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  deletebutton: {\r\n    color: \"#ea4b35\",\r\n    \"&:hover\": {\r\n      color: \"#000\",\r\n      backgroundColor: \"#ea4b35\",\r\n      fontWeight: \"bolder\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DeleteLorelineDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.deleteDialogOpen}\r\n      onClose={props.handleDeleteDialogClose}\r\n    >\r\n      <DialogTitle>Are you sure you want to delete:</DialogTitle>\r\n      <DialogContent>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{\r\n            overflow: \"hidden\",\r\n            textOverflow: \"clip\",\r\n            marginTop: 16,\r\n            marginBottom: 22,\r\n            textAlign: \"center\",\r\n            width: 400,\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          {props.deleteLorelineName}\r\n        </Typography>\r\n        <DialogContentText\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"#ea4b35\",\r\n          }}\r\n        >\r\n          This will permently delete this loreline, this is irreversible!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          dataTestId=\"confirmDelete\"\r\n          onClick={(e) => {\r\n            props.deleteLorelineFromDB(e, props.deleteLorelineId);\r\n          }}\r\n          className={classes.deletebutton}\r\n          autoFocus\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button onClick={props.handleDeleteDialogClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Lorelines.js\r\n// Loreline page function that displays a users current lorelines, and allows\r\n// them to create and delete lorelines\r\n//\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Snackbar,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardActionArea,\r\n  Fab,\r\n  Divider,\r\n  Tooltip,\r\n  CardMedia,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Delete, FileCopy, Add, Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { setLoreline, setLoading, setLorelineArray } from \"../actions/index\";\r\nimport NewLorelineDialog from \"./loreline_interaction/NewLorelineDialog\";\r\nimport DeleteLorelineDialog from \"./loreline_interaction/DeleteLorelineDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n  field: {\r\n    width: \"20vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  card: {\r\n    textOverflow: \"ellipsis\",\r\n    width: 350,\r\n    margin: 10,\r\n    borderRadius: 5,\r\n  },\r\n  selectedCard: {\r\n    textOverflow: \"ellipsis\",\r\n    width: 350,\r\n    margin: 10,\r\n    //outlineStyle: 'solid',\r\n    //outlineColor: '#f78d1e',\r\n    //outlineWidth: 4,\r\n    boxShadow: \"0 0 0 5px #f78d1e\",\r\n    borderRadius: 5,\r\n    backgroundColor: \"#666\",\r\n  },\r\n  cardimage: {\r\n    height: 140,\r\n  },\r\n  cardheader: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    height: 35,\r\n    width: 320,\r\n  },\r\n  deletebutton: {\r\n    \"&:hover\": {\r\n      color: \"#ea4b35\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function Lorelines(props) {\r\n  const classes = useStyles();\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = React.useState(false);\r\n  const [usingStaticEnities, setUsingStaticEntities] = React.useState(true);\r\n  const [newDialogOpen, setNewDialogOpen] = React.useState(false);\r\n  const [deleteLorelineId, setDeleteLorelineId] = React.useState(\"\");\r\n  const [deleteLorelineName, setDeleteLorelineName] = React.useState(\"\");\r\n  const [creationFeedbackOpen, setCreationFeedbackOpen] = React.useState(false);\r\n  const [lorelineName, setLorelineName] = useState(\"\");\r\n  const [newLorelineImage, setNewLorelineImage] = useState(null);\r\n  const [submitAttempted, setSubmitAttempted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    GetLorelines();\r\n  }, []);\r\n\r\n  const GetLorelines = async () => {\r\n    props.setLoading(true); // LOADING START: GET LORELINES\r\n    try {\r\n      const response = await axios.get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/lorelines`\r\n      );\r\n      props.setLorelineArray(response.data);\r\n      props.setLoading(false); // LOADING END: GET LORELINES\r\n    } catch (err) {\r\n      props.setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDialogOpen = (id, name) => {\r\n    setDeleteLorelineId(id);\r\n    setDeleteLorelineName(name);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  const handleNewDialogOpen = (id, name) => {\r\n    setNewDialogOpen(true);\r\n  };\r\n\r\n  const handleNewDialogClose = (id, name) => {\r\n    setNewDialogOpen(false);\r\n    setLorelineName(\"\");\r\n    setNewLorelineImage(null);\r\n    setUsingStaticEntities(true);\r\n    setSubmitAttempted(false);\r\n  };\r\n\r\n  const toggleUsingStaticEntities = () => {\r\n    setUsingStaticEntities(!usingStaticEnities);\r\n  };\r\n\r\n  const onLorelineNameChange = (e) => setLorelineName(e.target.value);\r\n\r\n  const handleSelectLoreline = (id) => {\r\n    props.setLoreline(id);\r\n  };\r\n\r\n  const handleFeedbackClose = (event, reason) => {\r\n    if (reason !== \"clickaway\") {\r\n      setCreationFeedbackOpen(false);\r\n    }\r\n  };\r\n\r\n  const createNewLoreline = async (name, file) => {\r\n    var imagePath = \"\";\r\n\r\n    if (file !== null) {\r\n      const data = new FormData();\r\n      data.append(\"image\", file, file.name);\r\n\r\n      try {\r\n        await axios\r\n          .post(\r\n            `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/images`,\r\n            data,\r\n            {\r\n              headers: {\r\n                accept: \"application/json\",\r\n                \"Accept-Language\": \"en-US,en;q=0.8\",\r\n                \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            imagePath = res.data ?? \"\";\r\n          });\r\n      } catch (err) {}\r\n    }\r\n\r\n    //default image\r\n    if (imagePath === \"\")\r\n      imagePath =\r\n        \"https://lorelines-image-library.s3-us-west-2.amazonaws.com/default_loreline_image.png\";\r\n\r\n    try {\r\n      await axios\r\n        .post(\r\n          `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/lorelines`,\r\n          {\r\n            name: name,\r\n            image: imagePath,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          //const array = props.lorelineArray\r\n          //const newElem = {\r\n          //  _id: res.data,\r\n          //  name: name,\r\n          //  image: imagePath,\r\n          //  modified: Date.now()\r\n          //}\r\n          //array.unshift(newElem)\r\n          //props.setLorelineArray(array)\r\n          GetLorelines();\r\n          props.setLoading(false); // LOADING END: NEW LORELINE\r\n          setCreationFeedbackOpen(true);\r\n        });\r\n    } catch (err) {}\r\n    GetLorelines();\r\n  };\r\n\r\n  const deleteLorelineFromDB = async (e, id) => {\r\n    e.preventDefault();\r\n    if (props.loreline === id) props.setLoreline(null);\r\n    props.setLoading(true); // LOADING START: DELETE LORELINE\r\n    handleDeleteDialogClose();\r\n    try {\r\n      await axios\r\n        .delete(\r\n          `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/lorelines/${id}`\r\n        )\r\n        .then(() => {\r\n          const array = [...props.lorelineArray];\r\n          array.forEach((loreline) => {\r\n            if (loreline._id === id) array.splice(array.indexOf(loreline), 1);\r\n          });\r\n          props.setLorelineArray(array);\r\n          //GetLorelines()\r\n          props.setLoading(false); // LOADING END: DELETE LORELINE\r\n        });\r\n    } catch (err) {}\r\n  };\r\n\r\n  const onNewLorelineSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitAttempted(true);\r\n    if (lorelineName !== \"\") {\r\n      props.setLoading(true); // LOADING START: NEW LORELINE\r\n      setLorelineName(\"\");\r\n      setNewLorelineImage(null);\r\n      setSubmitAttempted(false);\r\n      handleNewDialogClose();\r\n      createNewLoreline(lorelineName, newLorelineImage);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <div style={{ marginTop: 20 }}>\r\n        {/************************************Button that opens add loreline dialog******************************/}\r\n        <Fab\r\n          dataTestId=\"newLorelineButton\"\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: 20,\r\n            right: 20,\r\n            zIndex: 1900,\r\n          }}\r\n          variant=\"extended\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n          onClick={() => handleNewDialogOpen()}\r\n        >\r\n          <Add />\r\n          New Loreline\r\n        </Fab>\r\n        {/*********************** Popup menu for FAB ****************************************/}\r\n        <NewLorelineDialog\r\n          isOpen={newDialogOpen}\r\n          handleNewDialogClose={handleNewDialogClose}\r\n          submitAttempted={submitAttempted}\r\n          lorelineName={lorelineName}\r\n          onLorelineNameChange={onLorelineNameChange}\r\n          usingStaticEnities={usingStaticEnities}\r\n          toggleUsingStaticEntities={toggleUsingStaticEntities}\r\n          onNewLorelineSubmit={onNewLorelineSubmit}\r\n          setNewLorelineImage={setNewLorelineImage}\r\n          newLorelineImage={newLorelineImage}\r\n        />\r\n        {/*********************Small FeedBack to when a lorelines added*******************************/}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={creationFeedbackOpen}\r\n          autoHideDuration={6000}\r\n          onClose={handleFeedbackClose}\r\n          message=\"Loreline Added\"\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleFeedbackClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        {/***************************************Display of the main screen**********************/}\r\n        <Typography style={{ marginLeft: 20, marginBottom: 20 }} variant=\"h4\">\r\n          Select a Loreline\r\n        </Typography>\r\n        <Divider />\r\n        <div className={classes.root}>\r\n          {/*************************************Dynamically adding cards to screen***************/}\r\n          <Grid\r\n            container\r\n            style={{ marginTop: 15 }}\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            alignItems=\"center\"\r\n          >\r\n            {props.lorelineArray.map((loreline) => (\r\n              <Grid item key={props.lorelineArray.indexOf(loreline)}>\r\n                <Card\r\n                  className={\r\n                    props.loreline === loreline._id\r\n                      ? classes.selectedCard\r\n                      : classes.card\r\n                  }\r\n                >\r\n                  <Tooltip title=\"Select this loreline\">\r\n                    <CardActionArea\r\n                      dataTestId=\"selectLoreline\"\r\n                      onClick={() => {\r\n                        handleSelectLoreline(loreline._id);\r\n                      }}\r\n                    >\r\n                      <CardMedia\r\n                        className={classes.cardimage}\r\n                        image={\r\n                          loreline.image ??\r\n                          \"https://lorelines-image-library.s3-us-west-2.amazonaws.com/default_loreline_image.png\"\r\n                        }\r\n                      />\r\n                      <CardHeader\r\n                        title={\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            className={classes.cardheader}\r\n                          >\r\n                            {loreline.name}\r\n                          </Typography>\r\n                        }\r\n                        subheader={`Last Modified: ${new Date(\r\n                          loreline.modified\r\n                        ).toLocaleDateString()} at \r\n                        ${new Date(loreline.modified).toLocaleTimeString()}`}\r\n                      />\r\n                    </CardActionArea>\r\n                  </Tooltip>\r\n                  <Divider />\r\n                  <CardActions>\r\n                    <Tooltip title=\"Delete\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          handleDeleteDialogOpen(loreline._id, loreline.name)\r\n                        }\r\n                        className={classes.deletebutton}\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Duplicate: It doesn't work yet. Might get rid of it, idk man. This stuff is difficult.\">\r\n                      <IconButton>\r\n                        <FileCopy />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </CardActions>\r\n                  {/************************************Delete Loreline PopUp ********************************/}\r\n                  <DeleteLorelineDialog\r\n                    deleteDialogOpen={deleteDialogOpen}\r\n                    handleDeleteDialogClose={handleDeleteDialogClose}\r\n                    deleteLorelineName={deleteLorelineName}\r\n                    deleteLorelineId={deleteLorelineId}\r\n                    deleteLorelineFromDB={deleteLorelineFromDB}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n});\r\n//******************************************************************************\r\n// Redux Incoming Variables Function\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    loreline: state.lorelineId,\r\n    lorelineArray: state.lorelineArray,\r\n  };\r\n}\r\n//******************************************************************************\r\n// Redux Outgoing Variables Function\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoreline: setLoreline,\r\n      setLoading: setLoading,\r\n      setLorelineArray: setLorelineArray,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Help.js\r\n// Help page that contains tutorials for different aspects of Lorelines\r\n//\r\n//\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Logo from \"../images/logo.svg\"\r\nimport PDF from \"../images/UserTutorials.pdf\"\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default connect(mapStateToProps)(function Help(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main>\r\n      <Grid\r\n        className={classes.root}\r\n        style={{\r\n          textAlign: 'center',\r\n          height: props.window.height\r\n        }}\r\n        container\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n      >\r\n        <Grid item>\r\n          <Card width='500'>\r\n            <CardContent>\r\n              <Typography\r\n                style={{\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                Click the Lorelines icon below to download our tutorial PDF:\r\n              </Typography>\r\n              <a href={PDF} download>\r\n                <img src={Logo} alt=\"UserTutorials\" width=\"104\" height=\"142\"></img>\r\n              </a>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n})\r\n//******************************************************************************\r\n// Redux Incoming Variables Function\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    window: state.window\r\n  }\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Home.js\r\n// Home page function that holds other page functions and is loaded from\r\n// app.js\r\n//\r\nimport React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { setWindowWidth, setWindowHeight, setLoading } from \"../actions/index\";\r\n\r\nimport Topbar from \"./Topbar\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport Timeline from './Timeline'\r\nimport Account from './Account'\r\nimport Directory from './Directory'\r\nimport About from './About'\r\nimport Lorelines from './Lorelines'\r\nimport Help from './Help'\r\n\r\nconst styleClasses = () => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  box: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: \"2px 2px 2px 2px\",\r\n    backgroundColor: \"red\",\r\n  },\r\n  drawer: {\r\n    openWidth: 240,\r\n    closedWidth: 58,\r\n  },\r\n  topBar: {\r\n    height: 64,\r\n  },\r\n});\r\n\r\nconst drawerOpenWidth = 240;\r\nconst drawerClosedWidth = 58;\r\nconst topBarHeight = 64;\r\n\r\nclass Home extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = { drawerOpen: false }\r\n\t\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateWindowDimensions()\r\n\t\twindow.addEventListener('resize', this.updateWindowDimensions)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('resize', this.updateWindowDimensions)\r\n\t}\r\n\r\n\tupdateWindowDimensions() {\r\n\t\tif (this.state.drawerOpen) this.props.setWindowWidth(window.innerWidth - drawerOpenWidth)\r\n\t\telse this.props.setWindowWidth(window.innerWidth - drawerClosedWidth)\r\n\r\n\t\tthis.props.setWindowHeight(window.innerHeight - 64)\r\n\t}\r\n\r\n\ttoggleDrawer = open => {\r\n\t\tthis.setState({ drawerOpen: open })\r\n\t\tthis.updateWindowDimensions()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{!this.props.auth && <Redirect to=\"/\" />}\r\n\t\t\t\t<Topbar\r\n\t\t\t\t\tlogout={this.props.logout}\r\n\t\t\t\t\tdrawerOpen={this.state.drawerOpen}\r\n\t\t\t\t\tsetDrawerOpen={this.toggleDrawer}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styleClasses.root}>\r\n\t\t\t\t\t<Sidebar drawerOpen={this.state.drawerOpen} setDrawerOpen={this.toggleDrawer} />\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\twidth={this.props.window.width}\r\n\t\t\t\t\t\theight={this.props.window.height}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginLeft: this.state.drawerOpen ? drawerOpenWidth : drawerClosedWidth,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Route path=\"/app/account\">\r\n\t\t\t\t\t\t\t<Account />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/app/lorelines\">\r\n\t\t\t\t\t\t\t<Lorelines />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/app/new\">\r\n\t\t\t\t\t\t\t<h1>Hello, World</h1>\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/app/timeline\">\r\n\t\t\t\t\t\t\t<Timeline />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/app/directory\">\r\n\t\t\t\t\t\t\t<Directory style={{}} />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/app/about\">\r\n\t\t\t\t\t\t\t<About />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path=\"/app/help\">\r\n\t\t\t\t\t\t\t<Help />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n//******************************************************************************\r\n// Redux Incoming Variables Function\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    window: state.window,\r\n  };\r\n}\r\n//******************************************************************************\r\n// Redux Outgoing Variables Function\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setWindowWidth: setWindowWidth,\r\n      setWindowHeight: setWindowHeight,\r\n      setLoading: setLoading,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Home);\r\n","/** @format */\r\n//******************************************************************************\r\n// RegisterForm.js\r\n// Holds the RegisterForm function that handles taking a new users info\r\n//\r\n//\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport Validator from \"email-validator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  field: {\r\n    width: \"30vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  formControl: {\r\n    width: \"30vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n}));\r\n\r\nexport default function RegisterForm(props) {\r\n  const classes = useStyles();\r\n  const [verified, setVerified] = React.useState(false);\r\n  const [securityOpen, setSecurityOpen] = React.useState(false);\r\n  const [accountCreated, setAccountCreated] = React.useState(false);\r\n  const [directory, setDirectory] = React.useState(\"/register\");\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    confirmEmail: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    securityQ: \"\",\r\n    securityAnswer: \"\",\r\n    showPassword: false,\r\n    showConfirmPassword: false,\r\n    showSecurityAnswer: false,\r\n    submitAttempted: false,\r\n    emailExists: false,\r\n  });\r\n  useEffect(() => {\r\n    console.log(\"useEffect Called\");\r\n    if (Validator.validate(values.email) === true)\r\n      if (values.email === values.confirmEmail)\r\n        if (values.password !== \"\")\r\n          if (values.password === values.confirmPassword)\r\n            if (values.securityQ !== \"\")\r\n              if (values.securityAnswer !== \"\") {\r\n                console.log(\"changing router path\");\r\n                setDirectory(\"/register/confirm\");\r\n                console.log(directory);\r\n              }\r\n  });\r\n  const recaptchaLoaded = () => {\r\n    console.log(\"RecaptchLoaded\");\r\n  };\r\n  const verifiedCallback = (response) => {\r\n    if (response) setVerified(true);\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleSecurityOpen = () => {\r\n    setSecurityOpen(true);\r\n  };\r\n\r\n  const handleSecurityClose = () => {\r\n    setSecurityOpen(false);\r\n  };\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\r\n  };\r\n  const handleClickShowSecurityAnswer = () => {\r\n    setValues({ ...values, showSecurityAnswer: !values.showSecurityAnswer });\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setValues({ ...values, submitAttempted: true });\r\n    if (verified === false) {\r\n      alert(\"Please verify that you are a human!\");\r\n    } else {\r\n      if (Validator.validate(values.email) === true)\r\n        if (values.email === values.confirmEmail)\r\n          if (values.password !== \"\")\r\n            if (values.password === values.confirmPassword)\r\n              if (values.securityQ !== \"\")\r\n                if (values.securityAnswer !== \"\") {\r\n                  let exists = !props.createUser(\r\n                    values.name,\r\n                    values.email,\r\n                    values.password,\r\n                    values.securityQ,\r\n                    values.securityAnswer\r\n                  );\r\n                  setAccountCreated(true);\r\n                  setValues({ ...values, emailExists: exists });\r\n                }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: \"100vh\", textAlign: \"center\" }}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: \"bold\",\r\n                fontSize: 42,\r\n              }}\r\n            >\r\n              Create a new Lorelines account\r\n            </Typography>\r\n          </Grid>\r\n          {values.emailExists && (\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.error}\r\n                style={{ padding: 5, fontSize: 16 }}\r\n              >\r\n                a user with that email already exists\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              margin=\"normal\"\r\n              value={values.name}\r\n              onChange={handleChange(\"name\")}\r\n              error={values.submitAttempted && values.name === \"\"}\r\n              helperText={\r\n                values.submitAttempted && values.name === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\"\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              value={values.email}\r\n              onChange={handleChange(\"email\")}\r\n              error={\r\n                (values.submitAttempted && values.email === \"\") ||\r\n                (values.submitAttempted &&\r\n                  Validator.validate(values.email) === false)\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.email === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\" ||\r\n                    (values.submitAttempted &&\r\n                      Validator.validate(values.email) === false)\r\n                  ? \"invalid email address\"\r\n                  : \"\"\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"confirmEmail\"\r\n              label=\"Confirm Email\"\r\n              margin=\"normal\"\r\n              value={values.confirmEmail}\r\n              onChange={handleChange(\"confirmEmail\")}\r\n              error={\r\n                values.email !== values.confirmEmail ||\r\n                (values.submitAttempted && values.confirmEmail === \"\")\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmEmail === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\" || values.email !== values.confirmEmail\r\n                  ? \"emails do not match\"\r\n                  : \"\"\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"pass\"\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              value={values.password}\r\n              onChange={handleChange(\"password\")}\r\n              error={values.submitAttempted && values.password === \"\"}\r\n              helperText={\r\n                values.submitAttempted && values.password === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\"\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"confirmpass\"\r\n              label=\"Confirm Password\"\r\n              margin=\"normal\"\r\n              type={values.showConfirmPassword ? \"text\" : \"password\"}\r\n              value={values.confirmpassword}\r\n              onChange={handleChange(\"confirmPassword\")}\r\n              error={\r\n                values.password !== values.confirmPassword ||\r\n                (values.submitAttempted && values.confirmPassword === \"\")\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmPassword === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\" || values.password !== values.confirmPassword\r\n                  ? \"passwords do not match\"\r\n                  : \"\"\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowConfirmPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showConfirmPassword ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-controlled-open-select-label\">\r\n                Security Question\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={securityOpen}\r\n                onClose={handleSecurityClose}\r\n                onOpen={handleSecurityOpen}\r\n                value={values.securityQ}\r\n                onChange={handleChange(\"securityQ\")}\r\n                error={values.submitAttempted && values.securityQ === \"\"}\r\n                helperText={\r\n                  values.submitAttempted && values.securityQ === \"\"\r\n                    ? \"this field cannot be empty\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <MenuItem value={\"What was the model of your first car?\"}>\r\n                  What was the model of your first car?\r\n                </MenuItem>\r\n                <MenuItem value={\"What's your favorite pets name?\"}>\r\n                  What's your favorite pets name?\r\n                </MenuItem>\r\n                <MenuItem value={\"What was your childhood nickname?\"}>\r\n                  What was your childhood nickname?\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={\"What school did you attend during the sixth grade?\"}\r\n                >\r\n                  What school did you attend during the sixth grade?\r\n                </MenuItem>\r\n                <MenuItem value={\"What town was your first job in?\"}>\r\n                  What town was your first job in?\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={\"Who was your favorite teacher in highschool?\"}\r\n                >\r\n                  Who was your favorite teacher in highschool?\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={\r\n                    \"What is the first name of the boy or girl that you first kissed?\"\r\n                  }\r\n                >\r\n                  What is the first name of the boy or girl that you first\r\n                  kissed?\r\n                </MenuItem>\r\n                <MenuItem value={\"What is your oldest sibling's middle name?\"}>\r\n                  What is your oldest sibling's middle name?\r\n                </MenuItem>\r\n                <MenuItem value={\"Who was your childhood hero?\"}>\r\n                  Who was your childhood hero?\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid Item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"SecurityAnswer\"\r\n              label=\"Security Question Answer\"\r\n              margin=\"normal\"\r\n              type={values.showSecurityAnswer ? \"text\" : \"password\"}\r\n              value={values.confirmpassword}\r\n              onChange={handleChange(\"securityAnswer\")}\r\n              error={values.submitAttempted && values.securityAnswer === \"\"}\r\n              helperText={\r\n                values.submitAttempted && values.securityAnswer === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\"\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle answer visibility\"\r\n                      onClick={handleClickShowSecurityAnswer}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showSecurityAnswer ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Recaptcha\r\n              sitekey=\"6LeRQ-oUAAAAAP4frfdbHtXO80ADJe1kD3tAF-k2\"\r\n              render=\"explicit\"\r\n              verifyCallback={verifiedCallback}\r\n              onloadCallback={recaptchaLoaded}\r\n              theme=\"dark\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: \"50px\",\r\n                width: \"260px\",\r\n              }}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n            >\r\n              <Link\r\n                style={{\r\n                  color: \"inherit\",\r\n                  textDecoration: \"none\",\r\n                }}\r\n                to={directory}\r\n              >\r\n                Submit\r\n              </Link>\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              <Link className={classes.link} to=\"/\">\r\n                Go back\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n//******************************************************************************\r\n// RegisterConfirmation.js\r\n// Holds the RegisterConfirmation function that displays a message upon \r\n// successfully creating a Lorelines account\r\n//\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ minHeight: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Thank you for creating a Lorelines account</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","//******************************************************************************\r\n// src/PasswordRecovery/ForgotPassword.js\r\n// Contains the function that provides the dialog if a user forgets their\r\n// password\r\n//\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport Mail from \"@material-ui/icons/Mail\";\r\nimport { setLoading } from \"../../actions/index\";\r\nimport SelectInput from \"@material-ui/core/Select/SelectInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n  field: {\r\n    width: \"20vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function ForgotPassword(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [submitAttempted, setSubmitAttempt] = useState(false);\r\n  const [id, setID] = useState(\"\");\r\n  const [idObj, setIdObj] = useState(\"\");\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [response, setResponse] = useState(false);\r\n  const [disableBut, setDisabled] = useState(true);\r\n  const [directory, setDirectory] = useState(\"/forgot\");\r\n\r\n  useEffect(() => {\r\n    if (props.user.id !== undefined) {\r\n      setDisabled(false);\r\n      setDirectory(\"/forgot/security\");\r\n      console.log(\"changing route\", props.user.id);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  });\r\n\r\n  const GetUserId = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/users/${email}/getuser`\r\n      );\r\n      console.log(response.data);\r\n      SetPropId(response.data);\r\n      setSubmitAttempt(true);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const SetPropId = (resid) => {\r\n    setIdObj(resid);\r\n    console.log(\"object id:\", idObj);\r\n    if (idObj === \"\") {\r\n      setNotFound(true);\r\n    } else {\r\n      setNotFound(false);\r\n    }\r\n\r\n    idObj.map((res) => {\r\n      setID(res._id);\r\n    });\r\n\r\n    props.user.id = id;\r\n    console.log(id);\r\n  };\r\n\r\n  const onEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  const onSubmit = (e) => {\r\n    setSubmitAttempt(true);\r\n    GetUserId();\r\n  };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: \"100vh\", textAlign: \"center\" }}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            style={{\r\n              padding: 2,\r\n              fontWeight: \"bold\",\r\n              fontSize: 42,\r\n            }}\r\n          >\r\n            Enter in your lorelines email:\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            className={classes.field}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            autoComplete=\"off\"\r\n            value={email}\r\n            onChange={onEmailChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Mail color=\"secondary\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            error={(submitAttempted && email === \"\") || notFound === true}\r\n            helperText={\r\n              (submitAttempted && email === \"\"\r\n                ? \"this field cannot be empty\"\r\n                : \"\") || (notFound === true ? \"Email not found\" : \"\")\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 18,\r\n                borderRadius: \"50px\",\r\n                width: \"130px\",\r\n              }}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                marginLeft: 5,\r\n                padding: 5,\r\n                fontSize: 18,\r\n                borderRadius: \"50px\",\r\n                width: \"130px\",\r\n              }}\r\n              type=\"submit\"\r\n              disabled={disableBut}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              <Link\r\n                style={{\r\n                  color: \"inherit\",\r\n                  textDecoration: \"none\",\r\n                }}\r\n                to={directory}\r\n              >\r\n                Next Page\r\n              </Link>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to=\"/\">\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  );\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoading: setLoading,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n","//******************************************************************************\r\n// src/PasswordRecovery/ChangePassword.js\r\n// Contains the function that provides the dialog to change a users\r\n// password\r\n//\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  field: {\r\n    width: \"23vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function ChangePassword(props) {\r\n  const classes = useStyles();\r\n  const [password, setNewPassword] = React.useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n  const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [submitAttempted, setSubmitAttempt] = React.useState(false);\r\n  const [disableBut, setDisabled] = useState(true);\r\n  const [directory, setDirectory] = React.useState(\"/forgot/change\");\r\n\r\n  const onNewPasswordChange = (e) => setNewPassword(e.target.value);\r\n\r\n  const onConfirmPasswordChange = (e) => setConfirmPassword(e.target.value);\r\n\r\n  const handleClickShowPassword = () => {\r\n    if (showPassword === false) setShowPassword(true);\r\n    else setShowPassword(false);\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    if (showConfirmPassword === false) setShowConfirmPassword(true);\r\n    else setShowConfirmPassword(false);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const ChangePassword = async () => {\r\n    try {\r\n      if (password !== \"\") {\r\n        if (password === confirmPassword) {\r\n          const response = await axios.post(\r\n            `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/changePassword`,\r\n            {\r\n              password,\r\n            }\r\n          );\r\n          console.log(response.data);\r\n          if (response.data === \"OK\") {\r\n            setDirectory(\"/forgot/confirmation\");\r\n            setDisabled(false);\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ChangePassword();\r\n    setSubmitAttempt(true);\r\n  };\r\n  return (\r\n    <main className={classes.root}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: \"100vh\", textAlign: \"center\" }}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: \"bold\",\r\n                fontSize: 42,\r\n              }}\r\n            >\r\n              Set your new password\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"pass\"\r\n              label=\"New Password\"\r\n              margin=\"normal\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={onNewPasswordChange}\r\n              error={submitAttempted && password === \"\"}\r\n              helperText={\r\n                submitAttempted && password === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\"\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"confirmpass\"\r\n              label=\"Confirm Password\"\r\n              margin=\"normal\"\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              value={confirmPassword}\r\n              onChange={onConfirmPasswordChange}\r\n              error={\r\n                password !== confirmPassword ||\r\n                (submitAttempted && confirmPassword === \"\")\r\n              }\r\n              helperText={\r\n                submitAttempted && confirmPassword === \"\"\r\n                  ? \"this field cannot be empty\"\r\n                  : \"\" || password !== confirmPassword\r\n                  ? \"passwords do not match\"\r\n                  : \"\"\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowConfirmPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Button\r\n                style={{\r\n                  marginTop: 16,\r\n                  padding: 5,\r\n                  fontSize: 18,\r\n                  borderRadius: \"50px\",\r\n                  width: \"130px\",\r\n                }}\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={onSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                style={{\r\n                  marginTop: 16,\r\n                  marginLeft: 5,\r\n                  padding: 5,\r\n                  fontSize: 18,\r\n                  borderRadius: \"50px\",\r\n                  width: \"130px\",\r\n                }}\r\n                type=\"submit\"\r\n                disabled={disableBut}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: \"inherit\",\r\n                    textDecoration: \"none\",\r\n                  }}\r\n                  to={directory}\r\n                >\r\n                  Next Page\r\n                </Link>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  );\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators({}, dispatch);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport axios from \"axios\";\r\nimport { setLoading } from \"../../actions/index\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  field: {\r\n    width: \"23vw\",\r\n    minWidth: \"250px\",\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: \"underline\",\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function SecurityQ(props) {\r\n  const classes = useStyles();\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [securityPassword, setSecurityPassword] = useState(\"\");\r\n  const [submitAttempted, setSubmitAttempted] = useState(false);\r\n  const [directory, setDirectory] = useState(\"/forgot/security\");\r\n  const [disableBut, setDisable] = useState(true);\r\n  const [wrongAnswer, setWrongAnswer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    GetSeqQuestion();\r\n  }, []);\r\n\r\n  const onAnswerChange = (e) => setSecurityPassword(e.target.value);\r\n\r\n  const GetSeqQuestion = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/securityQuestion`\r\n      );\r\n      console.log(response.data);\r\n      setQuestion(response.data);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const CheckQuestion = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/recover`,\r\n        {\r\n          securityPassword,\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      if (response.data === \"Security answers match\") {\r\n        console.log(\"Sucess\");\r\n        setDirectory(\"/forgot/change\");\r\n        setDisable(false);\r\n        setWrongAnswer(false);\r\n      } else {\r\n        setWrongAnswer(true);\r\n        console.log(\"nope\");\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitAttempted(true);\r\n    CheckQuestion();\r\n  };\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: \"100vh\", textAlign: \"center\" }}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            style={{\r\n              padding: 2,\r\n              fontWeight: \"bold\",\r\n              fontSize: 42,\r\n            }}\r\n          >\r\n            {question}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            className={classes.field}\r\n            name=\"answer\"\r\n            label=\"Answer\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            autoComplete=\"off\"\r\n            value={securityPassword}\r\n            onChange={onAnswerChange}\r\n            error={\r\n              (submitAttempted && securityPassword === \"\") ||\r\n              wrongAnswer === true\r\n            }\r\n            helperText={\r\n              (submitAttempted && securityPassword === \"\"\r\n                ? \"this field cannot be empty\"\r\n                : \"\") || (wrongAnswer === true ? \"Wrong security answer\" : \"\")\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 18,\r\n                borderRadius: \"50px\",\r\n                width: \"130px\",\r\n              }}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                marginLeft: 5,\r\n                padding: 5,\r\n                fontSize: 18,\r\n                borderRadius: \"50px\",\r\n                width: \"130px\",\r\n              }}\r\n              type=\"submit\"\r\n              disabled={disableBut}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              <Link\r\n                style={{\r\n                  color: \"inherit\",\r\n                  textDecoration: \"none\",\r\n                }}\r\n                to={directory}\r\n              >\r\n                Next Page\r\n              </Link>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to=\"/\">\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  );\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators({}, dispatch);\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ minHeight: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Your password has been changed!</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}","/** @format */\r\n// **************************************************\r\n// App.js file for Lorelines front end\r\n//\r\n// Authors: JESI\r\nimport React, { Component } from 'react'\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  CssBaseline,\r\n  Backdrop,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\n\r\nimport './App.css'\r\nimport { setUser, setLoading, setLoreline } from './actions/index'\r\nimport LoginForm from './components/LoginForm'\r\nimport Home from './components/Home'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport RegisterConfirmation from './components/RegisterConfirmation'\r\nimport ForgotPassword from './components/PasswordRecovery/ForgotPassword'\r\nimport ChangePassword from './components/PasswordRecovery/ChangePassword'\r\nimport SecurityQ from './components/PasswordRecovery/SecurityQ'\r\nimport PasswordConfirmation from './components/PasswordRecovery/PasswordConfirmation'\r\n\r\nconst jwtDecode = require('jwt-decode')\r\n\r\n// color theme definition: light\r\nconst light = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#d9d9d9',\r\n      text: '#fff',\r\n      icons: '#000'\r\n    },\r\n    secondary: { main: '#000' },\r\n    error: { main: '#ff0000' }\r\n  }\r\n})\r\n\r\n// color theme definition: dark\r\nconst dark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#222',\r\n      text: '#fff',\r\n      icons: '#fff'\r\n    },\r\n    secondary: { main: '#fff' },\r\n    error: { main: '#ff0000' },\r\n    type: 'dark'\r\n  }\r\n})\r\n\r\n// add themes to a js object\r\nconst themes = { dark: dark, light: light }\r\n\r\n// this component's styles\r\nconst styleClasses = theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  center: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\n//************************************\r\n// App class\r\n// Main class that initializes other components\r\n// and begins the front end.\r\n// \r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      auth: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let token = localStorage.getItem('token')\r\n    if (token) {\r\n      axios\r\n        .put('https://lorelines-expressapi.herokuapp.com/api/users/token', {\r\n          token\r\n        })\r\n        .then(res => {\r\n          localStorage.setItem('token', res.data)\r\n          this.setState({ auth: true, userData: jwtDecode(res.data) })\r\n          var temp = jwtDecode(res.data)\r\n          this.props.setUser({\r\n            id: temp.id,\r\n            name: temp.name,\r\n            email: temp.email\r\n          })\r\n        })\r\n        .catch()\r\n    }\r\n  }\r\n\r\n  tryLogin = async (email, password) => {\r\n    try {\r\n      this.setState.loading = true\r\n      const { data } = await axios.post(\r\n        'https://lorelines-expressapi.herokuapp.com/api/users/token',\r\n        {\r\n          email,\r\n          password\r\n        }\r\n      )\r\n      localStorage.setItem('token', data)\r\n      this.setState({ loading: false, auth: true })\r\n      this.props.setUser(jwtDecode(data))\r\n      return true\r\n    } catch (err) {\r\n      this.setState.loading = false\r\n      return false\r\n    }\r\n  }\r\n\r\n  createUser = async (name, email, password, securityQuestion, securityPassword) => {\r\n    try {\r\n      this.setState.loading = true\r\n      const { data } = await axios.post(\r\n        'https://lorelines-expressapi.herokuapp.com/api/users',\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          securityQuestion,\r\n          securityPassword\r\n        }\r\n      )\r\n      localStorage.setItem('token', data)\r\n      this.setState.auth = true\r\n      this.props.setLoading(false)\r\n      return true\r\n    } catch (err) {\r\n      this.setState.loading = false\r\n      return false\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.setLoreline(null)\r\n    localStorage.removeItem('token')\r\n    this.setState({ auth: false, userData: null })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={themes[this.props.colorTheme]}>\r\n        <Backdrop style={{ zIndex: 2000 }} open={this.props.loading}>\r\n          <CircularProgress color='inherit' />\r\n        </Backdrop>\r\n        <CssBaseline />\r\n        <div className={styleClasses.root}>\r\n          <Router>\r\n            {this.state.auth && <Redirect to='/app' />}\r\n            <Route path='/app'>\r\n              <Home logout={this.logout} auth={this.state.auth} />\r\n            </Route>\r\n            <Route exact path='/'>\r\n              <LoginForm\r\n                className={styleClasses.center}\r\n                tryLogin={this.tryLogin}\r\n              />\r\n            </Route>\r\n            <Route exact path='/forgot' component={ForgotPassword} />\r\n\r\n            <Route exact path='/forgot/security' component={SecurityQ} />\r\n            <Route exact path='/forgot/change' component={ChangePassword} />\r\n            <Route exact path='/forgot/confirmation' component={PasswordConfirmation} />\r\n            <Route exact path='/register'>\r\n              <RegisterForm createUser={this.createUser} />\r\n            </Route>\r\n            <Route exact path='/register/confirm'>\r\n              <RegisterConfirmation></RegisterConfirmation>\r\n            </Route>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    loading: state.loading,\r\n    colorTheme: state.colorTheme\r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    { setUser: setUser, setLoading: setLoading, setLoreline: setLoreline },\r\n    dispatch\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// src/reducers/index.js\r\n// Combines individual reducer files into allReducers variable\r\n//\r\n//\r\nimport { combineReducers } from 'redux'\r\nimport UserReducer from './UserReducer'\r\nimport DirectoryReducer from './DirectoryReducer'\r\nimport WindowReducer from './WindowReducer'\r\nimport LoadingReducer from './LoadingReducer'\r\nimport ThemeReducer from './ThemeReducer'\r\nimport CurrentLorelineReducer from './CurrentLorelineReducer'\r\nimport LorelineArrayReducer from './LorelineArrayReducer'\r\nimport CurrentEntityReducer from './CurrentEntityReducer'\r\nimport CurrentInstanceReducer from './CurrentInstanceReducer'\r\nimport AxiosInstanceReducer from './AxiosInstanceReducer'\r\n\r\nconst allReducers = combineReducers({\r\n  user: UserReducer,\r\n  directory: DirectoryReducer,\r\n  window: WindowReducer,\r\n  loading: LoadingReducer,\r\n  colorTheme: ThemeReducer,\r\n  lorelineId: CurrentLorelineReducer,\r\n  lorelineArray: LorelineArrayReducer,\r\n  entityId: CurrentEntityReducer,\r\n  instanceId: CurrentInstanceReducer,\r\n  instance: AxiosInstanceReducer\r\n})\r\n\r\nexport default allReducers\r\n","/** @format */\r\n//******************************************************************************\r\n// User Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setUser(user)\r\n//\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'USER_SET':\r\n      return action.payload;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Directory Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setDirectory(directory)\r\n//\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'DIRECTORY_CHANGED':\r\n      return action.payload;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Window Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setWindowWidth(width), setWindowHeight(height)\r\n//\r\nexport default function(state = { width: 100, height: 100 }, action) {\r\n  switch (action.type) {\r\n    case 'SET_WINDOW_HEIGHT':\r\n      return { width: state.width, height: action.payload };\r\n    case 'SET_WINDOW_WIDTH':\r\n      return { width: action.payload, height: state.height };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Loading Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setLoading(isLoading)\r\n//\r\nexport default function(state = false, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return action.payload\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Theme Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setTheme(theme)\r\n//\r\nexport default function(state = 'dark', action) {\r\n  switch (action.type) {\r\n    case 'SET_THEME':\r\n      return action.payload;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Current Loreline Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setLoreline(lorelineId)\r\n//\r\nexport default function(state = null, action) {\r\n  switch (action.type) {\r\n    case 'LORELINE_CHANGED':\r\n      return action.payload\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Loreline Array Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setLorelineArray(lorelineArray)\r\n//\r\nexport default function(state = [], action) {\r\n  switch (action.type) {\r\n    case 'SET_LORELINE_ARRAY':\r\n      return action.payload\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n","/** @format */\r\n//******************************************************************************\r\n// Current Entity Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setEntityId(entityId)\r\n//\r\nexport default function(state = null, action) {\r\n    switch (action.type) {\r\n      case 'ENTITY_CHANGED':\r\n        return action.payload\r\n    }\r\n    return state\r\n  }","/** @format */\r\n//******************************************************************************\r\n// Current Instance Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setInstanceId(instanceId)\r\n//\r\nexport default function(state = null, action) {\r\n    switch (action.type) {\r\n      case 'INSTANCEID_CHANGED':\r\n        return action.payload\r\n    }\r\n    return state\r\n  }","/** @format */\r\n//******************************************************************************\r\n// Axios Instance Reducer\r\n// Matching Function(s) in src/actions/index.js:\r\n// setInstance(lorelineId, entityId, instanceId), setInstanceSuccess(instance)\r\n//\r\nexport default function(state = null, action) {\r\n    switch (action.type) {\r\n      case 'INSTANCE_CHANGED':\r\n        return action.payload\r\n    }\r\n    return state\r\n  }\r\n  ","/** @format */\r\n//******************************************************************************\r\n// src/index.js\r\n// Main index.js file, combines reducers to make the store variable \r\n//\r\n//\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(allReducers, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}