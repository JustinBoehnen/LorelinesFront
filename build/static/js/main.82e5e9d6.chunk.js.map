{"version":3,"sources":["components/LoginForm.js","components/Topbar.js","components/Sidebar.js","components/Account.js","components/Home.js","components/RegisterForm.js","components/RegisterConfirmation.js","components/ForgotPassword.js","App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["useStyles","makeStyles","theme","content","flexGrow","link","color","palette","secondary","main","textDecoration","field","width","minWidth","error","LoginForm","props","useState","email","setEmail","password","setPassword","submitAttempted","setSubmitAttempted","loginFailed","setLoginFailed","showPassword","setShowPassword","classes","onSubmit","e","a","preventDefault","Validator","validate","tryLogin","accept","className","Grid","style","minHeight","textAlign","container","direction","justify","alignItems","alt","src","Logo","item","Typography","padding","fontWeight","fontSize","TextField","helperText","name","label","type","variant","margin","autoComplete","InputProps","startAdornment","InputAdornment","position","Mail","value","onChange","target","Lock","endAdornment","IconButton","aria-label","onClick","onMouseDown","event","Visibility","VisibilityOff","Button","marginTop","borderRadius","to","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","toolbar","justifyContent","mixins","logo","fill","height","orange","primary","logout","backgroundColor","Topbar","AppBar","clsx","drawerOpen","Toolbar","setDrawerOpen","edge","Menu","xmlns","viewBox","id","data-name","cx","cy","r","d","flexShrink","whiteSpace","overflowX","drawerClose","breakpoints","up","spacing","Sidebar","Drawer","paper","open","Close","Divider","List","ListItem","button","key","ListItemIcon","AccountCircle","ListItemText","Apps","LibraryAdd","Timeline","Info","RegisterForm","box","borderStyle","borderWidth","Home","auth","path","component","Account","render","React","confirmEmail","confirmPassword","showConfirmPassword","emailExists","values","setValues","handleChange","prop","handleMouseDownPassword","confirmpassword","exists","createUser","uuidv4","require","light","createMuiTheme","contrastText","text","icons","dark","center","flex","flexDirection","Boolean","window","location","hostname","match","ReactDOM","setAuth","useEffect","token","localStorage","getItem","axios","put","then","res","setItem","data","console","log","catch","err","post","CssBaseline","removeItem","exact","ForgotPassword","RegisterConfirmation","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"+YAgBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,QAAS,CACPC,SAAU,GAEZC,KAAM,CACJC,MAAOJ,EAAMK,QAAQC,UAAUC,KAC/BC,eAAgB,aAElBC,MAAO,CACLC,MAAO,OACPC,SAAU,SAEZC,MAAO,CACLR,MAAOJ,EAAMK,QAAQO,MAAML,UAIhB,SAASM,EAAUC,GAAQ,IAAD,EACbC,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,OAEPF,mBAAS,IAFF,mBAEhCG,EAFgC,KAEtBC,EAFsB,OAGOJ,oBAAS,GAHhB,mBAGhCK,EAHgC,KAGfC,EAHe,OAIDN,oBAAS,GAJR,mBAIhCO,EAJgC,KAInBC,EAJmB,OAKCR,oBAAS,GALV,mBAKhCS,EALgC,KAKlBC,EALkB,KAOjCC,EAAU5B,IASV6B,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,yDACfD,EAAEE,iBACFT,GAAmB,IAEfU,IAAUC,SAAShB,IAAuB,KAAbE,EAJlB,iCAKMJ,EAAMmB,SAASjB,EAAOE,GAL5B,cAKTgB,EALS,SAMAX,GAAe,GANf,kBAONW,GAPM,kCASN,GATM,4CAAH,sDAiBd,OACE,0BAAMC,UAAWT,EAAQzB,SACvB,8BACE,kBAACmC,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,QAASC,UAAW,UACxCC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEX,yBAAKC,IAAI,OAAOC,IAAKC,IAAMpC,MAAO,MAClC,6BACA,kBAAC0B,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CACEX,MAAO,CACLY,QAAS,EACTC,WAAY,IACZC,SAAU,KAJd,wBAUF,kBAACf,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnBG,MACGQ,GAA6B,KAAVJ,GACnBI,IAAoBW,IAAUC,SAAShB,GAE1CqC,WACEjC,GAA6B,KAAVJ,EACf,6BACOI,IAAoBW,IAAUC,SAAShB,GAC9C,wBACA,GAENsC,KAAK,QACLC,MAAM,QACNC,KAAK,QACLC,QAAQ,WACRC,OAAO,SACPC,aAAa,MACbC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,EAAA,EAAD,CAAM5D,MAAM,gBAIlB6D,MAAOjD,EACPkD,SAxEU,SAAAtC,GAAC,OAAIX,EAASW,EAAEuC,OAAOF,WA2ErC,kBAAC7B,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnBG,MAAOQ,GAAgC,KAAbF,EAC1BmC,WACEjC,GAAgC,KAAbF,EACf,6BACA,GAENoC,KAAK,WACLC,MAAM,WACNE,QAAQ,WACRC,OAAO,SACPF,KAAMhC,EAAe,OAAS,WAC9BmC,aAAa,MACbC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACK,EAAA,EAAD,CAAMhE,MAAM,eAGhBiE,aACE,kBAACP,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACO,EAAA,EAAD,CACEC,aAAW,6BACXC,QAnFY,kBAAM/C,GAAiBD,IAoFnCiD,YAlFY,SAAAC,GAAK,OAAIA,EAAM5C,mBAoF1BN,EAAe,kBAACmD,EAAA,EAAD,MAAiB,kBAACC,EAAA,EAAD,SAKzCX,MAAO/C,EACPgD,SA3Ga,SAAAtC,GAAC,OAAIT,EAAYS,EAAEuC,OAAOF,WA8G1C3C,GACC,kBAACc,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CACEb,UAAWT,EAAQd,MACnByB,MAAO,CAAEY,QAAS,EAAGE,SAAU,KAFjC,8CAKE,6BALF,qBAUJ,kBAACf,EAAA,EAAD,CAAMW,MAAI,GACR,kBAAC8B,EAAA,EAAD,CACExC,MAAO,CACLyC,UAAW,GACX7B,QAAS,EACTE,SAAU,GACV4B,aAAc,OACdrE,MAAO,SAET8C,KAAK,SACLpD,MAAM,UACNqD,QAAQ,YACRe,QAAO,uCAAE,WAAM5C,GAAN,SAAAC,EAAA,sEAAiBF,EAASC,GAA1B,mFAAF,uDAXT,WAgBF,kBAACQ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYX,MAAO,CAAEY,QAAS,EAAGE,SAAU,KAA3C,WACW,IACT,kBAAC,IAAD,CAAMhB,UAAWT,EAAQvB,KAAM6E,GAAG,WAAlC,iBAKJ,kBAAC5C,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYX,MAAO,CAAEY,QAAS,GAAIE,SAAU,KAA5C,kCACkC,IAChC,kBAAC,IAAD,CAAMhB,UAAWT,EAAQvB,KAAM6E,GAAG,aAAlC,mB,unBCzLd,IAEMlF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,OAAQpF,EAAMoF,OAAOC,OAAS,EAC9BC,WAAYtF,EAAMuF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQzF,EAAMuF,YAAYE,OAAOC,MACjCC,SAAU3F,EAAMuF,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAdwB,IAexBpF,MAAM,eAAD,OAfmB,IAenB,OACL4E,WAAYtF,EAAMuF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQzF,EAAMuF,YAAYE,OAAOC,MACjCC,SAAU3F,EAAMuF,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJhB,QAAS,QAEXiB,QAAQ,EAAD,CACLjB,QAAS,OACTvC,WAAY,SACZyD,eAAgB,YACbpG,EAAMqG,OAAOF,SAElBG,KAAM,CACJC,KAAM,OACNC,OAAQ,IAEVC,OAAQ,CACNF,KAAMvG,EAAMK,QAAQqG,QAAQnG,MAE9BoG,OAAQ,CACNvG,MAAOJ,EAAMK,QAAQqG,QAAQnG,KAC7BqG,gBAAiB,QACjBzD,SAAU,GACVD,WAAY,SACZ4C,WAAY,OACZG,YAAa,EACb,UAAW,CACTW,gBAAiB,QACjBxG,MAAOJ,EAAMK,QAAQqG,QAAQnG,WAKpB,SAASsG,EAAO/F,GAC7B,IAAMY,EAAU5B,IAEhB,OACE,yBAAKqC,UAAWT,EAAQuD,MACtB,kBAAC6B,EAAA,EAAD,CACE/C,SAAS,QACT5B,UAAW4E,YAAKrF,EAAQyD,OAAT,eACZzD,EAAQmE,YAAc/E,EAAMkG,cAG/B,kBAACC,EAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CACElE,MAAM,UACNmE,aAAW,cACXC,QAAS,kBAAM1D,EAAMoG,eAAc,IACnCC,KAAK,QACLhF,UAAW4E,YACTrF,EAAQsE,WACRlF,EAAMkG,YAActF,EAAQwE,OAG9B,kBAACkB,EAAA,EAAD,OAEF,yBACEjF,UAAWT,EAAQ4E,KACnBe,MAAM,6BACNC,QAAQ,mBAER,uBAAGC,GAAG,UAAUC,YAAU,WACxB,uBAAGD,GAAG,YAAYC,YAAU,WAC1B,4BAAQrF,UAAU,QAAQsF,GAAG,QAAQC,GAAG,QAAQC,EAAE,UAClD,0BACExF,UAAWT,EAAQ+E,OACnBmB,EAAE,+HAEJ,0BACEzF,UAAWT,EAAQ+E,OACnBmB,EAAE,oIAEJ,0BACEzF,UAAWT,EAAQ+E,OACnBmB,EAAE,8IAEJ,0BACEzF,UAAWT,EAAQ+E,OACnBmB,EAAE,yHAEJ,0BACEzF,UAAWT,EAAQ+E,OACnBmB,EAAE,kFAKV,yBACEzF,UAAWT,EAAQ4E,KACnBe,MAAM,6BACNC,QAAQ,oBAER,uBAAGC,GAAG,UAAUC,YAAU,WACxB,uBAAGD,GAAG,YAAYC,YAAU,WAC1B,0BACErF,UAAU,QACVyF,EAAE,oYAEJ,0BACEzF,UAAU,QACVyF,EAAE,szCAEJ,0BACEzF,UAAU,QACVyF,EAAE,0PAEJ,0BACEzF,UAAU,QACVyF,EAAE,6mCAKV,kBAAC/C,EAAA,EAAD,CAAQ1C,UAAWT,EAAQiF,OAAQnC,QAAS1D,EAAM6F,QAAlD,aAKJ,yBAAKxE,UAAWT,EAAQyE,W,ysBCjI9B,IAGMrG,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCqF,OAAQ,CACN3E,MALwB,IAMxBmH,WAAY,EACZC,WAAY,UAEdd,WAAY,CACVe,UAAW,SACXrH,MAXwB,IAYxB4E,WAAYtF,EAAMuF,YAAYC,OAAO,QAAS,CAC5CC,OAAQzF,EAAMuF,YAAYE,OAAOC,MACjCC,SAAU3F,EAAMuF,YAAYI,SAASI,kBAGzCiC,YAAY,aACV1C,WAAYtF,EAAMuF,YAAYC,OAAO,QAAS,CAC5CC,OAAQzF,EAAMuF,YAAYE,OAAOC,MACjCC,SAAU3F,EAAMuF,YAAYI,SAASC,gBAEvCmC,UAAW,SACXrH,MAtByB,IAuBxBV,EAAMiI,YAAYC,GAAG,MAAQ,CAC5BxH,MAxBuB,KA2B3ByF,QAAQ,IACNjB,QAAS,OACTvC,WAAY,SACZyD,eAAgB,WAChBnD,QAASjD,EAAMmI,QAAQ,EAAG,IACvBnI,EAAMqG,OAAOF,SAElBhG,KAAM,CACJC,MAAOJ,EAAMK,QAAQC,UAAUC,KAC/BC,eAAgB,iBAIL,SAAS4H,GAAQtH,GAAQ,IAAD,IAC/BY,EAAU5B,KAEhB,OACE,6BACE,kBAACuI,EAAA,EAAD,CACE5E,QAAQ,YACRtB,UAAW4E,YAAKrF,EAAQ2D,QAAT,mBACZ3D,EAAQsF,WAAalG,EAAMkG,YADf,cAEZtF,EAAQsG,aAAelH,EAAMkG,YAFjB,IAIftF,QAAS,CACP4G,MAAOvB,aAAI,mBACRrF,EAAQsF,WAAalG,EAAMkG,YADnB,cAERtF,EAAQsG,aAAelH,EAAMkG,YAFrB,KAKbuB,KAAMzH,EAAMkG,YAEZ,yBAAK7E,UAAWT,EAAQyE,SACtB,kBAAC7B,EAAA,EAAD,CAAYE,QAAS,kBAAM1D,EAAMoG,eAAc,KAC7C,kBAACsB,EAAA,EAAD,CAAOpI,MAAM,gBAGjB,kBAACqI,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMvG,UAAWT,EAAQvB,KAAM6E,GAAG,gBAChC,kBAAC2D,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,WACnB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAe3I,MAAM,eAEvB,kBAAC4I,EAAA,EAAD,CAActC,QAAQ,cAG1B,kBAAC,IAAD,CAAMvE,UAAWT,EAAQvB,KAAM6E,GAAG,kBAChC,kBAAC2D,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,aACnB,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAM7I,MAAM,eAEd,kBAAC4I,EAAA,EAAD,CAActC,QAAQ,iBAI5B,kBAAC+B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMvG,UAAWT,EAAQvB,KAAM6E,GAAG,YAChC,kBAAC2D,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,qBACnB,kBAACC,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAY9I,MAAM,eAEpB,kBAAC4I,EAAA,EAAD,CAActC,QAAQ,yBAI5B,kBAAC+B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMvG,UAAWT,EAAQvB,KAAM6E,GAAG,iBAChC,kBAAC2D,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,YACnB,kBAACC,EAAA,EAAD,KACE,kBAACK,GAAA,EAAD,CAAU/I,MAAM,eAElB,kBAAC4I,EAAA,EAAD,CAActC,QAAQ,eAG1B,kBAAC,IAAD,CAAMvE,UAAWT,EAAQvB,KAAM6E,GAAG,kBAChC,kBAAC2D,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,aACnB,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAU1I,MAAM,eAElB,kBAAC4I,EAAA,EAAD,CAActC,QAAQ,iBAI5B,kBAAC+B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMvG,UAAWT,EAAQvB,KAAM6E,GAAG,cAChC,kBAAC2D,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,mBACnB,kBAACC,EAAA,EAAD,KACE,kBAACM,GAAA,EAAD,CAAMhJ,MAAM,eAEd,kBAAC4I,EAAA,EAAD,CAActC,QAAQ,yBC7IpC,IAAM5G,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJ/E,SAAU,GAEZC,KAAM,CACJC,MAAOJ,EAAMK,QAAQC,UAAUC,KAC/BC,eAAgB,iBAIL,SAAS6I,KACtB,IAAM3H,EAAU5B,KAEhB,OACE,0BAAMqC,UAAWT,EAAQuD,MACvB,kBAAC7C,EAAA,EAAD,CACEC,MAAO,CAAEmE,OAAQ,OAAQ9F,MAAO,OAAQ6B,UAAW,UACnDE,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXH,WAAS,GAET,kBAACJ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,uCCjBV,IAAMlD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJC,QAAS,QAEXoE,IAAK,CACH5I,MAAO,QACP8F,OAAQ,QACR+C,YAAa,QACbC,YAAa,kBACb5C,gBAAiB,WAIN,SAAS6C,GAAK3I,GAAQ,IAAD,EACEC,oBAAS,GADX,mBAC3BiG,EAD2B,KACfE,EADe,KAG5BxF,EAAU5B,KAEhB,OACE,8BACIgB,EAAM4I,MAAQ,kBAAC,IAAD,CAAU1E,GAAG,MAC7B,kBAAC6B,EAAD,CACEF,OAAQ7F,EAAM6F,OACdK,WAAYA,EACZE,cAAeA,IAEjB,yBAAK/E,UAAWT,EAAQuD,MACtB,kBAACmD,GAAD,CAASpB,WAAYA,EAAYE,cAAeA,IAChD,kBAAC,IAAD,CAAOyC,KAAK,eAAeC,UAAWC,KACtC,kBAAC,IAAD,CAAOF,KAAK,iBAAiBG,OAAQ,kBAAM,4CAC3C,kBAAC,IAAD,CAAOH,KAAK,WAAWG,OAAQ,kBAAM,yBAAK3H,UAAWT,EAAQ4H,SAC7D,kBAAC,IAAD,CAAOK,KAAK,gBAAgBG,OAAQ,kBAAM,2CAC1C,kBAAC,IAAD,CAAOH,KAAK,iBAAiBG,OAAQ,kBAAM,4CAC3C,kBAAC,IAAD,CAAOH,KAAK,aAAaG,OAAQ,kBAAM,0C,6kBC5B/C,IAAMhK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJ/E,SAAU,GAEZO,MAAO,CACLC,MAAO,OACPC,SAAU,SAEZR,KAAM,CACJC,MAAOJ,EAAMK,QAAQC,UAAUC,KAC/BC,eAAgB,aAElBI,MAAO,CACLR,MAAOJ,EAAMK,QAAQO,MAAML,UAIhB,SAAS8I,GAAavI,GACnC,IAAMY,EAAU5B,KAD0B,EAEdiK,IAAMhJ,SAAS,CACzCuC,KAAM,GACNtC,MAAO,GACPgJ,aAAc,GACd9I,SAAU,GACV+I,gBAAiB,GACjBzI,cAAc,EACd0I,qBAAqB,EACrB9I,iBAAiB,EACjB+I,aAAa,IAX2B,mBAEnCC,EAFmC,KAE3BC,EAF2B,KAcpCC,EAAe,SAAAC,GAAI,OAAI,SAAA7F,GAC3B2F,EAAU,MAAKD,EAAN,eAAeG,EAAO7F,EAAMP,OAAOF,WAWxCuG,EAA0B,SAAA9F,GAC9BA,EAAM5C,kBAoBR,OACE,0BAAMK,UAAWT,EAAQuD,MACvB,8BACE,kBAAC7C,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,QAASC,UAAW,UACxCE,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXH,WAAS,GAET,kBAACJ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CACEX,MAAO,CACLY,QAAS,EACTC,WAAY,OACZC,SAAU,KAJd,mCAUDiH,EAAOD,aACN,kBAAC/H,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CACEb,UAAWT,EAAQd,MACnByB,MAAO,CAAEY,QAAS,EAAGE,SAAU,KAFjC,0CAQJ,kBAACf,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnB6C,KAAK,OACLC,MAAM,OACNG,OAAO,SACPO,MAAOmG,EAAO9G,KACdY,SAAUoG,EAAa,QACvB1J,MAAOwJ,EAAOhJ,iBAAmC,KAAhBgJ,EAAO9G,KACxCD,WACE+G,EAAOhJ,iBAAmC,KAAhBgJ,EAAO9G,KAC7B,6BACA,MAIV,kBAAClB,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnB6C,KAAK,QACLC,MAAM,QACNG,OAAO,SACPO,MAAOmG,EAAOpJ,MACdkD,SAAUoG,EAAa,SACvB1J,MACGwJ,EAAOhJ,iBAAoC,KAAjBgJ,EAAOpJ,OACjCoJ,EAAOhJ,kBAC+B,IAArCW,IAAUC,SAASoI,EAAOpJ,OAE9BqC,WACE+G,EAAOhJ,iBAAoC,KAAjBgJ,EAAOpJ,MAC7B,6BAECoJ,EAAOhJ,kBAC+B,IAArCW,IAAUC,SAASoI,EAAOpJ,OAC5B,wBACA,MAIV,kBAACoB,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnB6C,KAAK,eACLC,MAAM,gBACNG,OAAO,SACPO,MAAOmG,EAAOJ,aACd9F,SAAUoG,EAAa,gBACvB1J,MACEwJ,EAAOpJ,QAAUoJ,EAAOJ,cACvBI,EAAOhJ,iBAA2C,KAAxBgJ,EAAOJ,aAEpC3G,WACE+G,EAAOhJ,iBAA2C,KAAxBgJ,EAAOJ,aAC7B,6BACMI,EAAOpJ,QAAUoJ,EAAOJ,aAC9B,sBACA,MAIV,kBAAC5H,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnB6C,KAAK,OACLC,MAAM,WACNG,OAAO,SACPF,KAAM4G,EAAO5I,aAAe,OAAS,WACrCyC,MAAOmG,EAAOlJ,SACdgD,SAAUoG,EAAa,YACvB1J,MAAOwJ,EAAOhJ,iBAAuC,KAApBgJ,EAAOlJ,SACxCmC,WACE+G,EAAOhJ,iBAAuC,KAApBgJ,EAAOlJ,SAC7B,6BACA,GAEN0C,WAAY,CACVS,aACE,kBAACP,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACO,EAAA,EAAD,CACEC,aAAW,6BACXC,QA7IY,WAC9B6F,EAAU,MAAKD,EAAN,CAAc5I,cAAe4I,EAAO5I,iBA6I3BiD,YAAa+F,GAEZJ,EAAO5I,aAAe,kBAACmD,EAAA,EAAD,MAAiB,kBAACC,EAAA,EAAD,YAOpD,kBAACxC,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACK,EAAA,EAAD,CACEjB,UAAWT,EAAQjB,MACnB6C,KAAK,cACLC,MAAM,mBACNG,OAAO,SACPF,KAAM4G,EAAOF,oBAAsB,OAAS,WAC5CjG,MAAOmG,EAAOK,gBACdvG,SAAUoG,EAAa,mBACvB1J,MACEwJ,EAAOlJ,WAAakJ,EAAOH,iBAC1BG,EAAOhJ,iBAA8C,KAA3BgJ,EAAOH,gBAEpC5G,WACE+G,EAAOhJ,iBAA8C,KAA3BgJ,EAAOH,gBAC7B,6BACMG,EAAOlJ,WAAakJ,EAAOH,gBACjC,yBACA,GAENrG,WAAY,CACVS,aACE,kBAACP,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACO,EAAA,EAAD,CACEC,aAAW,6BACXC,QA5KmB,WACrC6F,EAAU,MAAKD,EAAN,CAAcF,qBAAsBE,EAAOF,wBA4KlCzF,YAAa+F,GAEZJ,EAAOF,oBACN,kBAACvF,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,YAQd,kBAACxC,EAAA,EAAD,CAAMW,MAAI,GACR,kBAAC8B,EAAA,EAAD,CACExC,MAAO,CACLyC,UAAW,GACX7B,QAAS,EACTE,SAAU,GACV4B,aAAc,OACdrE,MAAO,SAET8C,KAAK,SACLpD,MAAM,UACNqD,QAAQ,YACRe,QA9LK,SAAA5C,GAIf,GAHAA,EAAEE,iBACFuI,EAAU,MAAKD,EAAN,CAAchJ,iBAAiB,MAEC,IAArCW,IAAUC,SAASoI,EAAOpJ,QACxBoJ,EAAOpJ,QAAUoJ,EAAOJ,cACF,KAApBI,EAAOlJ,UACLkJ,EAAOlJ,WAAakJ,EAAOH,gBAAiB,CAC9C,IAAIS,GAAU5J,EAAM6J,WAClBP,EAAO9G,KACP8G,EAAOpJ,MACPoJ,EAAOlJ,UAETmJ,EAAU,MAAKD,EAAN,CAAcD,YAAaO,QAsKpC,WAgBF,kBAACtI,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYX,MAAO,CAAEY,QAAS,EAAGE,SAAU,KACzC,kBAAC,IAAD,CAAMhB,UAAWT,EAAQvB,KAAM6E,GAAG,KAAlC,gBC9Pd,IAAMlF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJ/E,SAAU,GAEZC,KAAM,CACJC,MAAOJ,EAAMK,QAAQC,UAAUC,KAC/BC,eAAgB,iBAIL,SAAS6I,KACtB,IAAM3H,EAAU5B,KAEhB,OACE,0BAAMqC,UAAWT,EAAQuD,MACvB,kBAAC7C,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,QAASC,UAAW,UACxCE,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXH,WAAS,GAET,kBAACJ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,oDAEF,kBAACZ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMb,UAAWT,EAAQvB,KAAM6E,GAAG,KAAlC,uBC3BZ,IAAMlF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJ/E,SAAU,GAEZC,KAAM,CACJC,MAAOJ,EAAMK,QAAQC,UAAUC,KAC/BC,eAAgB,iBAIL,SAAS6I,KACtB,IAAM3H,EAAU5B,KAEhB,OACE,0BAAMqC,UAAWT,EAAQuD,MACvB,kBAAC7C,EAAA,EAAD,CACEC,MAAO,CAAEmE,OAAQ,QAASjE,UAAW,UACrCE,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXH,WAAS,GAET,kBAACJ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,wBAEF,kBAACZ,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMb,UAAWT,EAAQvB,KAAM6E,GAAG,KAAlC,uBCdZ,IAAM4F,GAASC,EAAQ,KAEjBC,GAAQC,YAAe,CAC3B1K,QAAS,CACPqG,QAAS,CAEPnG,KAAM,UACNyK,aAAc,QAEhB3F,OAAQ,CACN9E,KAAM,UACN0K,KAAM,OACNC,MAAO,QAET5K,UAAW,CAAEC,KAAM,QACnBK,MAAO,CAAEL,KAAM,cAIb4K,GAAOJ,YAAe,CAC1B1K,QAAS,CACPqG,QAAS,CAEPnG,KAAM,UACNyK,aAAc,QAEhB3F,OAAQ,CACN9E,KAAM,OACN0K,KAAM,OACNC,MAAO,QAET5K,UAAW,CAAEC,KAAM,QACnBK,MAAO,CAAEL,KAAM,WACfiD,KAAM,UAIJ1D,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiF,KAAM,CACJC,QAAS,QAEXkG,OAAQ,CACNC,KAAM,EACNC,cAAe,MACf3I,WAAY,SACZyD,eAAgB,cClDAmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAS9B,OAAO,mBF6DD,WAAgB,IAAD,EACJ/I,mBAAS,IADL,gCAEJA,oBAAS,IAFL,mBAErB2I,EAFqB,KAEfmC,EAFe,OAGF9K,mBAAS,QAHP,mBAGrBf,EAHqB,KAKtB0B,GALsB,KAKZ5B,MAEhBgM,qBAAU,WACR,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,GACFG,IACGC,IAAI,6DAA8D,CACjEJ,UAEDK,MAAK,SAAAC,GACJL,aAAaM,QAAQ,QAASD,EAAIE,MAClCC,QAAQC,IAAIJ,EAAIE,MAChBV,GAAQ,MAETa,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,SAIhC,IAAM1K,EAAQ,uCAAG,WAAOjB,EAAOE,GAAd,iBAAAW,EAAA,+EAEUqK,IAAMU,KAC3B,6DACA,CACE5L,QACAE,aANS,uBAELqL,EAFK,EAELA,KAORP,aAAaM,QAAQ,QAASC,GAC9BV,GAAQ,GAVK,mBAWN,GAXM,4DAaN,GAbM,0DAAH,wDAiBRlB,EAAU,uCAAG,WAAOrH,EAAMtC,EAAOE,GAApB,mBAAAW,EAAA,sEAEX0F,EAAKqD,KAFM,SAIQsB,IAAMU,KAC3B,uDACA,CACErF,KACAjE,OACAtC,QACAE,aAVW,uBAIPqL,EAJO,EAIPA,KASRP,aAAaM,QAAQ,QAASC,GAC9BV,GAAQ,GAdO,mBAeR,GAfQ,4DAiBR,GAjBQ,0DAAH,0DA0BhB,OACE,kBAAC,IAAD,CAAkB7L,MAAiB,SAAVA,EAAmBmL,GAAOL,IACjD,kBAAC+B,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,yBAAK1K,UAAWT,EAAQuD,MACrByE,GAAQ,kBAAC,IAAD,CAAU1E,GAAG,SACtB,kBAAC,IAAD,CAAO2E,KAAK,QACV,kBAACF,GAAD,CAAM9C,OAZD,WACbqF,aAAac,WAAW,SACxBjB,GAAQ,IAUsBnC,KAAMA,KAE9B,kBAAC,IAAD,CAAOqD,OAAK,EAACpD,KAAK,KAChB,kBAAC9I,EAAD,CAAWsB,UAAWT,EAAQ0J,OAAQnJ,SAAUA,KAElD,kBAAC,IAAD,CAAO0H,KAAK,UAAUC,UAAWoD,KACjC,kBAAC,IAAD,CAAOD,OAAK,EAACpD,KAAK,aAChB,kBAAC,GAAD,CAAcgB,WAAYA,KAE5B,kBAAC,IAAD,CAAOhB,KAAK,oBAAoBC,UAAWqD,UE/IrC,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlB,MAAK,SAAAmB,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.82e5e9d6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Logo from '../images/logo.svg'\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Grid,\r\n  IconButton\r\n} from '@material-ui/core'\r\n\r\nimport { Mail, Lock, Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport Validator from 'email-validator'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  },\r\n  field: {\r\n    width: '20vw',\r\n    minWidth: '250px'\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  }\r\n}))\r\n\r\nexport default function LoginForm(props) {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [submitAttempted, setSubmitAttempted] = useState(false)\r\n  const [loginFailed, setLoginFailed] = useState(false)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const classes = useStyles()\r\n  //const onSubmit = (e) => {\r\n  //    e.preventDefault();\r\n  //}\r\n\r\n  const onEmailChange = e => setEmail(e.target.value)\r\n\r\n  const onPasswordChange = e => setPassword(e.target.value)\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault()\r\n    setSubmitAttempted(true)\r\n\r\n    if (Validator.validate(email) && password !== '') {\r\n      let accept = await props.tryLogin(email, password)\r\n      if (!accept) setLoginFailed(true)\r\n      return accept\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword)\r\n\r\n  const handleMouseDownPassword = event => event.preventDefault()\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: '100vh', textAlign: 'center' }}\r\n          container\r\n          direction='column'\r\n          justify='center'\r\n          alignItems='center'\r\n        >\r\n          <img alt='logo' src={Logo} width={160} />\r\n          <br />\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 900,\r\n                fontSize: 50\r\n              }}\r\n            >\r\n              Log in to Lorelines\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={\r\n                (submitAttempted && email === '') ||\r\n                (submitAttempted && !Validator.validate(email))\r\n              }\r\n              helperText={\r\n                submitAttempted && email === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || (submitAttempted && !Validator.validate(email))\r\n                  ? 'invalid email address'\r\n                  : ''\r\n              }\r\n              name='email'\r\n              label='Email'\r\n              type='email'\r\n              variant='outlined'\r\n              margin='normal'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <Mail color='secondary' />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              value={email}\r\n              onChange={onEmailChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={submitAttempted && password === ''}\r\n              helperText={\r\n                submitAttempted && password === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n              name='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              margin='normal'\r\n              type={showPassword ? 'text' : 'password'}\r\n              autoComplete='off'\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <Lock color='secondary' />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      aria-label='toggle password visibility'\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n          </Grid>\r\n          {loginFailed && (\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.error}\r\n                style={{ padding: 5, fontSize: 16 }}\r\n              >\r\n                an incorrect email or password was provided\r\n                <br />\r\n                please try again\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: '50px',\r\n                width: '260px'\r\n              }}\r\n              type='submit'\r\n              color='primary'\r\n              variant='contained'\r\n              onClick={async e => await onSubmit(e)}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              I forgot{' '}\r\n              <Link className={classes.link} to='/forgot'>\r\n                my password\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 30, fontSize: 20 }}>\r\n              Don't have a Lorelines account?{' '}\r\n              <Link className={classes.link} to='/register'>\r\n                Click here\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  IconButton,\r\n  Button,\r\n  Container\r\n} from '@material-ui/core'\r\nimport { Menu } from '@material-ui/icons'\r\n\r\nconst drawerWidthExpanded = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidthExpanded,\r\n    width: `calc(100% - ${drawerWidthExpanded}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  logo: {\r\n    fill: '#fff',\r\n    height: 50\r\n  },\r\n  orange: {\r\n    fill: theme.palette.primary.main\r\n  },\r\n  logout: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: 'white',\r\n    fontSize: 14,\r\n    fontWeight: 'bolder',\r\n    marginLeft: 'auto',\r\n    marginRight: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'black',\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function Topbar(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={() => props.setDrawerOpen(true)}\r\n            edge='start'\r\n            className={clsx(\r\n              classes.menuButton,\r\n              props.drawerOpen && classes.hide\r\n            )}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 41.17 41.17'\r\n          >\r\n            <g id='Layer_2' data-name='Layer 2'>\r\n              <g id='Layer_1-2' data-name='Layer 1'>\r\n                <circle className='cls-1' cx='20.58' cy='20.58' r='20.58' />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M16.76,13.22a.46.46,0,0,0,.74-.12l1.21-2.4a1.51,1.51,0,0,0-.91-2.11A1.55,1.55,0,0,0,16,9.43l-.86,1.71a.46.46,0,0,0,.09.54Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M13.08,16.61a.47.47,0,0,0-.75.13L5.46,30.47a1.51,1.51,0,0,0,1.15,2.16,1.54,1.54,0,0,0,1.57-.87l6.53-13.07a.47.47,0,0,0-.09-.54Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M34.56,8.53A1.55,1.55,0,0,0,33,9.41L26.46,22.48a.46.46,0,0,0,.09.53l1.54,1.54a.46.46,0,0,0,.75-.12L35.71,10.7A1.51,1.51,0,0,0,34.56,8.53Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M24.41,28a.46.46,0,0,0-.75.12l-1.2,2.4a1.51,1.51,0,0,0,.91,2.11,1.55,1.55,0,0,0,1.81-.84L26,30a.46.46,0,0,0-.09-.54Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M10.81,8.68a1.51,1.51,0,0,0-2.13,2.13L30.36,32.48a1.5,1.5,0,0,0,2.12-2.12Z'\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 168.56 43.24'\r\n          >\r\n            <g id='Layer_2' data-name='Layer 2'>\r\n              <g id='Layer_1-2' data-name='Layer 1'>\r\n                <path\r\n                  className='cls-1'\r\n                  d='M21.74,35.33c-6.19,0-11.95,4-15.55,4-.72,0-.92-.48-.92-1C5.27,27.81,21.54,4.2,31.73,4.2c1.28,0,1.8.52,1.8,1.35,0,3.28-8.11,11.31-13.31,11.31-.76,0-.92-.68-1.28-.68s-.36.84-.36,1.08c0,2.56,1.92,3.12,3.88,3.12,6.27,0,15.78-10.19,15.78-16.14C38.24,1.76,36.61,0,32.37,0,15.71,0,0,29.41,0,39c0,2.64,2.76,4.2,5.63,4.2,6.44,0,11.11-3,16.59-3a1.94,1.94,0,0,0,2-2A2.57,2.57,0,0,0,21.74,35.33Z'\r\n                />\r\n                <path\r\n                  className='cls-1'\r\n                  d='M88.64,36.53c-1.12,0-1.6.52-2.6.52-1.68,0-2.32-1.6-2.32-4a25.51,25.51,0,0,1,.64-5.12C93.15,25.42,99,18.1,99,13.19c0-2.72-1.76-4.68-5.84-4.68-5.83,0-11.86,9.23-14.14,17.87l-1.68.24a.77.77,0,0,0-.38.1c-.62-.9-2.08-1.5-4.66-1.5a13.2,13.2,0,0,0-7.6,2.42,5.59,5.59,0,0,1-2.31.81c-2.83,0-.72-2.51-4.15-2.51s-7.48,5.11-8,5.11h0c-.08,0-.12-.08-.12-.2a12.1,12.1,0,0,0,.88-3.92c0-.91-.28-1.63-1.12-1.63C48,25.3,44,29.41,39.36,29.41h0a8.15,8.15,0,0,1-8,7.16c-1.36,0-1.76-.76-1.76-1.6,0-3.76,5.92-6,10.91-6.4.64-.2,1.32-1.75,1.32-2.87,0-.64-.2-1.12-.76-1.16s-.88,0-1.32,0c-8.35,0-15,6.87-15,11.63,0,2.55,1.92,4.47,6.43,4.47,5.44,0,11.19-3.39,11.51-7.59A5.54,5.54,0,0,0,46,30.53a1.21,1.21,0,0,1,.36,1c0,1.76-1.8,6.51-1.8,7.27,0,1,1.6,1.36,3.24,1.36,1.87,0,2-1.16,2.83-2.2,1-1.63,4.2-6.39,6-6.39.8,0,1.24.84,2.32.84a6.74,6.74,0,0,0,1.74-.26,7.57,7.57,0,0,0-.86,3.34c0,2.87,2.19,5.27,7.43,5.27,4.39,0,9.11-2,9.11-4.71,0-.6-.44-1-1.24-1-1.48,0-2.4,1.72-5.31,1.72-3.48,0-3.48-1-3.48-1,5.33-.66,10.1-4.33,10.84-7.15a2,2,0,0,0,.91.19h.32a21.72,21.72,0,0,0-.4,4.12c0,4.56,1.76,7.91,6.11,7.91,2.28,0,5.36-1.44,5.36-3.31C89.48,36.81,89.32,36.53,88.64,36.53ZM91.2,12.27c1,0,1.59,1,1.59,2.44,0,2.63-2,6.91-7.51,9.63C87.08,18.26,89.92,12.27,91.2,12.27ZM66,32.69c-.32,0-.4-.16-.4-.4,0-1.88,3.24-4,4.88-4,.56,0,1.11.12,1.11.6C71.61,30.33,68,32.69,66,32.69Z'\r\n                />\r\n                <path\r\n                  className='cls-1'\r\n                  d='M101.23,35.05c-1.16,0-.92.84-2.48.84s-2.32-1.32-2.32-2.8c0-1.64,1.68-5.24,1.68-5.88a.75.75,0,0,0-.84-.71,13.7,13.7,0,0,0-4.12,1.11c-1.15,1.76-1.91,6.44-1.91,8.56,0,3.11,2.23,4.31,4.59,4.31,3.12,0,6.72-2.08,6.72-4.51A1.22,1.22,0,0,0,101.23,35.05Z'\r\n                />\r\n                <path\r\n                  className='cls-1'\r\n                  d='M162.61,28.89a27.75,27.75,0,0,0-4,.32,5.25,5.25,0,0,0-5-3.95c-5.48,0-14.79,11.71-20.38,11.71-1.44,0-1.64-.64-1.64-1a.49.49,0,0,1,0-.2c5.79-.72,11-5,11-7.88,0-1.51-1.44-2.67-5-2.67-6.41,0-11.31,4.63-12.25,8.81-1,.29-3.2,1.58-4.69,1.58-1,0-1-.84-1-1.28,0-1.32.72-2.12.72-3.6s-1.36-1.92-2.76-1.92c-3,0-7.55,3.68-8.19,3.68a.33.33,0,0,1-.32-.36c0-.6.84-2.12.84-3.44,0-1.16-.68-2.15-3.16-2.15C101,26.54,101,30,101,30c0,.72.36,1.48,1.08,1.48s1.55-.64,2.47-.64a1.44,1.44,0,0,1,1.64,1.52c0,1.76-1.8,5-1.8,6.23,0,1,1.08,1.36,1.88,1.36a2.5,2.5,0,0,0,1.56-.56c.56-.48,5.4-5,6.24-5s.83.4.83,1c0,3,.12,4.47,2.6,4.47a13.56,13.56,0,0,0,7.86-3.05c.61,2.24,2.86,3.93,7.25,3.93,8.51,0,16.5-10.95,19.06-10.95a3.34,3.34,0,0,1,2,.56c-4.84,1.52-9,4-9,7.2,0,1.55,1.44,2.71,4.63,2.71,6.88,0,9.79-4.51,9.79-8.59v0c2.68.24,5.44,1.2,5.44,3.32,0,.4-.08.72-.08,1s.2.4.48.4c1.12,0,3.71-1.68,3.71-3.6S166.61,28.89,162.61,28.89Zm-31.69,3.4c0-1.88,3.24-4,4.87-4,.56,0,1.12.12,1.12.6,0,1.44-3.63,3.8-5.59,3.8C131,32.69,130.92,32.53,130.92,32.29Zm20.34,3.48c-.68,0-1-.36-1-.8,0-1.48,2-2.6,4.36-3.12a3.33,3.33,0,0,1,.12.88C154.78,34.25,153.66,35.77,151.26,35.77Z'\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <Button className={classes.logout} onClick={props.logout}>\r\n            Log Out\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbar} />\r\n    </div>\r\n  )\r\n}\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport {\r\n  AccountCircle,\r\n  LibraryAdd,\r\n  Apps,\r\n  Timeline,\r\n  List as ListIcon,\r\n  Info,\r\n  Close\r\n} from '@material-ui/icons'\r\n\r\nconst drawerWidthExpanded = 240\r\nconst drawerWidthCondensed = 58\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidthExpanded,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  drawerOpen: {\r\n    overflowX: 'hidden',\r\n    width: drawerWidthExpanded,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: drawerWidthCondensed, //theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidthCondensed //theme.spacing(9) + 1,\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant='permanent'\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: props.drawerOpen,\r\n          [classes.drawerClose]: !props.drawerOpen\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: props.drawerOpen,\r\n            [classes.drawerClose]: !props.drawerOpen\r\n          })\r\n        }}\r\n        open={props.drawerOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={() => props.setDrawerOpen(false)}>\r\n            <Close color='secondary' />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/account'>\r\n            <ListItem button key='Account'>\r\n              <ListItemIcon>\r\n                <AccountCircle color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Account' />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to='/app/lorelines'>\r\n            <ListItem button key='Lorelines'>\r\n              <ListItemIcon>\r\n                <Apps color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Lorelines' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/new'>\r\n            <ListItem button key='New Custom Entity'>\r\n              <ListItemIcon>\r\n                <LibraryAdd color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='New Custom Entity' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/timeline'>\r\n            <ListItem button key='Timeline'>\r\n              <ListItemIcon>\r\n                <Timeline color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Timeline' />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to='/app/directory'>\r\n            <ListItem button key='Directory'>\r\n              <ListItemIcon>\r\n                <ListIcon color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Directory' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/about'>\r\n            <ListItem button key='About Lorelines'>\r\n              <ListItemIcon>\r\n                <Info color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='About Lorelines' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: '70vh', width: '70vw', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>This is the Account page yo</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport Topbar from './Topbar'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport Account from './Account'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  box: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px 2px 2px 2px',\r\n    backgroundColor: 'red'\r\n  }\r\n}))\r\n\r\nexport default function Home(props) {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      {!props.auth && <Redirect to='/' />}\r\n      <Topbar\r\n        logout={props.logout}\r\n        drawerOpen={drawerOpen}\r\n        setDrawerOpen={setDrawerOpen}\r\n      />\r\n      <div className={classes.root}>\r\n        <Sidebar drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\r\n        <Route path='/app/account' component={Account} />\r\n        <Route path='/app/lorelines' render={() => <h1>Lorelines</h1>} />\r\n        <Route path='/app/new' render={() => <div className={classes.box} />} />\r\n        <Route path='/app/timeline' render={() => <h1>Timeline</h1>} />\r\n        <Route path='/app/directory' render={() => <h1>Directory</h1>} />\r\n        <Route path='/app/about' render={() => <h1>About</h1>} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport Validator from 'email-validator'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  field: {\r\n    width: '23vw',\r\n    minWidth: '250px'\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm(props) {\r\n  const classes = useStyles()\r\n  const [values, setValues] = React.useState({\r\n    name: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    showPassword: false,\r\n    showConfirmPassword: false,\r\n    submitAttempted: false,\r\n    emailExists: false\r\n  })\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value })\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword })\r\n  }\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showConfirmPassword: !values.showConfirmPassword })\r\n  }\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    setValues({ ...values, submitAttempted: true })\r\n\r\n    if (Validator.validate(values.email) === true)\r\n      if (values.email === values.confirmEmail)\r\n        if (values.password !== '')\r\n          if (values.password === values.confirmPassword) {\r\n            let exists = !props.createUser(\r\n              values.name,\r\n              values.email,\r\n              values.password\r\n            )\r\n            setValues({ ...values, emailExists: exists })\r\n          }\r\n  }\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: '100vh', textAlign: 'center' }}\r\n          direction='column'\r\n          justify='center'\r\n          alignItems='center'\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 'bold',\r\n                fontSize: 42\r\n              }}\r\n            >\r\n              Create a new Lorelines account\r\n            </Typography>\r\n          </Grid>\r\n          {values.emailExists && (\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.error}\r\n                style={{ padding: 5, fontSize: 16 }}\r\n              >\r\n                a user with that email already exists\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='name'\r\n              label='Name'\r\n              margin='normal'\r\n              value={values.name}\r\n              onChange={handleChange('name')}\r\n              error={values.submitAttempted && values.name === ''}\r\n              helperText={\r\n                values.submitAttempted && values.name === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='email'\r\n              label='Email'\r\n              margin='normal'\r\n              value={values.email}\r\n              onChange={handleChange('email')}\r\n              error={\r\n                (values.submitAttempted && values.email === '') ||\r\n                (values.submitAttempted &&\r\n                  Validator.validate(values.email) === false)\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.email === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' ||\r\n                    (values.submitAttempted &&\r\n                      Validator.validate(values.email) === false)\r\n                  ? 'invalid email address'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='confirmEmail'\r\n              label='Confirm Email'\r\n              margin='normal'\r\n              value={values.confirmEmail}\r\n              onChange={handleChange('confirmEmail')}\r\n              error={\r\n                values.email !== values.confirmEmail ||\r\n                (values.submitAttempted && values.confirmEmail === '')\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmEmail === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || values.email !== values.confirmEmail\r\n                  ? 'emails do not match'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='pass'\r\n              label='Password'\r\n              margin='normal'\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              onChange={handleChange('password')}\r\n              error={values.submitAttempted && values.password === ''}\r\n              helperText={\r\n                values.submitAttempted && values.password === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      aria-label='toggle password visibility'\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='confirmpass'\r\n              label='Confirm Password'\r\n              margin='normal'\r\n              type={values.showConfirmPassword ? 'text' : 'password'}\r\n              value={values.confirmpassword}\r\n              onChange={handleChange('confirmPassword')}\r\n              error={\r\n                values.password !== values.confirmPassword ||\r\n                (values.submitAttempted && values.confirmPassword === '')\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmPassword === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || values.password !== values.confirmPassword\r\n                  ? 'passwords do not match'\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      aria-label='toggle password visibility'\r\n                      onClick={handleClickShowConfirmPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showConfirmPassword ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: '50px',\r\n                width: '260px'\r\n              }}\r\n              type='submit'\r\n              color='primary'\r\n              variant='contained'\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              <Link className={classes.link} to='/'>\r\n                Go back\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ minHeight: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Thank you for creating a Lorelines account</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>oof that sucks</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  CssBaseline,\r\n  makeStyles\r\n} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nimport LoginForm from './components/LoginForm'\r\nimport Home from './components/Home'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport RegisterConfirmation from './components/RegisterConfirmation'\r\nimport ForgotPassword from './components/ForgotPassword'\r\n\r\nconst uuidv4 = require('uuid/v4')\r\n\r\nconst light = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#d9d9d9',\r\n      text: '#fff',\r\n      icons: '#000'\r\n    },\r\n    secondary: { main: '#000' },\r\n    error: { main: '#ff0000' }\r\n  }\r\n})\r\n\r\nconst dark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#222',\r\n      text: '#fff',\r\n      icons: '#fff'\r\n    },\r\n    secondary: { main: '#fff' },\r\n    error: { main: '#ff0000' },\r\n    type: 'dark'\r\n  }\r\n})\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  center: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState({})\r\n  const [auth, setAuth] = useState(false)\r\n  const [theme, setTheme] = useState('dark')\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('token')\r\n    if (token) {\r\n      axios\r\n        .put('https://lorelines-expressapi.herokuapp.com/api/users/token', {\r\n          token\r\n        })\r\n        .then(res => {\r\n          localStorage.setItem('token', res.data)\r\n          console.log(res.data)\r\n          setAuth(true)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  })\r\n\r\n  const tryLogin = async (email, password) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        'https://lorelines-expressapi.herokuapp.com/api/users/token',\r\n        {\r\n          email,\r\n          password\r\n        }\r\n      )\r\n      localStorage.setItem('token', data)\r\n      setAuth(true)\r\n      return true\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const createUser = async (name, email, password) => {\r\n    try {\r\n      let id = uuidv4()\r\n\r\n      const { data } = await axios.post(\r\n        'https://lorelines-expressapi.herokuapp.com/api/users',\r\n        {\r\n          id,\r\n          name,\r\n          email,\r\n          password\r\n        }\r\n      )\r\n      localStorage.setItem('token', data)\r\n      setAuth(true)\r\n      return true\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token')\r\n    setAuth(false)\r\n  }\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme === 'dark' ? dark : light}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <div className={classes.root}>\r\n          {auth && <Redirect to='/app' />}\r\n          <Route path='/app'>\r\n            <Home logout={logout} auth={auth} />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            <LoginForm className={classes.center} tryLogin={tryLogin} />\r\n          </Route>\r\n          <Route path='/forgot' component={ForgotPassword} />\r\n          <Route exact path='/register'>\r\n            <RegisterForm createUser={createUser} />\r\n          </Route>\r\n          <Route path='/register/confirm' component={RegisterConfirmation} />\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.e2142875.svg\";"],"sourceRoot":""}