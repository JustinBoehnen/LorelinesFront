{"version":3,"sources":["images/logo.svg","components/LoginForm.js","components/Topbar.js","components/Sidebar.js","components/Account.js","components/Home.js","components/RegisterForm.js","components/RegisterConfirmation.js","components/ForgotPassword.js","structures/timeline/TimelineNode.js","components/Testing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","content","flexGrow","svg","fill","palette","secondary","main","link","color","textDecoration","field","width","minWidth","LoginForm","props","useState","email","setEmail","password","setPassword","submitAttempted","setSubmitAttempted","classes","onSubmit","e","preventDefault","Validator","validate","tryLogin","className","Grid","style","minHeight","textAlign","container","direction","justify","alignItems","alt","src","Logo","item","Typography","padding","fontWeight","fontSize","TextField","error","helperText","name","label","variant","margin","autoComplete","InputProps","startAdornment","InputAdornment","position","xmlns","viewBox","id","data-name","d","value","onChange","target","type","Button","marginTop","borderRadius","onClick","to","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","toolbar","justifyContent","mixins","logo","height","orange","primary","logout","backgroundColor","Topbar","AppBar","clsx","drawerOpen","Toolbar","IconButton","aria-label","setDrawerOpen","edge","Menu","cx","cy","r","flexShrink","whiteSpace","overflowX","drawerClose","breakpoints","up","spacing","Sidebar","Drawer","paper","open","Close","Divider","List","ListItem","button","key","ListItemIcon","AccountCircle","ListItemText","Apps","LibraryAdd","Timeline","Info","RegisterForm","box","borderStyle","borderWidth","Home","path","component","Account","render","React","confirmEmail","confirmPassword","showPassword","showConfirmPassword","values","setValues","handleChange","prop","event","handleMouseDownPassword","endAdornment","onMouseDown","Visibility","VisibilityOff","confirmpassword","history","push","uuidv4","require","TimelineNode","_id","_content","_pos","x","y","this","App","node","console","log","light","createMuiTheme","contrastText","text","icons","dark","center","flex","flexDirection","Boolean","window","location","hostname","match","ReactDOM","auth","setAuth","setTheme","payload","CssBaseline","pathname","exact","tryEmail","tryPassword","ForgotPassword","Testing","RegisterConfirmation","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05164a0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e2142875.svg\";","import React, { useState } from 'react'\r\nimport Logo from '../images/logo.svg'\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport Validator from 'email-validator'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  svg: {\r\n    fill: theme.palette.secondary.main\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  },\r\n  field: {\r\n    width: '20vw',\r\n    minWidth: '250px'\r\n  }\r\n}))\r\n\r\nexport default function LoginForm(props) {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [submitAttempted, setSubmitAttempted] = useState(false)\r\n\r\n  const classes = useStyles()\r\n  //const onSubmit = (e) => {\r\n  //    e.preventDefault();\r\n  //}\r\n\r\n  const onEmailChange = e => setEmail(e.target.value)\r\n  const onPasswordChange = e => setPassword(e.target.value)\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    setSubmitAttempted(true)\r\n\r\n    if (Validator.validate(email) && password !== '')\r\n      props.tryLogin(email, password)\r\n  }\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid\r\n          style={{ minHeight: '100vh', textAlign: 'center' }}\r\n          container\r\n          direction='column'\r\n          justify='center'\r\n          alignItems='center'\r\n        >\r\n          <img alt='logo' src={Logo} width={160} />\r\n          <br />\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 900,\r\n                fontSize: 50\r\n              }}\r\n            >\r\n              Log in to Lorelines\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={\r\n                (submitAttempted && email === '') ||\r\n                (submitAttempted && !Validator.validate(email))\r\n              }\r\n              helperText={\r\n                submitAttempted && email === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || (submitAttempted && !Validator.validate(email))\r\n                  ? 'invalid email address'\r\n                  : ''\r\n              }\r\n              name='email'\r\n              label='Email'\r\n              variant='outlined'\r\n              margin='normal'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <svg\r\n                      className={classes.svg}\r\n                      xmlns='http://www.w3.org/2000/svg'\r\n                      viewBox='0 0 35.65 29.65'\r\n                      width={30}\r\n                    >\r\n                      <title>icon_email</title>\r\n                      <g id='Layer_2' data-name='Layer 2'>\r\n                        <g id='Layer_1-2' data-name='Layer 1'>\r\n                          <path\r\n                            className='cls-1'\r\n                            d='M21,16.72a4.94,4.94,0,0,1-6.31,0L1.22,5.54A.75.75,0,0,0,0,6.12V25.47a4.18,4.18,0,0,0,4.18,4.18H31.47a4.18,4.18,0,0,0,4.18-4.18V6.12a.75.75,0,0,0-1.23-.58Z'\r\n                          />\r\n                          <path\r\n                            className='cls-1'\r\n                            d='M16.58,14.42a2,2,0,0,0,2.48,0L34,2A.73.73,0,0,0,34,.88,4.09,4.09,0,0,0,31.47,0H4.18A4.09,4.09,0,0,0,1.64.88.72.72,0,0,0,1.65,2Z'\r\n                          />\r\n                        </g>\r\n                      </g>\r\n                    </svg>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              value={email}\r\n              onChange={onEmailChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={submitAttempted && password === ''}\r\n              helperText={\r\n                submitAttempted && password === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n              name='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              margin='normal'\r\n              type='password'\r\n              autoComplete='off'\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <svg\r\n                      className={classes.svg}\r\n                      xmlns='http://www.w3.org/2000/svg'\r\n                      viewBox='0 0 35.65 36.56'\r\n                      width={30}\r\n                    >\r\n                      <title>icon_lock</title>\r\n                      <g id='Layer_2' data-name='Layer 2'>\r\n                        <g id='Layer_1-2' data-name='Layer 1'>\r\n                          <path\r\n                            className='cls-1'\r\n                            d='M33.76,16.32a1.88,1.88,0,0,1-1.88-1.88V13.08C31.88,5.87,25.57,0,17.82,0s-14,5.87-14,13.08v1.36a1.89,1.89,0,0,1-1.89,1.88h0A1.89,1.89,0,0,0,0,18.21V32.38a4.18,4.18,0,0,0,4.18,4.18H31.47a4.18,4.18,0,0,0,4.18-4.18V18.21a1.89,1.89,0,0,0-1.89-1.89Zm-14,11.46v4a.74.74,0,0,1-.74.74H16.63a.74.74,0,0,1-.75-.74v-4a1.72,1.72,0,0,0-.55-1.24,3.61,3.61,0,1,1,5,0A1.7,1.7,0,0,0,19.76,27.78ZM25,16.32H10.65a1.88,1.88,0,0,1-1.88-1.88V13.08C8.77,8.62,12.83,5,17.82,5s9.06,3.62,9.06,8.08v1.36A1.88,1.88,0,0,1,25,16.32Z'\r\n                          />\r\n                        </g>\r\n                      </g>\r\n                    </svg>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: '50px',\r\n                width: '260px'\r\n              }}\r\n              type='submit'\r\n              color='primary'\r\n              variant='contained'\r\n              onClick={onSubmit}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              I forgot{' '}\r\n              <Link className={classes.link} to='/forgot'>\r\n                my password\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 30, fontSize: 20 }}>\r\n              Don't have a Lorelines account?{' '}\r\n              <Link className={classes.link} to='/register'>\r\n                Click here\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  IconButton,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { Menu } from '@material-ui/icons'\r\n\r\nconst drawerWidthExpanded = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidthExpanded,\r\n    width: `calc(100% - ${drawerWidthExpanded}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  logo: {\r\n    fill: '#fff',\r\n    height: 50\r\n  },\r\n  orange: {\r\n    fill: theme.palette.primary.main\r\n  },\r\n  logout: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: 'white',\r\n    fontSize: 14,\r\n    fontWeight: 'bolder',\r\n    marginLeft: 'auto',\r\n    marginRight: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'black',\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function Topbar(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={() => props.setDrawerOpen(true)}\r\n            edge='start'\r\n            className={clsx(\r\n              classes.menuButton,\r\n              props.drawerOpen && classes.hide\r\n            )}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 41.17 41.17'\r\n          >\r\n            <g id='Layer_2' data-name='Layer 2'>\r\n              <g id='Layer_1-2' data-name='Layer 1'>\r\n                <circle className='cls-1' cx='20.58' cy='20.58' r='20.58' />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M16.76,13.22a.46.46,0,0,0,.74-.12l1.21-2.4a1.51,1.51,0,0,0-.91-2.11A1.55,1.55,0,0,0,16,9.43l-.86,1.71a.46.46,0,0,0,.09.54Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M13.08,16.61a.47.47,0,0,0-.75.13L5.46,30.47a1.51,1.51,0,0,0,1.15,2.16,1.54,1.54,0,0,0,1.57-.87l6.53-13.07a.47.47,0,0,0-.09-.54Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M34.56,8.53A1.55,1.55,0,0,0,33,9.41L26.46,22.48a.46.46,0,0,0,.09.53l1.54,1.54a.46.46,0,0,0,.75-.12L35.71,10.7A1.51,1.51,0,0,0,34.56,8.53Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M24.41,28a.46.46,0,0,0-.75.12l-1.2,2.4a1.51,1.51,0,0,0,.91,2.11,1.55,1.55,0,0,0,1.81-.84L26,30a.46.46,0,0,0-.09-.54Z'\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d='M10.81,8.68a1.51,1.51,0,0,0-2.13,2.13L30.36,32.48a1.5,1.5,0,0,0,2.12-2.12Z'\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 168.56 43.24'\r\n          >\r\n            <g id='Layer_2' data-name='Layer 2'>\r\n              <g id='Layer_1-2' data-name='Layer 1'>\r\n                <path\r\n                  className='cls-1'\r\n                  d='M21.74,35.33c-6.19,0-11.95,4-15.55,4-.72,0-.92-.48-.92-1C5.27,27.81,21.54,4.2,31.73,4.2c1.28,0,1.8.52,1.8,1.35,0,3.28-8.11,11.31-13.31,11.31-.76,0-.92-.68-1.28-.68s-.36.84-.36,1.08c0,2.56,1.92,3.12,3.88,3.12,6.27,0,15.78-10.19,15.78-16.14C38.24,1.76,36.61,0,32.37,0,15.71,0,0,29.41,0,39c0,2.64,2.76,4.2,5.63,4.2,6.44,0,11.11-3,16.59-3a1.94,1.94,0,0,0,2-2A2.57,2.57,0,0,0,21.74,35.33Z'\r\n                />\r\n                <path\r\n                  className='cls-1'\r\n                  d='M88.64,36.53c-1.12,0-1.6.52-2.6.52-1.68,0-2.32-1.6-2.32-4a25.51,25.51,0,0,1,.64-5.12C93.15,25.42,99,18.1,99,13.19c0-2.72-1.76-4.68-5.84-4.68-5.83,0-11.86,9.23-14.14,17.87l-1.68.24a.77.77,0,0,0-.38.1c-.62-.9-2.08-1.5-4.66-1.5a13.2,13.2,0,0,0-7.6,2.42,5.59,5.59,0,0,1-2.31.81c-2.83,0-.72-2.51-4.15-2.51s-7.48,5.11-8,5.11h0c-.08,0-.12-.08-.12-.2a12.1,12.1,0,0,0,.88-3.92c0-.91-.28-1.63-1.12-1.63C48,25.3,44,29.41,39.36,29.41h0a8.15,8.15,0,0,1-8,7.16c-1.36,0-1.76-.76-1.76-1.6,0-3.76,5.92-6,10.91-6.4.64-.2,1.32-1.75,1.32-2.87,0-.64-.2-1.12-.76-1.16s-.88,0-1.32,0c-8.35,0-15,6.87-15,11.63,0,2.55,1.92,4.47,6.43,4.47,5.44,0,11.19-3.39,11.51-7.59A5.54,5.54,0,0,0,46,30.53a1.21,1.21,0,0,1,.36,1c0,1.76-1.8,6.51-1.8,7.27,0,1,1.6,1.36,3.24,1.36,1.87,0,2-1.16,2.83-2.2,1-1.63,4.2-6.39,6-6.39.8,0,1.24.84,2.32.84a6.74,6.74,0,0,0,1.74-.26,7.57,7.57,0,0,0-.86,3.34c0,2.87,2.19,5.27,7.43,5.27,4.39,0,9.11-2,9.11-4.71,0-.6-.44-1-1.24-1-1.48,0-2.4,1.72-5.31,1.72-3.48,0-3.48-1-3.48-1,5.33-.66,10.1-4.33,10.84-7.15a2,2,0,0,0,.91.19h.32a21.72,21.72,0,0,0-.4,4.12c0,4.56,1.76,7.91,6.11,7.91,2.28,0,5.36-1.44,5.36-3.31C89.48,36.81,89.32,36.53,88.64,36.53ZM91.2,12.27c1,0,1.59,1,1.59,2.44,0,2.63-2,6.91-7.51,9.63C87.08,18.26,89.92,12.27,91.2,12.27ZM66,32.69c-.32,0-.4-.16-.4-.4,0-1.88,3.24-4,4.88-4,.56,0,1.11.12,1.11.6C71.61,30.33,68,32.69,66,32.69Z'\r\n                />\r\n                <path\r\n                  className='cls-1'\r\n                  d='M101.23,35.05c-1.16,0-.92.84-2.48.84s-2.32-1.32-2.32-2.8c0-1.64,1.68-5.24,1.68-5.88a.75.75,0,0,0-.84-.71,13.7,13.7,0,0,0-4.12,1.11c-1.15,1.76-1.91,6.44-1.91,8.56,0,3.11,2.23,4.31,4.59,4.31,3.12,0,6.72-2.08,6.72-4.51A1.22,1.22,0,0,0,101.23,35.05Z'\r\n                />\r\n                <path\r\n                  className='cls-1'\r\n                  d='M162.61,28.89a27.75,27.75,0,0,0-4,.32,5.25,5.25,0,0,0-5-3.95c-5.48,0-14.79,11.71-20.38,11.71-1.44,0-1.64-.64-1.64-1a.49.49,0,0,1,0-.2c5.79-.72,11-5,11-7.88,0-1.51-1.44-2.67-5-2.67-6.41,0-11.31,4.63-12.25,8.81-1,.29-3.2,1.58-4.69,1.58-1,0-1-.84-1-1.28,0-1.32.72-2.12.72-3.6s-1.36-1.92-2.76-1.92c-3,0-7.55,3.68-8.19,3.68a.33.33,0,0,1-.32-.36c0-.6.84-2.12.84-3.44,0-1.16-.68-2.15-3.16-2.15C101,26.54,101,30,101,30c0,.72.36,1.48,1.08,1.48s1.55-.64,2.47-.64a1.44,1.44,0,0,1,1.64,1.52c0,1.76-1.8,5-1.8,6.23,0,1,1.08,1.36,1.88,1.36a2.5,2.5,0,0,0,1.56-.56c.56-.48,5.4-5,6.24-5s.83.4.83,1c0,3,.12,4.47,2.6,4.47a13.56,13.56,0,0,0,7.86-3.05c.61,2.24,2.86,3.93,7.25,3.93,8.51,0,16.5-10.95,19.06-10.95a3.34,3.34,0,0,1,2,.56c-4.84,1.52-9,4-9,7.2,0,1.55,1.44,2.71,4.63,2.71,6.88,0,9.79-4.51,9.79-8.59v0c2.68.24,5.44,1.2,5.44,3.32,0,.4-.08.72-.08,1s.2.4.48.4c1.12,0,3.71-1.68,3.71-3.6S166.61,28.89,162.61,28.89Zm-31.69,3.4c0-1.88,3.24-4,4.87-4,.56,0,1.12.12,1.12.6,0,1.44-3.63,3.8-5.59,3.8C131,32.69,130.92,32.53,130.92,32.29Zm20.34,3.48c-.68,0-1-.36-1-.8,0-1.48,2-2.6,4.36-3.12a3.33,3.33,0,0,1,.12.88C154.78,34.25,153.66,35.77,151.26,35.77Z'\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <Button className={classes.logout}>Log Out</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbar} />\r\n    </div>\r\n  )\r\n}\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport {\r\n  AccountCircle,\r\n  LibraryAdd,\r\n  Apps,\r\n  Timeline,\r\n  List as ListIcon,\r\n  Info,\r\n  Close\r\n} from '@material-ui/icons'\r\n\r\nconst drawerWidthExpanded = 240\r\nconst drawerWidthCondensed = 58\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidthExpanded,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  drawerOpen: {\r\n    overflowX: 'hidden',\r\n    width: drawerWidthExpanded,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: drawerWidthCondensed, //theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidthCondensed //theme.spacing(9) + 1,\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant='permanent'\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: props.drawerOpen,\r\n          [classes.drawerClose]: !props.drawerOpen\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: props.drawerOpen,\r\n            [classes.drawerClose]: !props.drawerOpen\r\n          })\r\n        }}\r\n        open={props.drawerOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={() => props.setDrawerOpen(false)}>\r\n            <Close color='secondary' />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/account'>\r\n            <ListItem button key='Account'>\r\n              <ListItemIcon>\r\n                <AccountCircle color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Account' />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to='/app/lorelines'>\r\n            <ListItem button key='Lorelines'>\r\n              <ListItemIcon>\r\n                <Apps color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Lorelines' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/new'>\r\n            <ListItem button key='New Custom Entity'>\r\n              <ListItemIcon>\r\n                <LibraryAdd color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='New Custom Entity' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/timeline'>\r\n            <ListItem button key='Timeline'>\r\n              <ListItemIcon>\r\n                <Timeline color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Timeline' />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to='/app/directory'>\r\n            <ListItem button key='Directory'>\r\n              <ListItemIcon>\r\n                <ListIcon color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Directory' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to='/app/about'>\r\n            <ListItem button key='About Lorelines'>\r\n              <ListItemIcon>\r\n                <Info color='secondary' />\r\n              </ListItemIcon>\r\n              <ListItemText primary='About Lorelines' />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: '70vh', width: '70vw', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>This is the Account page yo</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport Topbar from './Topbar'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport Account from './Account'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  box: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px 2px 2px 2px',\r\n    backgroundColor: 'red'\r\n  }\r\n}))\r\n\r\nexport default function Home(props) {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      <Topbar drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\r\n      <div className={classes.root}>\r\n        <Sidebar drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\r\n        <Route path='/app/account' component={Account} />\r\n        <Route path='/app/lorelines' render={() => <h1>Lorelines</h1>} />\r\n        <Route path='/app/new' render={() => <div className={classes.box} />} />\r\n        <Route path='/app/timeline' render={() => <h1>Timeline</h1>} />\r\n        <Route path='/app/directory' render={() => <h1>Directory</h1>} />\r\n        <Route path='/app/about' render={() => <h1>About</h1>} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport Validator from 'email-validator'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  field: {\r\n    width: '23vw',\r\n    minWidth: '250px'\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm(props) {\r\n  const classes = useStyles()\r\n  const [values, setValues] = React.useState({\r\n    name: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    showPassword: false,\r\n    showConfirmPassword: false,\r\n    submitAttempted: false\r\n  })\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value })\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword })\r\n  }\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showConfirmPassword: !values.showConfirmPassword })\r\n  }\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    setValues({ ...values, submitAttempted: true })\r\n\r\n    if (Validator.validate(values.email) === true) {\r\n      if (values.email === values.confirmEmail) {\r\n        if (values.password !== '') {\r\n          if (values.password === values.confirmPassword) {\r\n            props.history.push('/register/confirm')\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: '100vh', textAlign: 'center' }}\r\n          direction='column'\r\n          justify='center'\r\n          alignItems='center'\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 'bold',\r\n                fontSize: 42\r\n              }}\r\n            >\r\n              Create a new Lorelines account\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='name'\r\n              label='Name'\r\n              margin='normal'\r\n              value={values.name}\r\n              onChange={handleChange('name')}\r\n              error={values.submitAttempted && values.name === ''}\r\n              helperText={\r\n                values.submitAttempted && values.name === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='email'\r\n              label='Email'\r\n              margin='normal'\r\n              value={values.email}\r\n              onChange={handleChange('email')}\r\n              error={\r\n                (values.submitAttempted && values.email === '') ||\r\n                (values.submitAttempted &&\r\n                  Validator.validate(values.email) === false)\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.email === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' ||\r\n                    (values.submitAttempted &&\r\n                      Validator.validate(values.email) === false)\r\n                  ? 'invalid email address'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='confirmEmail'\r\n              label='Confirm Email'\r\n              margin='normal'\r\n              value={values.confirmEmail}\r\n              onChange={handleChange('confirmEmail')}\r\n              error={\r\n                values.email !== values.confirmEmail ||\r\n                (values.submitAttempted && values.confirmEmail === '')\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmEmail === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || values.email !== values.confirmEmail\r\n                  ? 'emails do not match'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='pass'\r\n              label='Password'\r\n              margin='normal'\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              onChange={handleChange('password')}\r\n              error={values.submitAttempted && values.password === ''}\r\n              helperText={\r\n                values.submitAttempted && values.password === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      aria-label='toggle password visibility'\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name='confirmpass'\r\n              label='Confirm Password'\r\n              margin='normal'\r\n              type={values.showConfirmPassword ? 'text' : 'password'}\r\n              value={values.confirmpassword}\r\n              onChange={handleChange('confirmPassword')}\r\n              error={\r\n                values.password !== values.confirmPassword ||\r\n                (values.submitAttempted && values.confirmPassword === '')\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmPassword === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || values.password !== values.confirmPassword\r\n                  ? 'passwords do not match'\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      aria-label='toggle password visibility'\r\n                      onClick={handleClickShowConfirmPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showConfirmPassword ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: '50px',\r\n                width: '260px'\r\n              }}\r\n              type='submit'\r\n              color='primary'\r\n              variant='contained'\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              <Link className={classes.link} to='/'>\r\n                Go back\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ minHeight: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Thank you for creating a Lorelines account</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>oof that sucks</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","const uuidv4 = require('uuid/v4')\r\n\r\nexport default class TimelineNode {\r\n  _id = uuidv4()\r\n  _content = ''\r\n  _pos = { x: 0, y: 0 }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n\r\n  set id(value) {\r\n    this._id = value\r\n  }\r\n\r\n  get content() {\r\n    return this._content\r\n  }\r\n\r\n  set content(value) {\r\n    this._content = value\r\n  }\r\n\r\n  get pos() {\r\n    return this._pos\r\n  }\r\n\r\n  set pos(value) {\r\n    this._pos = value\r\n  }\r\n}\r\n\r\n/*\r\nclass EventNode extends TimelineNode {\r\n  constructor(id, content, pos, before, after) {\r\n    super(id, content, pos)\r\n\r\n    this.spell = spell\r\n  }\r\n}\r\n\r\nclass BranchNode extends TimelineNode {\r\n  constructor(id, content, pos) {\r\n    super(id, content, pos)\r\n\r\n    // Add a new property\r\n    this.spell = spell\r\n  }\r\n}\r\n*/\r\n","import React from 'react'\r\nimport { Grid, Button } from '@material-ui/core'\r\n\r\n//test imports\r\nimport TimelineNode from '../structures/timeline/TimelineNode'\r\n\r\nconsole.log('Welcome to the tests!')\r\n\r\nexport default function App() {\r\n  const Test1 = () => {\r\n    const node = new TimelineNode()\r\n    console.log(node)\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center' direction='column'>\r\n      <Grid item>\r\n        <p style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          This page is for the development and testing of lorelines.com\r\n          <br />\r\n          Output in the console\r\n        </p>\r\n      </Grid>\r\n      <Grid item padding={2}>\r\n        <Button\r\n          style={{\r\n            marginTop: '20px',\r\n            backgroundColor: 'green',\r\n            color: 'white'\r\n          }}\r\n          onClick={Test1}\r\n        >\r\n          Default TimelineNode\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  CssBaseline,\r\n  makeStyles\r\n} from '@material-ui/core'\r\n//import axios from 'axios'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nimport LoginForm from './components/LoginForm'\r\nimport Home from './components/Home'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport RegisterConfirmation from './components/RegisterConfirmation'\r\nimport ForgotPassword from './components/ForgotPassword'\r\n\r\n//test imports\r\nimport Testing from './components/Testing'\r\n\r\nconst light = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#d9d9d9',\r\n      text: '#fff',\r\n      icons: '#000'\r\n    },\r\n    secondary: {\r\n      // contrast: black\r\n      main: '#000'\r\n    }\r\n  }\r\n})\r\n\r\nconst dark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#222',\r\n      text: '#fff',\r\n      icons: '#fff'\r\n    },\r\n    secondary: {\r\n      // contrast: white\r\n      main: '#fff'\r\n    },\r\n    type: 'dark'\r\n  }\r\n})\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  center: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nexport default function App() {\r\n  const [email, setEmail] = useState('')\r\n  const [auth, setAuth] = useState(false)\r\n  const [theme, setTheme] = useState('dark')\r\n\r\n  const classes = useStyles()\r\n  const payload = {\r\n    email,\r\n    setTheme\r\n  }\r\n\r\n  const tryLogin = (tryEmail, tryPassword) => {\r\n    setAuth(true)\r\n    setEmail(tryEmail)\r\n\r\n    /*axios\r\n      .post('http://localhost:3000/api/user/auth', {\r\n        Email: { tryEmail },\r\n        Password: { tryPassword }\r\n      })\r\n      .then(res => console.log(res.error))\r\n      .catch(error => console.log(error))*/\r\n  }\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme === 'dark' ? dark : light}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <div className={classes.root}>\r\n          <Redirect\r\n            to={{\r\n              pathname: auth ? '/app' : '/'\r\n            }}\r\n          />\r\n\r\n          <Route exact path='/'>\r\n            <LoginForm className={classes.center} tryLogin={tryLogin} />\r\n          </Route>\r\n\r\n          <Route path='/forgot' component={ForgotPassword} />\r\n          <Route exact path='/testing' component={Testing} />\r\n          <Route path='/app'>\r\n            <Home props={payload} />\r\n          </Route>\r\n          <Route exact path='/register' component={RegisterForm} />\r\n          <Route path='/register/confirm' component={RegisterConfirmation} />\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}