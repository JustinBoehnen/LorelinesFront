{"version":3,"sources":["images/logo.svg","actions/index.js","components/LoginForm.js","components/Topbar.js","components/Sidebar.js","components/Timeline.js","components/Account.js","components/InstanceList.js","components/Directory.js","components/loreline_interaction/NewLorelineDialog.js","components/loreline_interaction/DeleteLorelineDialog.js","components/Lorelines.js","components/instance_fields/InstanceTextField.js","components/instance_fields/InstanceCheckBoxField.js","components/instance_fields/InstanceNumberField.js","components/instance_fields/InstanceHeader.js","components/instance_fields/InstanceRadioListField.js","components/instance_fields/InstanceDivider.js","components/EntityInstanceCreator.js","components/custom_entity_fields/EntityField.js","components/custom_entity_fields/SectionDivider.js","components/custom_entity_fields/RadioListEntityField.js","components/CustomEntityCreator.js","components/Home.js","components/RegisterForm.js","components/RegisterConfirmation.js","components/ForgotPassword.js","App.js","serviceWorker.js","reducers/index.js","reducers/UserReducer.js","reducers/DirectoryReducer.js","reducers/WindowReducer.js","reducers/LoadingReducer.js","reducers/ThemeReducer.js","reducers/CurrentLorelineReducer.js","reducers/LorelineArrayReducer.js","index.js"],"names":["module","exports","setUser","user","type","payload","setLoreline","lorelineId","setLorelineArray","lorelineArray","setLoading","isLoading","setWindowWidth","width","setWindowHeight","height","useStyles","makeStyles","theme","content","flexGrow","link","color","palette","secondary","main","textDecoration","field","minWidth","error","LoginForm","props","useState","email","setEmail","password","setPassword","submitAttempted","setSubmitAttempted","loginFailed","setLoginFailed","showPassword","setShowPassword","classes","onSubmit","e","a","preventDefault","Validator","validate","tryLogin","accept","className","Grid","style","minHeight","textAlign","container","direction","justify","alignItems","alt","src","Logo","item","Typography","padding","fontWeight","fontSize","TextField","helperText","name","label","variant","margin","autoComplete","InputProps","startAdornment","InputAdornment","position","Mail","value","onChange","target","Lock","endAdornment","IconButton","aria-label","onClick","onMouseDown","event","Visibility","VisibilityOff","Button","marginTop","borderRadius","to","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","toolbar","justifyContent","mixins","logo","fill","breakpoints","up","orange","primary","logoutButton","backgroundColor","logoutIcon","Topbar","useTheme","widthAboveMd","useMediaQuery","AppBar","clsx","drawerOpen","Toolbar","setDrawerOpen","edge","Menu","xmlns","viewBox","id","data-name","cx","cy","r","d","logout","ExitToApp","flexShrink","whiteSpace","overflowX","drawerClose","spacing","connect","state","loreline","Drawer","paper","open","Close","Divider","List","ListItem","button","key","ListItemIcon","AccountCircle","ListItemText","Apps","LibraryAdd","Timeline","disabled","Info","drawerPaper","anchor","window","InstanceList","entities","handleClick","setState","axios","get","this","then","res","data","map","entity","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","instances","instance","Component","Lorelines","NewLorelineDialog","Dialog","isOpen","onClose","handleNewDialogClose","fullWidth","DialogTitle","DialogContent","lorelineName","autoFocus","onLorelineNameChange","FormGroup","files","failed","alert","size","toFixed","setNewLorelineImage","handleFileChange","align","newLorelineImage","Tooltip","arrow","placement","title","FormControlLabel","control","Checkbox","checked","usingStaticEnities","toggleUsingStaticEntities","DialogActions","onNewLorelineSubmit","deletebutton","DeleteLorelineDialog","deleteDialogOpen","handleDeleteDialogClose","overflow","textOverflow","marginBottom","deleteLorelineName","DialogContentText","deleteLorelineFromDB","deleteLorelineId","card","selectedCard","border","cardimage","cardheader","dispatch","bindActionCreators","React","setDeleteDialogOpen","setUsingStaticEntities","newDialogOpen","setNewDialogOpen","setDeleteLorelineId","setDeleteLorelineName","creationFeedbackOpen","setCreationFeedbackOpen","setLorelineName","useEffect","GetLorelines","response","handleDeleteDialogOpen","handleFeedbackClose","reason","createNewLoreline","file","imagePath","FormData","append","post","headers","_boundary","image","delete","array","forEach","_id","splice","indexOf","Fab","bottom","right","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","Card","CardActionArea","console","log","CardMedia","CardHeader","subheader","Date","modified","toLocaleDateString","toLocaleTimeString","CardActions","Delete","FileCopy","flex","input","InstanceTextField","xs","InputBase","readOnly","multiline","rowsMax","placeholder","InstanceCheckBoxField","labelPlacement","InstanceNumberField","InstanceHeader","InstanceRadioListField","setValue","RadioGroup","options","option","i","Radio","InstanceDivider","CustomEntityCreator","addInstanceToDB","entityId","retreiveInstanceFromDB","fields","anchorEl","validationFailed","textTransform","index","startIcon","Save","handleCreateEntity","EntityField","errorStyle","changeLabel","typeName","remove","SectionDivider","setOptions","updateOptions","op","handleRemoveOption","length","handleOptionLabelChange","optionsNeedLabels","Option","removeOption","newBoxes","concat","addEntityToDB","handleAddItem","commonName","actualName","handleMenuClose","handleRemoveItem","handleMenuClick","currentTarget","handleFieldLabelChange","handleNameChange","handleColorChange","hex","handleSetRadioOptions","foreach","errorMessage","inputProps","onChangeComplete","keepMounted","Boolean","MenuItem","styleClasses","box","borderStyle","borderWidth","openWidth","closedWidth","topBar","Home","toggleDrawer","updateWindowDimensions","bind","addEventListener","removeEventListener","innerWidth","innerHeight","auth","path","EntityInstanceCreator","RegisterForm","confirmEmail","confirmPassword","showConfirmPassword","emailExists","values","setValues","handleChange","prop","handleMouseDownPassword","confirmpassword","exists","createUser","jwtDecode","require","light","createMuiTheme","contrastText","text","icons","themes","dark","center","flexDirection","App","loading","localStorage","setItem","removeItem","userData","token","getItem","put","temp","catch","colorTheme","Backdrop","CircularProgress","CssBaseline","exact","ForgotPassword","RegisterConfirmation","location","hostname","match","allReducers","combineReducers","directory","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd52754b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e2142875.svg\";","/** @format */\r\n\r\nexport const setUser = user => {\r\n  return {\r\n    type: 'USER_SET',\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const setLoreline = lorelineId => {\r\n  return {\r\n    type: 'LORELINE_CHANGED',\r\n    payload: lorelineId\r\n  }\r\n}\r\n\r\nexport const setLorelineArray = lorelineArray => {\r\n  return {\r\n    type: 'SET_LORELINE_ARRAY',\r\n    payload: lorelineArray\r\n  }\r\n}\r\n\r\nexport const setLoading = isLoading => {\r\n  return {\r\n    type: 'SET_LOADING',\r\n    payload: isLoading\r\n  }\r\n}\r\n\r\nexport const setTheme = theme => {\r\n  return {\r\n    type: 'SET_THEME',\r\n    payload: theme\r\n  }\r\n}\r\n\r\nexport const setWindowWidth = width => {\r\n  return {\r\n    type: 'SET_WINDOW_WIDTH',\r\n    payload: width\r\n  }\r\n}\r\n\r\nexport const setWindowHeight = height => {\r\n  return {\r\n    type: 'SET_WINDOW_HEIGHT',\r\n    payload: height\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport Logo from '../images/logo.svg';\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Grid,\r\n  IconButton\r\n} from '@material-ui/core';\r\n\r\nimport { Mail, Lock, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Validator from 'email-validator';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  },\r\n  field: {\r\n    width: '20vw',\r\n    minWidth: '250px'\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  }\r\n}));\r\n\r\nexport default function LoginForm(props) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [submitAttempted, setSubmitAttempted] = useState(false);\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  //const onSubmit = (e) => {\r\n  //    e.preventDefault();\r\n  //}\r\n\r\n  const onEmailChange = e => setEmail(e.target.value);\r\n\r\n  const onPasswordChange = e => setPassword(e.target.value);\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    setSubmitAttempted(true);\r\n\r\n    if (Validator.validate(email) && password !== '') {\r\n      let accept = await props.tryLogin(email, password);\r\n      if (!accept) setLoginFailed(true);\r\n      return accept;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const handleMouseDownPassword = event => event.preventDefault();\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: '100vh', textAlign: 'center' }}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <img alt=\"logo\" src={Logo} width={160} />\r\n          <br />\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 900,\r\n                fontSize: 50\r\n              }}\r\n            >\r\n              Log in to Lorelines\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={\r\n                (submitAttempted && email === '') ||\r\n                (submitAttempted && !Validator.validate(email))\r\n              }\r\n              helperText={\r\n                submitAttempted && email === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || (submitAttempted && !Validator.validate(email))\r\n                  ? 'invalid email address'\r\n                  : ''\r\n              }\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              autoComplete=\"off\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Mail color=\"secondary\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              value={email}\r\n              onChange={onEmailChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              error={submitAttempted && password === ''}\r\n              helperText={\r\n                submitAttempted && password === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              autoComplete=\"off\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Lock color=\"secondary\" />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n          </Grid>\r\n          {loginFailed && (\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.error}\r\n                style={{ padding: 5, fontSize: 16 }}\r\n              >\r\n                an incorrect email or password was provided\r\n                <br />\r\n                please try again\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: '50px',\r\n                width: '260px'\r\n              }}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={async e => await onSubmit(e)}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              I forgot{' '}\r\n              <Link className={classes.link} to=\"/forgot\">\r\n                my password\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 30, fontSize: 20 }}>\r\n              Don't have a Lorelines account?{' '}\r\n              <Link className={classes.link} to=\"/register\">\r\n                Click here\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  IconButton,\r\n  Button,\r\n  useMediaQuery,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport { Menu, ExitToApp } from '@material-ui/icons';\r\n\r\nconst drawerWidthExpanded = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidthExpanded,\r\n    width: `calc(100% - ${drawerWidthExpanded}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  logo: {\r\n    fill: '#fff',\r\n    height: 35,\r\n    [theme.breakpoints.up('md')]: {\r\n      height: 50\r\n    }\r\n  },\r\n  orange: {\r\n    fill: theme.palette.primary.main\r\n  },\r\n  logoutButton: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: 'white',\r\n    fontSize: 14,\r\n    fontWeight: 'bolder',\r\n    marginLeft: 'auto',\r\n    marginRight: 0,\r\n    '&:hover': {\r\n      backgroundColor: '#303030',\r\n      color: theme.palette.primary.main\r\n    }\r\n  },\r\n  logoutIcon: {\r\n    marginLeft: 'auto',\r\n    marginRight: 0\r\n  }\r\n}));\r\n\r\nexport default function Topbar(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const widthAboveMd = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  function LogoutButton() {\r\n    if (widthAboveMd)\r\n      return (\r\n        <Button className={classes.logoutButton} onClick={props.logout}>\r\n          Log Out\r\n        </Button>\r\n      );\r\n\r\n    return (\r\n      <IconButton className={classes.logoutIcon} onClick={props.logout}>\r\n        <ExitToApp />\r\n      </IconButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => props.setDrawerOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(\r\n              classes.menuButton,\r\n              props.drawerOpen && classes.hide\r\n            )}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 41.17 41.17\"\r\n          >\r\n            <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n              <g id=\"Layer_1-2\" data-name=\"Layer 1\">\r\n                <circle className=\"cls-1\" cx=\"20.58\" cy=\"20.58\" r=\"20.58\" />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M16.76,13.22a.46.46,0,0,0,.74-.12l1.21-2.4a1.51,1.51,0,0,0-.91-2.11A1.55,1.55,0,0,0,16,9.43l-.86,1.71a.46.46,0,0,0,.09.54Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M13.08,16.61a.47.47,0,0,0-.75.13L5.46,30.47a1.51,1.51,0,0,0,1.15,2.16,1.54,1.54,0,0,0,1.57-.87l6.53-13.07a.47.47,0,0,0-.09-.54Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M34.56,8.53A1.55,1.55,0,0,0,33,9.41L26.46,22.48a.46.46,0,0,0,.09.53l1.54,1.54a.46.46,0,0,0,.75-.12L35.71,10.7A1.51,1.51,0,0,0,34.56,8.53Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M24.41,28a.46.46,0,0,0-.75.12l-1.2,2.4a1.51,1.51,0,0,0,.91,2.11,1.55,1.55,0,0,0,1.81-.84L26,30a.46.46,0,0,0-.09-.54Z\"\r\n                />\r\n                <path\r\n                  className={classes.orange}\r\n                  d=\"M10.81,8.68a1.51,1.51,0,0,0-2.13,2.13L30.36,32.48a1.5,1.5,0,0,0,2.12-2.12Z\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <svg\r\n            className={classes.logo}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 168.56 43.24\"\r\n          >\r\n            <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n              <g id=\"Layer_1-2\" data-name=\"Layer 1\">\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M21.74,35.33c-6.19,0-11.95,4-15.55,4-.72,0-.92-.48-.92-1C5.27,27.81,21.54,4.2,31.73,4.2c1.28,0,1.8.52,1.8,1.35,0,3.28-8.11,11.31-13.31,11.31-.76,0-.92-.68-1.28-.68s-.36.84-.36,1.08c0,2.56,1.92,3.12,3.88,3.12,6.27,0,15.78-10.19,15.78-16.14C38.24,1.76,36.61,0,32.37,0,15.71,0,0,29.41,0,39c0,2.64,2.76,4.2,5.63,4.2,6.44,0,11.11-3,16.59-3a1.94,1.94,0,0,0,2-2A2.57,2.57,0,0,0,21.74,35.33Z\"\r\n                />\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M88.64,36.53c-1.12,0-1.6.52-2.6.52-1.68,0-2.32-1.6-2.32-4a25.51,25.51,0,0,1,.64-5.12C93.15,25.42,99,18.1,99,13.19c0-2.72-1.76-4.68-5.84-4.68-5.83,0-11.86,9.23-14.14,17.87l-1.68.24a.77.77,0,0,0-.38.1c-.62-.9-2.08-1.5-4.66-1.5a13.2,13.2,0,0,0-7.6,2.42,5.59,5.59,0,0,1-2.31.81c-2.83,0-.72-2.51-4.15-2.51s-7.48,5.11-8,5.11h0c-.08,0-.12-.08-.12-.2a12.1,12.1,0,0,0,.88-3.92c0-.91-.28-1.63-1.12-1.63C48,25.3,44,29.41,39.36,29.41h0a8.15,8.15,0,0,1-8,7.16c-1.36,0-1.76-.76-1.76-1.6,0-3.76,5.92-6,10.91-6.4.64-.2,1.32-1.75,1.32-2.87,0-.64-.2-1.12-.76-1.16s-.88,0-1.32,0c-8.35,0-15,6.87-15,11.63,0,2.55,1.92,4.47,6.43,4.47,5.44,0,11.19-3.39,11.51-7.59A5.54,5.54,0,0,0,46,30.53a1.21,1.21,0,0,1,.36,1c0,1.76-1.8,6.51-1.8,7.27,0,1,1.6,1.36,3.24,1.36,1.87,0,2-1.16,2.83-2.2,1-1.63,4.2-6.39,6-6.39.8,0,1.24.84,2.32.84a6.74,6.74,0,0,0,1.74-.26,7.57,7.57,0,0,0-.86,3.34c0,2.87,2.19,5.27,7.43,5.27,4.39,0,9.11-2,9.11-4.71,0-.6-.44-1-1.24-1-1.48,0-2.4,1.72-5.31,1.72-3.48,0-3.48-1-3.48-1,5.33-.66,10.1-4.33,10.84-7.15a2,2,0,0,0,.91.19h.32a21.72,21.72,0,0,0-.4,4.12c0,4.56,1.76,7.91,6.11,7.91,2.28,0,5.36-1.44,5.36-3.31C89.48,36.81,89.32,36.53,88.64,36.53ZM91.2,12.27c1,0,1.59,1,1.59,2.44,0,2.63-2,6.91-7.51,9.63C87.08,18.26,89.92,12.27,91.2,12.27ZM66,32.69c-.32,0-.4-.16-.4-.4,0-1.88,3.24-4,4.88-4,.56,0,1.11.12,1.11.6C71.61,30.33,68,32.69,66,32.69Z\"\r\n                />\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M101.23,35.05c-1.16,0-.92.84-2.48.84s-2.32-1.32-2.32-2.8c0-1.64,1.68-5.24,1.68-5.88a.75.75,0,0,0-.84-.71,13.7,13.7,0,0,0-4.12,1.11c-1.15,1.76-1.91,6.44-1.91,8.56,0,3.11,2.23,4.31,4.59,4.31,3.12,0,6.72-2.08,6.72-4.51A1.22,1.22,0,0,0,101.23,35.05Z\"\r\n                />\r\n                <path\r\n                  className=\"cls-1\"\r\n                  d=\"M162.61,28.89a27.75,27.75,0,0,0-4,.32,5.25,5.25,0,0,0-5-3.95c-5.48,0-14.79,11.71-20.38,11.71-1.44,0-1.64-.64-1.64-1a.49.49,0,0,1,0-.2c5.79-.72,11-5,11-7.88,0-1.51-1.44-2.67-5-2.67-6.41,0-11.31,4.63-12.25,8.81-1,.29-3.2,1.58-4.69,1.58-1,0-1-.84-1-1.28,0-1.32.72-2.12.72-3.6s-1.36-1.92-2.76-1.92c-3,0-7.55,3.68-8.19,3.68a.33.33,0,0,1-.32-.36c0-.6.84-2.12.84-3.44,0-1.16-.68-2.15-3.16-2.15C101,26.54,101,30,101,30c0,.72.36,1.48,1.08,1.48s1.55-.64,2.47-.64a1.44,1.44,0,0,1,1.64,1.52c0,1.76-1.8,5-1.8,6.23,0,1,1.08,1.36,1.88,1.36a2.5,2.5,0,0,0,1.56-.56c.56-.48,5.4-5,6.24-5s.83.4.83,1c0,3,.12,4.47,2.6,4.47a13.56,13.56,0,0,0,7.86-3.05c.61,2.24,2.86,3.93,7.25,3.93,8.51,0,16.5-10.95,19.06-10.95a3.34,3.34,0,0,1,2,.56c-4.84,1.52-9,4-9,7.2,0,1.55,1.44,2.71,4.63,2.71,6.88,0,9.79-4.51,9.79-8.59v0c2.68.24,5.44,1.2,5.44,3.32,0,.4-.08.72-.08,1s.2.4.48.4c1.12,0,3.71-1.68,3.71-3.6S166.61,28.89,162.61,28.89Zm-31.69,3.4c0-1.88,3.24-4,4.87-4,.56,0,1.12.12,1.12.6,0,1.44-3.63,3.8-5.59,3.8C131,32.69,130.92,32.53,130.92,32.29Zm20.34,3.48c-.68,0-1-.36-1-.8,0-1.48,2-2.6,4.36-3.12a3.33,3.33,0,0,1,.12.88C154.78,34.25,153.66,35.77,151.26,35.77Z\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <LogoutButton />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbar} />\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport {\r\n  AccountCircle,\r\n  LibraryAdd,\r\n  Apps,\r\n  Timeline,\r\n  List as ListIcon,\r\n  Info,\r\n  Close\r\n} from '@material-ui/icons';\r\n\r\nconst drawerWidthExpanded = 240;\r\nconst drawerWidthCondensed = 58;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidthExpanded,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  drawerOpen: {\r\n    overflowX: 'hidden',\r\n    width: drawerWidthExpanded,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: drawerWidthCondensed, //theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidthCondensed //theme.spacing(9) + 1,\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\nexport default connect(mapStateToProps)(function Sidebar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: props.drawerOpen,\r\n          [classes.drawerClose]: !props.drawerOpen\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: props.drawerOpen,\r\n            [classes.drawerClose]: !props.drawerOpen\r\n          })\r\n        }}\r\n        open={props.drawerOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={() => props.setDrawerOpen(false)}>\r\n            <Close color=\"secondary\" />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to=\"/app/account\">\r\n            <ListItem button key=\"Account\">\r\n              <ListItemIcon>\r\n                <AccountCircle color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Account\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to=\"/app/lorelines\">\r\n            <ListItem button key=\"Lorelines\">\r\n              <ListItemIcon>\r\n                <Apps color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Lorelines\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to=\"/app/directory/createinstance\">\r\n            <ListItem button key=\"Create Instance\">\r\n              <ListItemIcon>\r\n                <LibraryAdd color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Remove Me\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {props.loreline != null ? (\r\n            <Link className={classes.link} to=\"/app/timeline\">\r\n              <ListItem button key=\"Timeline\">\r\n                <ListItemIcon>\r\n                  <Timeline color=\"secondary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Timeline\" />\r\n              </ListItem>\r\n            </Link>\r\n          ) : (\r\n            <ListItem button key=\"Timeline\" disabled>\r\n              <ListItemIcon>\r\n                <Timeline color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Timeline\" />\r\n            </ListItem>\r\n          )}\r\n          {props.loreline != null ? (\r\n            <Link className={classes.link} to=\"/app/directory\">\r\n              <ListItem button key=\"Directory\">\r\n                <ListItemIcon>\r\n                  <ListIcon color=\"secondary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Directory\" />\r\n              </ListItem>\r\n            </Link>\r\n          ) : (\r\n            <ListItem button key=\"Directory\" disabled>\r\n              <ListItemIcon>\r\n                <ListIcon color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Directory\" />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.link} to=\"/app/about\">\r\n            <ListItem button key=\"About Lorelines\">\r\n              <ListItemIcon>\r\n                <Info color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"About Lorelines\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loreline: state.lorelineId\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\n\r\nimport FontDownloadIcon from \"@material-ui/icons/FontDownloadOutlined\";\r\nimport FormatListNumbered from \"@material-ui/icons/FormatListNumberedOutlined\";\r\nimport FlightTakeoffOutlined from \"@material-ui/icons/FlightTakeoffOutlined\";\r\nimport CallMade from \"@material-ui/icons/CallMadeOutlined\";\r\n\r\nconst drawerWidth = 120;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n\r\nexport default function Timeline() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: \"70vh\", width: \"70vw\", textAlign: \"center\" }}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Canvas and Drag/Drop Components in progress</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <div>\r\n        <Drawer className={classes.drawer} variant=\"permanent\" anchor=\"right\">\r\n          <div className={classes.toolbar}></div>\r\n          <List>\r\n            <ListItem button key=\"Event Node\">\r\n              <ListItemIcon>\r\n                <FontDownloadIcon color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Event Node\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Branching Event Node\">\r\n              <ListItemIcon>\r\n                <FormatListNumbered color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Branching Node\" />\r\n            </ListItem>\r\n            <ListItem button key=\"Tether\">\r\n              <ListItemIcon>\r\n                <CallMade color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Tether\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button key=\"Warp Node\">\r\n              <ListItemIcon>\r\n                <FlightTakeoffOutlined color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Warp Node\" />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\nexport default connect(mapStateToProps)(function Account(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{\r\n          height: '70vh',\r\n          textAlign: 'left'\r\n        }}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>\r\n            Hello, {props.user.name || 'null'}, this is your account view\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>Email: {props.user.email || 'null'}</Typography>\r\n          <Typography>\r\n            Lorelines: <b>3/5</b>\r\n          </Typography>\r\n          <Typography>Member Since: 12/02/19</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  );\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    window: state.window\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\r\n\r\nclass InstanceList extends Component {\r\n  state = { open: {}, entities: [] }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/directory/`\r\n      )\r\n      .then(res => {\r\n        const entities = res.data\r\n        this.setState({ entities })\r\n      })\r\n  }\r\n\r\n  handleClick = key => () => {\r\n    this.setState({ [key]: !this.state[key] })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <List>\r\n        {this.state.entities.map(entity => {\r\n          const open = this.state[entity.id] || false\r\n          return (\r\n            <div key={entity.id}>\r\n              <ListItem button onClick={this.handleClick(entity.id)}>\r\n                <ListItemText primary={entity.name} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse in={open} timeout='auto' unmountOnExit>\r\n                <List component='div' disablePadding>\r\n                  {entity.instances.map(instance => {\r\n                    return (\r\n                      <ListItem key={instance.id} button>\r\n                        <Typography>{instance.name}</Typography>\r\n                      </ListItem>\r\n                    )\r\n                  })}\r\n                </List>\r\n              </Collapse>\r\n            </div>\r\n          )\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n  return {\r\n    entities: state.entities,\r\n    lorelineId: state.lorelineId\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(InstanceList)\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Drawer\r\n} from '@material-ui/core';\r\n\r\n//import AddBox from '@material-ui/icons/AddBoxOutlined';\r\nimport InstanceList from './InstanceList';\r\n\r\nconst drawerWidth = 120\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function Lorelines(props) {\r\n  const classes = useStyles();\r\n  //const [loreLineName, setloreLineName] = useState('');\r\n  // const [submitAttempted, setSubmitAttempted] = useState(false);\r\n  //const [submitFailed, setSubmitFailed] = useState(false);\r\n  // const [values, setValues] = React.useState({\r\n  //   loreLineName: ''\r\n  // });\r\n\r\n  // const onLoreLineChange = e => setloreLineName(e.target.value);\r\n\r\n  // const handleChange = prop => event => {\r\n  //   setValues({ ...values, [prop]: event.target.value });\r\n  // };\r\n\r\n  // const onSubmit = async e => {\r\n  //   e.preventDefault();\r\n  //   setSubmitAttempted(true);\r\n\r\n  //   if (loreLineName !== '') {\r\n  //     let accept = await props.tryLorelineAdd(loreLineName);\r\n  //     if (!accept) setSubmitFailed(true);\r\n  //     return accept;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n      <main className={classes.root}>\r\n        <div>\r\n          <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          anchor=\"right\"\r\n          >\r\n            <div className={classes.toolbar}></div>\r\n            <InstanceList />\r\n          </Drawer>\r\n        </div>\r\n      </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Tooltip\r\n} from '@material-ui/core'\r\n\r\nexport default function NewLorelineDialog(props) {\r\n  const handleFileChange = files => {\r\n    const sizeInMB = 2\r\n    var failed = false\r\n\r\n    if (\r\n      files[0].type !== 'image/png' &&\r\n      files[0].type !== 'image/jpg' &&\r\n      files[0].type !== 'image/jpeg'\r\n    ) {\r\n      alert(\r\n        files[0].name +\r\n          ' is not an accepted image format! Accepted formats are:\\n.png .jpg .jpeg'\r\n      )\r\n      failed = true\r\n    }\r\n\r\n    if (files[0].size > 1048576 * sizeInMB) {\r\n      alert(\r\n        'File size exceeds ' +\r\n          sizeInMB +\r\n          'MB limit! File uploaded was: ' +\r\n          (files[0].size / 1048576).toFixed(2) +\r\n          'MB'\r\n      )\r\n      failed = true\r\n    }\r\n\r\n    if (!failed) props.setNewLorelineImage(files[0])\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.isOpen} onClose={props.handleNewDialogClose} fullWidth>\r\n      <DialogTitle>Create a new loreline:</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          error={props.submitAttempted && props.lorelineName === ''}\r\n          helperText={\r\n            props.submitAttempted && props.lorelineName === ''\r\n              ? 'This field cannot be empty!'\r\n              : ''\r\n          }\r\n          autoFocus\r\n          name=\"LorelineName\"\r\n          label=\"Loreline Name\"\r\n          margin=\"dense\"\r\n          autoComplete=\"off\"\r\n          value={props.lorelineName}\r\n          onChange={props.onLorelineNameChange}\r\n          fullWidth\r\n        />\r\n        <FormGroup>\r\n          <Button component=\"label\">\r\n            Upload Image\r\n            <input\r\n              type=\"file\"\r\n              accept=\".jpg, .jpeg, .png\"\r\n              onChange={e => handleFileChange(e.target.files)}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </Button>\r\n          <Typography align=\"center\">\r\n            {props.newLorelineImage !== null ? props.newLorelineImage.name : ''}\r\n          </Typography>\r\n          <Tooltip\r\n            arrow\r\n            placement=\"left\"\r\n            title=\"Toggles whether you would like pre-defined entites in your loreline (recommended for beginners)\"\r\n          >\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={props.usingStaticEnities}\r\n                  onChange={props.toggleUsingStaticEntities}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Import standard assets\"\r\n            />\r\n          </Tooltip>\r\n        </FormGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={async e => await props.onNewLorelineSubmit(e)}\r\n          style={{ color: '#1ece6c' }}\r\n          autoFocus\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button onClick={props.handleNewDialogClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport {\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  deletebutton: {\r\n    color: '#ea4b35',\r\n    '&:hover': {\r\n      color: '#000',\r\n      backgroundColor: '#ea4b35',\r\n      fontWeight: 'bolder'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function DeleteLorelineDialog(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.deleteDialogOpen}\r\n      onClose={props.handleDeleteDialogClose}\r\n    >\r\n      <DialogTitle>Are you sure you want to delete:</DialogTitle>\r\n      <DialogContent>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{\r\n            overflow: 'hidden',\r\n            textOverflow: 'clip',\r\n            marginTop: 16,\r\n            marginBottom: 22,\r\n            textAlign: 'center',\r\n            width: 400\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          {props.deleteLorelineName}\r\n        </Typography>\r\n        <DialogContentText\r\n          style={{\r\n            textAlign: 'center',\r\n            color: '#ea4b35'\r\n          }}\r\n        >\r\n          This will permently delete this loreline, this is irreversible!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={e => {\r\n            props.deleteLorelineFromDB(e, props.deleteLorelineId)\r\n          }}\r\n          className={classes.deletebutton}\r\n          autoFocus\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button onClick={props.handleDeleteDialogClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Snackbar,\r\n  IconButton,\r\n  Card,\r\n  CardHeader,\r\n  CardActionArea,\r\n  Fab,\r\n  Divider,\r\n  Tooltip,\r\n  CardMedia,\r\n  CardActions\r\n} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { Delete, FileCopy } from '@material-ui/icons'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { setLoreline, setLoading, setLorelineArray } from '../actions/index'\r\nimport NewLorelineDialog from './loreline_interaction/NewLorelineDialog'\r\nimport DeleteLorelineDialog from './loreline_interaction/DeleteLorelineDialog'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  },\r\n  field: {\r\n    width: '20vw',\r\n    minWidth: '250px'\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  },\r\n  card: {\r\n    textOverflow: 'ellipsis',\r\n    width: 350,\r\n    margin: 10\r\n  },\r\n  selectedCard: {\r\n    textOverflow: 'ellipsis',\r\n    width: 350,\r\n    margin: 10,\r\n    border: '2px solid #f78d1e'\r\n  },\r\n  cardimage: {\r\n    height: 140\r\n  },\r\n  cardheader: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    height: 35,\r\n    width: 320\r\n  },\r\n  deletebutton: {\r\n    '&:hover': {\r\n      color: '#ea4b35'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(function Lorelines(props) {\r\n  const classes = useStyles()\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = React.useState(false)\r\n  const [usingStaticEnities, setUsingStaticEntities] = React.useState(true)\r\n  const [newDialogOpen, setNewDialogOpen] = React.useState(false)\r\n  const [deleteLorelineId, setDeleteLorelineId] = React.useState('')\r\n  const [deleteLorelineName, setDeleteLorelineName] = React.useState('')\r\n  const [creationFeedbackOpen, setCreationFeedbackOpen] = React.useState(false)\r\n  const [lorelineName, setLorelineName] = useState('')\r\n  const [newLorelineImage, setNewLorelineImage] = useState(null)\r\n  const [submitAttempted, setSubmitAttempted] = useState(false)\r\n\r\n  useEffect(() => {\r\n    GetLorelines()\r\n  }, [])\r\n\r\n  const GetLorelines = async () => {\r\n    props.setLoading(true) // LOADING START: GET LORELINES\r\n    try {\r\n      const response = await axios.get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/lorelines`\r\n      )\r\n      props.setLorelineArray(response.data)\r\n      props.setLoading(false) // LOADING END: GET LORELINES\r\n    } catch (err) {\r\n      props.setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteDialogOpen = (id, name) => {\r\n    setDeleteLorelineId(id)\r\n    setDeleteLorelineName(name)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n\r\n  const handleNewDialogOpen = (id, name) => {\r\n    setNewDialogOpen(true)\r\n  }\r\n\r\n  const handleNewDialogClose = (id, name) => {\r\n    setNewDialogOpen(false)\r\n    setLorelineName('')\r\n    setUsingStaticEntities(true)\r\n    setSubmitAttempted(false)\r\n  }\r\n\r\n  const toggleUsingStaticEntities = () => {\r\n    setUsingStaticEntities(!usingStaticEnities)\r\n  }\r\n\r\n  const onLorelineNameChange = e => setLorelineName(e.target.value)\r\n\r\n  const handleSelectLoreline = id => {\r\n    console.log(id)\r\n    props.setLoreline(id)\r\n    GetLorelines()\r\n  }\r\n\r\n  const handleFeedbackClose = (event, reason) => {\r\n    if (reason !== 'clickaway') {\r\n      setCreationFeedbackOpen(false)\r\n    }\r\n  }\r\n\r\n  const createNewLoreline = async (name, file) => {\r\n    var imagePath = ''\r\n\r\n    if (file !== null) {\r\n      const data = new FormData()\r\n      data.append('image', file, file.name)\r\n\r\n      try {\r\n        await axios\r\n          .post(\r\n            `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/images`,\r\n            data,\r\n            {\r\n              headers: {\r\n                accept: 'application/json',\r\n                'Accept-Language': 'en-US,en;q=0.8',\r\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`\r\n              }\r\n            }\r\n          )\r\n          .then(res => {\r\n            imagePath = res.data ?? ''\r\n          })\r\n      } catch (err) {}\r\n    }\r\n\r\n    //default image\r\n    if (imagePath === '')\r\n      imagePath =\r\n        'https://lorelines-image-library.s3-us-west-2.amazonaws.com/default_loreline_image.png'\r\n\r\n    try {\r\n      await axios\r\n        .post(\r\n          `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/lorelines`,\r\n          {\r\n            name: name,\r\n            image: imagePath\r\n          }\r\n        )\r\n        .then(res => {\r\n          //const array = props.lorelineArray\r\n          //const newElem = {\r\n          //  _id: res.data,\r\n          //  name: name,\r\n          //  image: imagePath,\r\n          //  modified: Date.now()\r\n          //}\r\n          //array.unshift(newElem)\r\n          //props.setLorelineArray(array)\r\n          GetLorelines()\r\n          props.setLoading(false) // LOADING END: NEW LORELINE\r\n        })\r\n    } catch (err) {}\r\n    GetLorelines()\r\n  }\r\n\r\n  const deleteLorelineFromDB = async (e, id) => {\r\n    e.preventDefault()\r\n    props.setLoading(true) // LOADING START: DELETE LORELINE\r\n    handleDeleteDialogClose()\r\n    try {\r\n      await axios\r\n        .delete(\r\n          `https://lorelines-expressapi.herokuapp.com/api/users/${props.user.id}/lorelines/${id}`\r\n        )\r\n        .then(() => {\r\n          const array = [...props.lorelineArray]\r\n          array.forEach(loreline => {\r\n            if (loreline._id === id) array.splice(array.indexOf(loreline), 1)\r\n          })\r\n          props.setLorelineArray(array)\r\n          //GetLorelines()\r\n          props.setLoading(false) // LOADING END: DELETE LORELINE\r\n        })\r\n    } catch (err) {}\r\n  }\r\n\r\n  const onNewLorelineSubmit = async e => {\r\n    e.preventDefault()\r\n    setSubmitAttempted(true)\r\n    if (lorelineName !== '') {\r\n      props.setLoading(true) // LOADING START: NEW LORELINE\r\n      setLorelineName('')\r\n      setNewLorelineImage(null)\r\n      setSubmitAttempted(false)\r\n      //setCreationFeedbackOpen(true)\r\n      handleNewDialogClose()\r\n      createNewLoreline(lorelineName, newLorelineImage)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <form>\r\n        <div style={{ marginTop: 20 }}>\r\n          {/************************************Button that opens add loreline dialog******************************/}\r\n          <Fab\r\n            style={{\r\n              position: 'fixed',\r\n              bottom: 20,\r\n              right: 20,\r\n              zIndex: 1900\r\n            }}\r\n            variant=\"extended\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={classes.margin}\r\n            onClick={() => handleNewDialogOpen()}\r\n          >\r\n            <AddIcon />\r\n            New Loreline\r\n          </Fab>\r\n          {/*********************** Popup menu for FAB ****************************************/}\r\n          <NewLorelineDialog\r\n            isOpen={newDialogOpen}\r\n            handleNewDialogClose={handleNewDialogClose}\r\n            submitAttempted={submitAttempted}\r\n            lorelineName={lorelineName}\r\n            onLorelineNameChange={onLorelineNameChange}\r\n            usingStaticEnities={usingStaticEnities}\r\n            toggleUsingStaticEntities={toggleUsingStaticEntities}\r\n            onNewLorelineSubmit={onNewLorelineSubmit}\r\n            setNewLorelineImage={setNewLorelineImage}\r\n            newLorelineImage={newLorelineImage}\r\n          />\r\n          {/*********************Small FeedBack to when a lorelines added*******************************/}\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left'\r\n            }}\r\n            open={creationFeedbackOpen}\r\n            autoHideDuration={6000}\r\n            onClose={handleFeedbackClose}\r\n            message=\"Loreline Added\"\r\n            action={\r\n              <React.Fragment>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  onClick={handleFeedbackClose}\r\n                >\r\n                  <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n\r\n          {/***************************************Display of the main screen**********************/}\r\n          <Typography style={{ marginLeft: 20, marginBottom: 20 }} variant=\"h4\">\r\n            Select a Loreline\r\n          </Typography>\r\n          <Divider />\r\n          <div className={classes.root}>\r\n            {/*************************************Dynamically adding cards to screen***************/}\r\n            <Grid\r\n              container\r\n              //spacing={2}\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              {props.lorelineArray.map(loreline => (\r\n                <Grid item key={props.lorelineArray.indexOf(loreline)}>\r\n                  <Card\r\n                    className={\r\n                      props.loreline === loreline._id\r\n                        ? classes.selectedCard\r\n                        : classes.card\r\n                    }\r\n                  >\r\n                    <Tooltip title=\"Select this loreline\">\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          handleSelectLoreline(loreline._id)\r\n                        }}\r\n                      >\r\n                        <CardMedia\r\n                          className={classes.cardimage}\r\n                          image={\r\n                            loreline.image ??\r\n                            'https://lorelines-image-library.s3-us-west-2.amazonaws.com/default_loreline_image.png'\r\n                          }\r\n                        />\r\n                        <CardHeader\r\n                          title={\r\n                            <Typography\r\n                              variant=\"h5\"\r\n                              className={classes.cardheader}\r\n                            >\r\n                              {loreline.name}\r\n                            </Typography>\r\n                          }\r\n                          subheader={`Last Modified: ${new Date(\r\n                            loreline.modified\r\n                          ).toLocaleDateString()} at \r\n                        ${new Date(loreline.modified).toLocaleTimeString()}`}\r\n                        />\r\n                      </CardActionArea>\r\n                    </Tooltip>\r\n                    <Divider />\r\n                    <CardActions>\r\n                      <Tooltip title=\"Delete\">\r\n                        <IconButton\r\n                          onClick={() =>\r\n                            handleDeleteDialogOpen(loreline._id, loreline.name)\r\n                          }\r\n                          className={classes.deletebutton}\r\n                        >\r\n                          <Delete />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Duplicate\">\r\n                        <IconButton\r\n                          onClick={() =>\r\n                            handleDeleteDialogOpen(loreline._id, loreline.name)\r\n                          }\r\n                        >\r\n                          <FileCopy />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </CardActions>\r\n                    {/************************************Delete Loreline PopUp ********************************/}\r\n                    <DeleteLorelineDialog\r\n                      deleteDialogOpen={deleteDialogOpen}\r\n                      handleDeleteDialogClose={handleDeleteDialogClose}\r\n                      deleteLorelineName={deleteLorelineName}\r\n                      deleteLorelineId={deleteLorelineId}\r\n                      deleteLorelineFromDB={deleteLorelineFromDB}\r\n                    />\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  )\r\n})\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    loreline: state.lorelineId,\r\n    lorelineArray: state.lorelineArray\r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setLoreline: setLoreline,\r\n      setLoading: setLoading,\r\n      setLorelineArray: setLorelineArray\r\n    },\r\n    dispatch\r\n  )\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { makeStyles, Grid, Card, InputBase } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function InstanceTextField(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <Grid container direction=\"column\">\r\n          <Grid xs item container direction=\"row\">\r\n            <Grid xs item>\r\n              <InputBase\r\n                className={classes.input}\r\n                value={props.label}\r\n                readOnly\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item>\r\n              <InputBase\r\n                multiline\r\n                rowsMax=\"4\"\r\n                className={classes.input}\r\n                placeholder=\"Content\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  Checkbox,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    width: 300,\r\n    padding: 10,\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport default function InstanceCheckBoxField(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <FormControlLabel\r\n          control={<Checkbox color=\"primary\" />}\r\n          label={props.label}\r\n          labelPlacement=\"start\"\r\n        />\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { makeStyles, Grid, Card, InputBase, Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function InstanceNumberField(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Tooltip title=\"This is a number field\">\r\n        <Card className={classes.card}>\r\n          <Grid container direction=\"column\">\r\n            <Grid xs item container direction=\"row\">\r\n              <Grid xs item>\r\n                <InputBase\r\n                  className={classes.input}\r\n                  value={props.label}\r\n                  readOnly\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid item>\r\n                <InputBase\r\n                  type=\"number\"\r\n                  className={classes.input}\r\n                  placeholder=\"Content\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </Tooltip>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function InstanceHeader(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Typography variant=\"h5\">{props.label}</Typography>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Card,\r\n  InputBase,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  }\r\n}));\r\n\r\nexport default function InstanceRadioListField(props) {\r\n  const [value, setValue] = React.useState('[object Object]0');\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <Grid container direction=\"column\">\r\n          <Grid xs item container direction=\"row\">\r\n            <Grid xs item>\r\n              <InputBase\r\n                className={classes.input}\r\n                value={props.label}\r\n                readOnly\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid item style={{ textAlign: 'center' }}>\r\n              <RadioGroup value={value} onChange={handleChange}>\r\n                {props.options.map((option, i) => {\r\n                  return (\r\n                    <FormControlLabel\r\n                      key={option + i}\r\n                      value={option + i}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={option.name}\r\n                      labelPlacement=\"start\"\r\n                    />\r\n                  );\r\n                })}\r\n              </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { makeStyles, Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function InstanceDivider(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Divider />\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { List, ListItem, Grid, Button, Typography } from '@material-ui/core';\r\nimport { Save } from '@material-ui/icons';\r\nimport InstanceTextField from './instance_fields/InstanceTextField';\r\nimport InstanceCheckBoxField from './instance_fields/InstanceCheckBoxField';\r\nimport InstanceNumberField from './instance_fields/InstanceNumberField';\r\nimport InstanceHeader from './instance_fields/InstanceHeader';\r\nimport InstanceRadioListField from './instance_fields/InstanceRadioListField';\r\nimport InstanceDivider from './instance_fields/InstanceDivider';\r\n\r\nclass CustomEntityCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      entityId: '5e663836d052620017f8686d',\r\n      name: null,\r\n      color: null,\r\n      fields: [],\r\n      anchorEl: null,\r\n      validationFailed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retreiveInstanceFromDB();\r\n  }\r\n\r\n  addInstanceToDB = async entity => {\r\n    try {\r\n      await axios.post(\r\n        `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities/${this.state.entityId}/instances`,\r\n        {\r\n          name: entity.name,\r\n          content: entity.content\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  retreiveInstanceFromDB = async entity => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities/${this.state.entityId}`,\r\n        {}\r\n      );\r\n\r\n      this.setState({\r\n        name: data.name,\r\n        color: data.color,\r\n        fields: data.content\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        style={{ textAlign: 'center', marginTop: 20 }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"overline\">new instance of:</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"h4\"\r\n            style={{\r\n              color: this.state.color ?? '#ea4b35',\r\n              textTransform: 'uppercase'\r\n            }}\r\n          >\r\n            {this.state.name ?? 'undefined'}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <List>\r\n            {this.state.fields.map((field, i) => {\r\n              if (field.type === 'TEXT_FIELD')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceTextField index={i} label={field.name} />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === 'NUMBER_FIELD')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceNumberField index={i} label={field.name} />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === 'CHECKBOX_FIELD')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceCheckBoxField index={i} label={field.name} />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === 'RADIOLIST_FIELD')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceRadioListField\r\n                      index={i}\r\n                      label={field.name}\r\n                      options={field.content}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === 'SECTION_DIVIDER')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceDivider />\r\n                  </ListItem>\r\n                );\r\n              else if (field.type === 'SECTION_HEADER')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <InstanceHeader index={i} label={field.name} />\r\n                  </ListItem>\r\n                );\r\n              return;\r\n            })}\r\n          </List>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            startIcon={<Save />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: 150 }}\r\n            onClick={this.handleCreateEntity}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n  return {\r\n    lorelineId: state.lorelineId\r\n  };\r\n}\r\n\r\nexport default connect(mapStatetoProps)(CustomEntityCreator);\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  InputBase,\r\n  IconButton,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  delete: {\r\n    marginLeft: 'auto'\r\n  },\r\n  content: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function EntityField(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleLabelChange = e => {\r\n    props.changeLabel(props.index, e.target.value);\r\n  };\r\n\r\n  if (props.validationFailed && props.label === '')\r\n    var errorStyle = {\r\n      style: { border: '2px solid red' }\r\n    };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card} {...errorStyle}>\r\n        <Grid container direction=\"column\">\r\n          <Grid xs item container direction=\"row\">\r\n            <Grid xs item>\r\n              <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Label\"\r\n                onChange={handleLabelChange}\r\n                value={props.label}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"overline\">{props.typeName}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title={`Delete ${props.typeName}`}>\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                className={classes.delete}\r\n                onClick={() => props.remove(props.index)}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  IconButton,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  delete: {\r\n    marginLeft: 'auto'\r\n  },\r\n  content: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function SectionDivider(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <Grid container direction=\"column\">\r\n          <Grid xs item container direction=\"row\">\r\n            <Grid xs item>\r\n              <Tooltip title=\"Delete divider\">\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  className={classes.delete}\r\n                  onClick={() => props.remove(props.index)}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"overline\">DIVIDER</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </main>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  InputBase,\r\n  IconButton,\r\n  Tooltip,\r\n  List,\r\n  ListItem,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { Delete, Add } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    padding: 10\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  delete: {\r\n    marginLeft: 'auto'\r\n  },\r\n  content: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function EntityField(props) {\r\n  const [options, setOptions] = useState(props.options);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLabelChange = e => {\r\n    props.changeLabel(props.index, e.target.value);\r\n  };\r\n\r\n  const updateOptions = op => {\r\n    setOptions(op);\r\n    props.setOptions(props.index, options);\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    const newBoxes = options.concat({ label: '' });\r\n    updateOptions(newBoxes);\r\n  };\r\n\r\n  const handleRemoveOption = index => {\r\n    const array = [...options];\r\n\r\n    if (array.length > 1) {\r\n      array.splice(index, 1);\r\n\r\n      updateOptions(array);\r\n    }\r\n  };\r\n\r\n  const handleOptionLabelChange = (index, label) => {\r\n    const data = [...options];\r\n    data[index].label = label;\r\n\r\n    updateOptions(data);\r\n  };\r\n\r\n  const optionsNeedLabels = () => {\r\n    for (const option of options) {\r\n      if (option.label === '') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (props.validationFailed && (props.label === '' || optionsNeedLabels()))\r\n    var errorStyle = {\r\n      style: { border: '2px solid red' }\r\n    };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Tooltip title=\"The first option will be the default\">\r\n        <Card className={classes.card} {...errorStyle}>\r\n          <Grid container direction=\"column\">\r\n            <Grid xs item container direction=\"row\">\r\n              <Grid xs item>\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Label\"\r\n                  onChange={handleLabelChange}\r\n                  value={props.label}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"overline\">radio list</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <List>\r\n                {options.map((option, i) => {\r\n                  return (\r\n                    <ListItem key={option + i}>\r\n                      <Option\r\n                        index={i}\r\n                        removeOption={handleRemoveOption}\r\n                        changeLabel={handleOptionLabelChange}\r\n                        label={option.label}\r\n                      />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n                <Button\r\n                  startIcon={<Add />}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleAddOption}\r\n                >\r\n                  Add Option\r\n                </Button>\r\n              </List>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Delete radio list\">\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  className={classes.delete}\r\n                  onClick={() => props.remove(props.index)}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </Tooltip>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction Option(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleLabelChange = e => {\r\n    props.changeLabel(props.index, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"row\">\r\n      <Grid xs item>\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Option Name\"\r\n          onChange={handleLabelChange}\r\n          value={props.label}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Tooltip title=\"Delete option\" placement=\"right\">\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => props.removeOption(props.index)}\r\n          >\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Add, Save } from '@material-ui/icons';\r\nimport EntityField from './custom_entity_fields/EntityField';\r\nimport SectionDivider from './custom_entity_fields/SectionDivider.js';\r\nimport RadioListEntityField from './custom_entity_fields/RadioListEntityField';\r\nimport { BlockPicker } from 'react-color';\r\n\r\nclass CustomEntityCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      color: '#f78d1e',\r\n      fields: [],\r\n      anchorEl: null,\r\n      validationFailed: false\r\n    };\r\n  }\r\n\r\n  addEntityToDB = async entity => {\r\n    try {\r\n      await axios.post(\r\n        `https://lorelines-expressapi.herokuapp.com/api/lorelines/${this.props.lorelineId}/entities`,\r\n        {\r\n          name: entity.name,\r\n          color: entity.color,\r\n          content: entity.content\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  handleAddItem = (commonName, actualName) => {\r\n    this.setState({\r\n      fields: [\r\n        ...this.state.fields,\r\n        { commonName: commonName, actualName: actualName, label: '' }\r\n      ]\r\n    });\r\n    this.handleMenuClose();\r\n  };\r\n\r\n  handleRemoveItem = index => {\r\n    const array = [...this.state.fields];\r\n    array.splice(index, 1);\r\n    this.setState({ fields: array });\r\n  };\r\n\r\n  handleMenuClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleFieldLabelChange = (index, label) => {\r\n    const data = this.state.fields;\r\n    data[index].label = label;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleNameChange = e => this.setState({ name: e.target.value });\r\n\r\n  handleColorChange = color => this.setState({ color: color.hex });\r\n\r\n  handleSetRadioOptions = (index, options) => {\r\n    const data = this.state.fields;\r\n    data[index].options = options;\r\n\r\n    this.setState({ fields: data });\r\n  };\r\n\r\n  handleCreateEntity = () => {\r\n    let error = false;\r\n\r\n    if (this.state.name === '' || this.state.fields.length === 0) error = true;\r\n    else {\r\n      var content = [];\r\n\r\n      this.state.fields.foreach((field, i) => {\r\n        if (field.actualName === 'SECTION_DIVIDER') field.label = 'divider';\r\n        if (field.label === '') error = true;\r\n\r\n        content = content.concat({ type: field.actualName, name: field.label });\r\n\r\n        if (field.actualName === 'RADIOLIST_FIELD') {\r\n          content[i].content = [];\r\n\r\n          for (const option of field.options) {\r\n            if (option.label === '') error = true;\r\n\r\n            content[i].content = content[i].content.concat({\r\n              name: option.label\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ validationFailed: error });\r\n\r\n    const entity = {\r\n      name: this.state.name,\r\n      color: this.state.color,\r\n      content: content\r\n    };\r\n\r\n    if (!error) this.addEntityToDB(entity);\r\n  };\r\n\r\n  errorMessage = () => {\r\n    return (\r\n      <div>\r\n        <Typography>all fields must have a label</Typography>\r\n        {this.state.name === '' && (\r\n          <Typography>custom entity must be named</Typography>\r\n        )}\r\n        {this.state.fields.length === 0 && (\r\n          <Typography>custom entity must have at least one field</Typography>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        style={{ textAlign: 'center', marginTop: 20 }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <TextField\r\n            error={this.state.validationFailed && this.state.name === ''}\r\n            helperText={\r\n              this.state.validationFailed && this.state.name === ''\r\n                ? 'this field cannot be empty'\r\n                : ''\r\n            }\r\n            label=\"Custom Entity Name\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            inputProps={{ style: { color: this.state.color } }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Tooltip title=\"Select a color for your custom entity\">\r\n            <BlockPicker\r\n              color={this.state.color}\r\n              onChangeComplete={this.handleColorChange}\r\n              width=\"300\"\r\n            />\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <List>\r\n            {this.state.fields.map((field, i) => {\r\n              if (field.actualName === 'SECTION_DIVIDER')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <SectionDivider\r\n                      index={i}\r\n                      remove={this.handleRemoveItem}\r\n                      label={field.label}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else if (field.actualName === 'RADIOLIST_FIELD')\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <RadioListEntityField\r\n                      index={i}\r\n                      options={field.options ?? [{ label: '' }]}\r\n                      remove={this.handleRemoveItem}\r\n                      changeLabel={this.handleFieldLabelChange}\r\n                      label={field.label}\r\n                      setOptions={this.handleSetRadioOptions}\r\n                      validationFailed={this.state.validationFailed}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              else\r\n                return (\r\n                  <ListItem key={field + i}>\r\n                    <EntityField\r\n                      index={i}\r\n                      typeName={field.commonName}\r\n                      remove={this.handleRemoveItem}\r\n                      changeLabel={this.handleFieldLabelChange}\r\n                      label={field.label}\r\n                      validationFailed={this.state.validationFailed}\r\n                    />\r\n                  </ListItem>\r\n                );\r\n            })}\r\n          </List>\r\n        </Grid>\r\n        {this.state.validationFailed && (\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 5,\r\n                fontSize: 16\r\n              }}\r\n              color=\"error\"\r\n            >\r\n              {this.errorMessage()}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item>\r\n          <Button\r\n            startIcon={<Add />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: 150 }}\r\n            onClick={this.handleMenuClick}\r\n          >\r\n            Add Field\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={this.state.anchorEl}\r\n            keepMounted\r\n            open={Boolean(this.state.anchorEl)}\r\n            onClose={this.handleMenuClose}\r\n          >\r\n            <MenuItem onClick={() => this.handleAddItem('text', 'TEXT_FIELD')}>\r\n              Text\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => this.handleAddItem('number', 'NUMBER_FIELD')}\r\n            >\r\n              Number\r\n            </MenuItem>\r\n            <Tooltip\r\n              title=\"A list of references to other instances\"\r\n              placement=\"right\"\r\n            >\r\n              <MenuItem\r\n                onClick={() => this.handleAddItem('list', 'LIST_FIELD')}\r\n              >\r\n                List\r\n              </MenuItem>\r\n            </Tooltip>\r\n            <Tooltip\r\n              title=\"A single reference to another instance\"\r\n              placement=\"right\"\r\n            >\r\n              <MenuItem\r\n                onClick={() =>\r\n                  this.handleAddItem('reference', 'REFERENCE_FIELD')\r\n                }\r\n              >\r\n                Reference\r\n              </MenuItem>\r\n            </Tooltip>\r\n            <MenuItem\r\n              onClick={() => this.handleAddItem('checkbox', 'CHECKBOX_FIELD')}\r\n            >\r\n              Checkbox\r\n            </MenuItem>\r\n            <Tooltip\r\n              title=\"A list of options in which only one can be true\"\r\n              placement=\"right\"\r\n            >\r\n              <MenuItem\r\n                onClick={() =>\r\n                  this.handleAddItem('radiolist', 'RADIOLIST_FIELD')\r\n                }\r\n              >\r\n                Radio List\r\n              </MenuItem>\r\n            </Tooltip>\r\n            <MenuItem\r\n              onClick={() => this.handleAddItem('image', 'IMAGE_FIELD')}\r\n            >\r\n              Image\r\n            </MenuItem>\r\n            <Tooltip title=\"A bold header for organization\" placement=\"right\">\r\n              <MenuItem\r\n                onClick={() => this.handleAddItem('header', 'SECTION_HEADER')}\r\n              >\r\n                Header\r\n              </MenuItem>\r\n            </Tooltip>\r\n            <Tooltip\r\n              title=\"A vertical line to break up your sections\"\r\n              placement=\"right\"\r\n            >\r\n              <MenuItem\r\n                onClick={() => this.handleAddItem('divider', 'SECTION_DIVIDER')}\r\n              >\r\n                Divider\r\n              </MenuItem>\r\n            </Tooltip>\r\n          </Menu>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            startIcon={<Save />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: 150 }}\r\n            onClick={this.handleCreateEntity}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n  return {\r\n    lorelineId: state.lorelineId\r\n  };\r\n}\r\n\r\nexport default connect(mapStatetoProps)(CustomEntityCreator);\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { setWindowWidth, setWindowHeight, setLoading } from '../actions/index'\r\n\r\nimport Topbar from './Topbar'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport Timeline from './Timeline'\r\nimport Account from './Account'\r\nimport Directory from './Directory'\r\n//import About from './About';\r\nimport Lorelines from './Lorelines'\r\n//import CreateInstance from './CreateInstance';\r\nimport EntityInstanceCreator from './EntityInstanceCreator'\r\nimport CustomEntityCreator from './CustomEntityCreator'\r\n\r\nconst styleClasses = () => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  box: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px 2px 2px 2px',\r\n    backgroundColor: 'red'\r\n  },\r\n  drawer: {\r\n    openWidth: 240,\r\n    closedWidth: 58\r\n  },\r\n  topBar: {\r\n    height: 64\r\n  }\r\n})\r\n\r\nconst drawerOpenWidth = 240\r\nconst drawerClosedWidth = 58\r\nconst topBarHeight = 64\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { drawerOpen: false, width: 0, height: 0 }\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions()\r\n    window.addEventListener('resize', this.updateWindowDimensions)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions)\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    if (this.state.drawerOpen)\r\n      this.setState({ width: window.innerWidth - drawerOpenWidth })\r\n    else this.setState({ width: window.innerWidth - drawerClosedWidth })\r\n\r\n    this.setState({ height: window.innerHeight - 64 })\r\n\r\n    this.props.setWindowWidth(this.state.width)\r\n    this.props.setWindowHeight(this.state.height)\r\n  }\r\n\r\n  toggleDrawer = open => {\r\n    this.setState({ drawerOpen: open })\r\n    this.updateWindowDimensions()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.props.auth && <Redirect to=\"/\" />}\r\n        <Topbar\r\n          logout={this.props.logout}\r\n          drawerOpen={this.state.drawerOpen}\r\n          setDrawerOpen={this.toggleDrawer}\r\n        />\r\n        <div className={styleClasses.root}>\r\n          <Sidebar\r\n            drawerOpen={this.state.drawerOpen}\r\n            setDrawerOpen={this.toggleDrawer}\r\n          />\r\n          <div\r\n            width={this.props.window.width}\r\n            height={this.props.window.height}\r\n            style={{\r\n              marginLeft: this.state.drawerOpen\r\n                ? drawerOpenWidth\r\n                : drawerClosedWidth\r\n            }}\r\n          >\r\n            <Route path=\"/app/account\">\r\n              <Account />\r\n            </Route>\r\n\r\n            <Route path=\"/app/lorelines\">\r\n              <Lorelines />\r\n            </Route>\r\n\r\n            <Route path=\"/app/new\">\r\n              <h1>Hello, World</h1>\r\n            </Route>\r\n\r\n            <Route path=\"/app/timeline\">\r\n              <Timeline />\r\n            </Route>\r\n\r\n            <Route path=\"/app/directory\">\r\n              <Directory />\r\n            </Route>\r\n\r\n            <Route path=\"/app/about\">\r\n              <EntityInstanceCreator />\r\n            </Route>\r\n\r\n            <Route path=\"/app/directory/createinstance\">\r\n              <CustomEntityCreator />\r\n            </Route>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    window: state.window\r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setWindowWidth: setWindowWidth,\r\n      setWindowHeight: setWindowHeight,\r\n      setLoading: setLoading\r\n    },\r\n    dispatch\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Home)\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  makeStyles,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport Validator from 'email-validator';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  field: {\r\n    width: '23vw',\r\n    minWidth: '250px'\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main\r\n  }\r\n}));\r\n\r\nexport default function RegisterForm(props) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    showPassword: false,\r\n    showConfirmPassword: false,\r\n    submitAttempted: false,\r\n    emailExists: false\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    setValues({ ...values, submitAttempted: true });\r\n\r\n    if (Validator.validate(values.email) === true)\r\n      if (values.email === values.confirmEmail)\r\n        if (values.password !== '')\r\n          if (values.password === values.confirmPassword) {\r\n            let exists = !props.createUser(\r\n              values.name,\r\n              values.email,\r\n              values.password\r\n            );\r\n            setValues({ ...values, emailExists: exists });\r\n          }\r\n  };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <form>\r\n        <Grid\r\n          style={{ minHeight: '100vh', textAlign: 'center' }}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          container\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                padding: 2,\r\n                fontWeight: 'bold',\r\n                fontSize: 42\r\n              }}\r\n            >\r\n              Create a new Lorelines account\r\n            </Typography>\r\n          </Grid>\r\n          {values.emailExists && (\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.error}\r\n                style={{ padding: 5, fontSize: 16 }}\r\n              >\r\n                a user with that email already exists\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              margin=\"normal\"\r\n              value={values.name}\r\n              onChange={handleChange('name')}\r\n              error={values.submitAttempted && values.name === ''}\r\n              helperText={\r\n                values.submitAttempted && values.name === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              value={values.email}\r\n              onChange={handleChange('email')}\r\n              error={\r\n                (values.submitAttempted && values.email === '') ||\r\n                (values.submitAttempted &&\r\n                  Validator.validate(values.email) === false)\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.email === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' ||\r\n                    (values.submitAttempted &&\r\n                      Validator.validate(values.email) === false)\r\n                  ? 'invalid email address'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"confirmEmail\"\r\n              label=\"Confirm Email\"\r\n              margin=\"normal\"\r\n              value={values.confirmEmail}\r\n              onChange={handleChange('confirmEmail')}\r\n              error={\r\n                values.email !== values.confirmEmail ||\r\n                (values.submitAttempted && values.confirmEmail === '')\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmEmail === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || values.email !== values.confirmEmail\r\n                  ? 'emails do not match'\r\n                  : ''\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"pass\"\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              onChange={handleChange('password')}\r\n              error={values.submitAttempted && values.password === ''}\r\n              helperText={\r\n                values.submitAttempted && values.password === ''\r\n                  ? 'this field cannot be empty'\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className={classes.field}\r\n              name=\"confirmpass\"\r\n              label=\"Confirm Password\"\r\n              margin=\"normal\"\r\n              type={values.showConfirmPassword ? 'text' : 'password'}\r\n              value={values.confirmpassword}\r\n              onChange={handleChange('confirmPassword')}\r\n              error={\r\n                values.password !== values.confirmPassword ||\r\n                (values.submitAttempted && values.confirmPassword === '')\r\n              }\r\n              helperText={\r\n                values.submitAttempted && values.confirmPassword === ''\r\n                  ? 'this field cannot be empty'\r\n                  : '' || values.password !== values.confirmPassword\r\n                  ? 'passwords do not match'\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowConfirmPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showConfirmPassword ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              style={{\r\n                marginTop: 16,\r\n                padding: 5,\r\n                fontSize: 22,\r\n                borderRadius: '50px',\r\n                width: '260px'\r\n              }}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ padding: 5, fontSize: 16 }}>\r\n              <Link className={classes.link} to=\"/\">\r\n                Go back\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ minHeight: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>Thank you for creating a Lorelines account</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\nexport default function RegisterForm() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <Grid\r\n        style={{ height: '100vh', textAlign: 'center' }}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        container\r\n      >\r\n        <Grid item>\r\n          <Typography>oof that sucks</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>\r\n            <Link className={classes.link} to='/'>\r\n              return to login\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  )\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  CssBaseline,\r\n  Backdrop,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\n\r\nimport './App.css'\r\nimport { setUser, setLoading } from './actions/index'\r\nimport LoginForm from './components/LoginForm'\r\nimport Home from './components/Home'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport RegisterConfirmation from './components/RegisterConfirmation'\r\nimport ForgotPassword from './components/ForgotPassword'\r\n\r\nconst jwtDecode = require('jwt-decode')\r\n\r\n// color theme definition: light\r\nconst light = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#d9d9d9',\r\n      text: '#fff',\r\n      icons: '#000'\r\n    },\r\n    secondary: { main: '#000' },\r\n    error: { main: '#ff0000' }\r\n  }\r\n})\r\n\r\n// color theme definition: dark\r\nconst dark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // accent: orange\r\n      main: '#f78d1e',\r\n      contrastText: '#fff'\r\n    },\r\n    drawer: {\r\n      main: '#222',\r\n      text: '#fff',\r\n      icons: '#fff'\r\n    },\r\n    secondary: { main: '#fff' },\r\n    error: { main: '#ff0000' },\r\n    type: 'dark'\r\n  }\r\n})\r\n\r\n// add themes to a js object\r\nconst themes = { dark: dark, light: light }\r\n\r\n// this component's styles\r\nconst styleClasses = theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  center: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      auth: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let token = localStorage.getItem('token')\r\n    if (token) {\r\n      axios\r\n        .put('https://lorelines-expressapi.herokuapp.com/api/users/token', {\r\n          token\r\n        })\r\n        .then(res => {\r\n          localStorage.setItem('token', res.data)\r\n          this.setState({ auth: true, userData: jwtDecode(res.data) })\r\n          var temp = jwtDecode(res.data)\r\n          this.props.setUser({\r\n            id: temp.id,\r\n            name: temp.name,\r\n            email: temp.email\r\n          })\r\n        })\r\n        .catch()\r\n    }\r\n  }\r\n\r\n  tryLogin = async (email, password) => {\r\n    try {\r\n      this.setState.loading = true\r\n      const { data } = await axios.post(\r\n        'https://lorelines-expressapi.herokuapp.com/api/users/token',\r\n        {\r\n          email,\r\n          password\r\n        }\r\n      )\r\n      localStorage.setItem('token', data)\r\n      this.setState({ loading: false, auth: true })\r\n      this.props.setUser(jwtDecode(data))\r\n      return true\r\n    } catch (err) {\r\n      this.setState.loading = false\r\n      return false\r\n    }\r\n  }\r\n\r\n  createUser = async (name, email, password) => {\r\n    try {\r\n      this.setState.loading = true\r\n      const { data } = await axios.post(\r\n        'https://lorelines-expressapi.herokuapp.com/api/users',\r\n        {\r\n          name,\r\n          email,\r\n          password\r\n        }\r\n      )\r\n      localStorage.setItem('token', data)\r\n      this.setState.auth = true\r\n      this.props.setLoading(false)\r\n      return true\r\n    } catch (err) {\r\n      this.setState.loading = false\r\n      return false\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('token')\r\n    this.setState({ auth: false, userData: null })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={themes[this.props.colorTheme]}>\r\n        <Backdrop style={{ zIndex: 2000 }} open={this.props.loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        <CssBaseline />\r\n        <div className={styleClasses.root}>\r\n          <Router>\r\n            {this.state.auth && <Redirect to=\"/app\" />}\r\n            <Route path=\"/app\">\r\n              <Home logout={this.logout} auth={this.state.auth} />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <LoginForm\r\n                className={styleClasses.center}\r\n                tryLogin={this.tryLogin}\r\n              />\r\n            </Route>\r\n            <Route path=\"/forgot\" component={ForgotPassword} />\r\n            <Route exact path=\"/register\">\r\n              <RegisterForm createUser={this.createUser} />\r\n            </Route>\r\n            <Route path=\"/register/confirm\" component={RegisterConfirmation} />\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    loading: state.loading,\r\n    colorTheme: state.colorTheme\r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    { setUser: setUser, setLoading: setLoading },\r\n    dispatch\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport { combineReducers } from 'redux'\r\nimport UserReducer from './UserReducer'\r\nimport DirectoryReducer from './DirectoryReducer'\r\nimport WindowReducer from './WindowReducer'\r\nimport LoadingReducer from './LoadingReducer'\r\nimport ThemeReducer from './ThemeReducer'\r\nimport CurrentLorelineReducer from './CurrentLorelineReducer'\r\nimport LorelineArrayReducer from './LorelineArrayReducer'\r\n\r\nconst allReducers = combineReducers({\r\n  user: UserReducer,\r\n  directory: DirectoryReducer,\r\n  window: WindowReducer,\r\n  loading: LoadingReducer,\r\n  colorTheme: ThemeReducer,\r\n  lorelineId: CurrentLorelineReducer,\r\n  lorelineArray: LorelineArrayReducer\r\n})\r\n\r\nexport default allReducers\r\n","/** @format */\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'USER_SET':\r\n      return action.payload;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'DIRECTORY_CHANGED':\r\n      return action.payload;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n\r\nexport default function(state = { width: 100, height: 100 }, action) {\r\n  switch (action.type) {\r\n    case 'SET_WINDOW_HEIGHT':\r\n      return { width: state.width, height: action.payload };\r\n    case 'SET_WINDOW_WIDTH':\r\n      return { width: action.payload, height: state.height };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n\r\nexport default function(state = false, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return action.payload\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n","/** @format */\r\n\r\nexport default function(state = 'dark', action) {\r\n  switch (action.type) {\r\n    case 'SET_THEME':\r\n      return action.payload;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","/** @format */\r\n\r\nexport default function(state = null, action) {\r\n  switch (action.type) {\r\n    case 'LORELINE_CHANGED':\r\n      return action.payload\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n","/** @format */\r\n\r\nexport default function(state = [], action) {\r\n  switch (action.type) {\r\n    case 'SET_LORELINE_ARRAY':\r\n      return action.payload\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(allReducers, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}